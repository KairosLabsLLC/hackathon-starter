{"version":3,"sources":["core.js","promise.js","net.js","util.js","AndroidPay.js","PublicKeyResponse.js","PaymentProductPublicKeyResponse.js","C2SCommunicatorConfiguration.js","IinDetailsResponse.js","C2SCommunicator.js","LabelTemplateElement.js","Attribute.js","AccountOnFileDisplayHints.js","AccountOnFile.js","PaymentProductDisplayHints.js","BasicPaymentProduct.js","BasicPaymentProductGroup.js","MaskedString.js","MaskingUtil.js","ValidationRuleLuhn.js","ValidationRuleExpirationDate.js","ValidationRuleFixedList.js","ValidationRuleLength.js","ValidationRuleRange.js","ValidationRuleRegularExpression.js","ValidationRuleEmailAddress.js","ValidationRuleBoletoBancarioRequiredness.js","ValidationRuleFactory.js","DataRestrictions.js","ValueMappingElement.js","FormElement.js","Tooltip.js","PaymentProductFieldDisplayHints.js","PaymentProductField.js","PaymentProduct.js","PaymentProductGroup.js","BasicPaymentProducts.js","BasicPaymentProductGroups.js","BasicPaymentItems.js","PaymentRequest.js","C2SPaymentProductContext.js","JOSEEncryptor.js","Encryptor.js","session.js"],"names":["global","connectsdk","modules","define","module","dependencies","fn","length","i","apply","this","exports","window","turing","Promise","singleton","self","pending","resolve","result","complete","reject","isSingleton","prototype","then","success","failure","push","type","shift","xhr","XMLHttpRequest","location","protocol","ActiveXObject","e","successfulRequest","request","status","responseText","ajax","url","options","respondToReadyState","readyState","contentType","mimeType","getResponseHeader","response","test","responseJSON","net","parseJSON","responseXML","parseXML","callback","promise","error","setHeaders","defaults","Accept","Content-Type","name","headers","hasOwnProperty","setRequestHeader","send","postBody","chain","method","toLowerCase","asynchronous","onreadystatechange","open","serialize","set","key","value","data","end","arguments","JSONPCallback","runCallback","json","teardown","methodName","parseInt","Date","getTime","trim","s","replace","object","results","encodeURIComponent","join","string","JSON","parse","DOMParser","text","parseFromString","xml","async","loadXML","run","scriptTag","document","createElement","id","src","that","onerror","body","appendChild","removeChild","get","post","jsonp","Util","createInstance","applePayPaymentProductId","androidPayPaymentProductId","bancontactPaymentProductId","getMetadata","screenSize","innerWidth","innerHeight","platformIdentifier","navigator","userAgent","sdkIdentifier","GC","rppEnabledPage","sdkCreator","base64Encode","stringify","o1","o2","o3","h1","h2","h3","h4","bits","b64","ac","enc","tmp_arr","charCodeAt","charAt","r","slice","filterOutProductsThatAreNotSupportedInThisBrowser","paymentProducts","product","paymentProductsThatAreNotSupportedInThisBrowser","indexOf","splice","instance","getInstance","_util","_C2SCommunicator","_paymentProductSpecificInputs","_context","setupRequestMethodData","networks","publicKey","androidPayEnvironment","environment","supportedMethods","merchantId","androidPay","allowedCardNetworks","paymentMethodTokenizationParameters","tokenizationType","parameters","setupRequestDetails","totalAmount","toFixed","total","label","amount","currency","setupRequestOptions","requestShipping","requestPayerEmail","requestPayerPhone","requestPayerName","_doCanMakePayment","jsonNetworks","jsonPublicKey","methodData","details","PaymentRequest","setTimeout","canMakePayment","_checkPaymentProductPublicKey","getPaymentProductPublicKey","_checkPaymentProductNetworks","getPaymentProductNetworks","_isPaymentRequestAPIAvailable","AndroidPay","C2SCommunicator","isAndroidPayAvailable","context","paymentProductSpecificInputs","isMerchantIdProvided","PublicKeyResponse","keyId","PaymentProductPublicKeyResponse","C2SCommunicatorConfiguration","sessionDetails","endpoints","PROD","EU","API","ASSETS","US","AMS","PAR","PREPROD","SANDBOX","INTEGRATION","DEV_NAMI","DEV_ISC","region","clientSessionId","clientSessionID","customerId","apiBaseUrl","assetsBaseUrl","IinDetailsResponse","countryCode","paymentProductId","isAllowedInContext","coBrands","Net","c2SCommunicatorConfiguration","paymentProduct","_c2SCommunicatorConfiguration","_cache","_providedPaymentProduct","_AndroidPay","_mapType","expirydate","numericstring","integer","expirationDate","_cleanJSON","il","fields","field","displayHints","validatorKey","dataRestrictions","validators","formElement","list","tooltip","image","sort","a","b","displayOrder","logo","_extendLogoUrl","postfix","_isPaymentProductInList","metadata","getBasicPaymentProducts","cacheBust","cacheKey","locale","isRecurring","res","console","warn","getBasicPaymentProductGroups","getPaymentProduct","errorId","errors","code","propertyName","message","httpStatusCode","getPaymentProductUrl","bancontact","forceBasicFlow","cleanedJSON","getPaymentProductGroup","paymentProductGroupId","getPaymentProductIdByCreditCardNumber","partialCreditCardNumber","iinDetailsResponse","convertContextToIinDetailsContext","bin","paymentContext","amountOfMoney","currencyCode","getPublicKey","publicKeyResponse","paymentProductPublicKeyResponse","getPaymentProductDirectory","convertAmount","source","target","getThirdPartyPaymentStatus","paymentId","LabelTemplateElement","attributeKey","mask","wildcardMask","Attribute","mustWriteReason","_parseJSON","_json","_labelTemplate","_labelTemplateElementByAttributeKey","labelTemplate","l","labelTemplateElement","AccountOnFileDisplayHints","labelTemplateElementByAttributeKey","_attributes","_attributeByKey","attributes","attribute","AccountOnFile","attributeByKey","getMaskedValueByAttributeKey","undefined","MaskingUtil","applyMask","PaymentProductDisplayHints","_accountsOnFile","_accountOnFileById","accountsOnFile","accountOnFile","BasicPaymentProduct","accountOnFileById","allowsRecurring","allowsTokenization","autoTokenized","maxAmount","minAmount","paymentMethod","mobileIntegrationLevel","usesRedirectionTo3rdParty","paymentProductGroup","BasicPaymentProductGroup","MaskedString","formattedValue","cursorIndex","_fillBuffer","index","offset","buffer","tempMask","valuec","Number","newValue","oldValue","split","maskc","c","cursor","tester","substring","getMaxLengthBasedOnMask","newLength","removeMask","valueIndex","inMask","ValidationRuleLuhn","errorMessageId","validate","luhnArr","sum","p","o","_validateDateFormat","ValidationRuleExpirationDate","now","getFullYear","getMonth","ValidationRuleFixedList","allowedValues","ValidationRuleLength","maxLength","minLength","ValidationRuleRange","maxValue","minValue","isNaN","ValidationRuleRegularExpression","regularExpression","RegExp","ValidationRuleEmailAddress","ValidationRuleBoletoBancarioRequiredness","fiscalNumberLength","fiscalNumberValue","ValidationRuleFactory","makeValidator","classType","toUpperCase","className","eval","DataRestrictions","isRequired","validationRules","validationRuleByType","_validationRules","_validationRuleByType","validationRuleFactory","validationRule","ValueMappingElement","displayName","FormElement","valueMapping","_valueMapping","Tooltip","PaymentProductFieldDisplayHints","obfuscate","placeholderLabel","preferredInputType","alwaysShow","PaymentProductField","_errorCodes","getErrorCodes","isValid","hasError","validator","applyWildcardMask","_paymentProductFields","_paymentProductFieldById","paymentProductField","PaymentProduct","basicPaymentProduct","paymentProductFields","paymentProductFieldById","PaymentProductGroup","_parseJson","_paymentProducts","_paymentProductById","_paymentProductByAccountOnFileId","aofs","j","jl","aof","BasicPaymentProducts","basicPaymentProducts","basicPaymentProductById","basicPaymentProductByAccountOnFileId","_paymentProductGroups","_paymentProductGroupById","paymentProductGroups","BasicPaymentProductGroups","basicPaymentProductGroups","basicPaymentProductGroupById","_products","_groups","_basicPaymentItems","doRemove","groupId","groupReplaced","productMethod","basicPaymentItems","basicPaymentItem","basicPaymentItemById","BasicPaymentItems","products","groups","_fieldValues","_paymentProduct","_accountOnFile","_tokenize","getErrorMessageIds","allRequiredFieldsPresent","getValue","getAccountOnFile","setValue","paymentProductFieldId","setTokenize","tokenize","getTokenize","concat","getValues","getMaskedValue","getMaskedValues","maskedString","getUnmaskedValues","setPaymentProduct","setAccountOnFile","getClientSessionID","C2SPaymentProductContext","payload","pki","forge","base64UrlEncode","asn1","str","util","encode64","createProtectedHeader","kid","JOSEHeader","alg","decodePemPublicKey","publickeyB64Encoded","publickeyB64Decoded","decode64","buffer2","createBuffer","publickeyObject2","fromDer","publicKeyFromAsn1","encryptContentEncryptionKey","CEK","encrypt","encryptPayload","encKey","initializationVector","cipher","createCipher","start","iv","update","finish","output","bytes","calculateAdditionalAuthenticatedDataLength","encodededProtectedHeader","lengthInBits","putInt32","calculateHMAC","macKey","cipherText","al","putBytes","hmacInput","hmac","create","sha512","digest","JOSEEncryptor","plainTextValues","protectedHeader","random","getBytesSync","CEKKEYLENGTH","encryptedContentEncryptionKey","encodedEncryptedContentEncryptionKey","IVLENGTH","encodededinitializationVector","encodedCipherText","calculatedHmac","Encryptor","publicKeyResponsePromise","paymentRequest","encryptedString","blob","nonce","bytesToHex","paymentValues","values","ownValues","Object","getOwnPropertyNames","session","_paymentProductId","_paymentRequestPayload","_paymentRequest","_paymentProductGroupId","_paymentProductGroup","_c2sCommunicator","_session","paymentRequestPayload","c2SPaymentProductContext","getBasicPaymentItems","useGroups","getIinDetails","getPaymentRequest","getEncryptor","Session"],"mappings":"CAAA,SAAAA,GACA,GAAAC,MAAAC,IAGAD,GAAAE,OAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAD,GAAAA,EAAAE,OACA,IAAA,GAAAC,GAAA,EAAAA,EAAAH,EAAAE,OAAAC,IACAH,EAAAG,GAAAN,EAAAG,EAAAG,GAGAN,GAAAE,GAAAE,EAAAG,MAAAC,KAAAL,QAIAL,EAAAC,WAAAA,EAEA,mBAAAU,WACAA,QAAAV,WAAAA,GAGAA,EAAAE,OAAA,qBAAA,WACA,MAAAF,KAIA,mBAAAE,UACAH,EAAAG,OAAAF,EAAAE,SAEA,mBAAAS,QAAAF,KAAAE,QAGAT,OAAA,qBAAA,WACA,GAAAH,GAAA,mBAAAY,QAAAF,KAAAE,OACAX,IAKA,OAJAD,GAAAC,WAAAA,EACA,mBAAAU,WACAA,QAAAV,WAAAA,GAEAA,ICtCAE,OAAA,sBAAA,mBAAA,SAAAU,GAkEA,MAjEA,UAAAb,GAIA,QAAAc,GAAAC,GACA,GAAAC,GAAAN,IACAA,MAAAO,WAOAP,KAAAQ,QAAA,SAAAC,GACAH,EAAAI,SAAA,UAAAD,IAQAT,KAAAW,OAAA,SAAAF,GACAH,EAAAI,SAAA,SAAAD,IAGAJ,IACAL,KAAAY,aAAA,GAKAR,EAAAS,WAQAC,KAAA,SAAAC,EAAAC,GAKA,MAJAhB,MAAAO,QAAAU,MACAT,QAAAO,EACAJ,OAAAK,IAEAhB,MASAU,SAAA,SAAAQ,EAAAT,GACA,KAAAT,KAAAO,QAAA,IACAP,KAAAO,QAAAY,QAAAD,GAAAT,KAKAnB,EAAAc,QAAAA,GAEAb,YAEAA,WAAAa,UClEAX,OAAA,kBAAA,mBAAA,SAAAF,GAwBA,QAAA6B,KACA,KAAA,mBAAAC,iBAAA,UAAAnB,OAAAoB,SAAAC,UAAArB,OAAAsB,eACA,MAAA,IAAAH,eAEA,KACA,MAAA,IAAAG,eAAA,sBACA,MAAAC,IACA,IACA,MAAA,IAAAD,eAAA,sBACA,MAAAC,IACA,IACA,MAAA,IAAAD,eAAA,kBACA,MAAAC,IAEA,OAAA,EAGA,QAAAC,GAAAC,GACA,MAAAA,GAAAC,QAAA,KAAAD,EAAAC,OAAA,KACA,KAAAD,EAAAC,QACA,GAAAD,EAAAC,QAAAD,EAAAE,aA6FA,QAAAC,GAAAC,EAAAC,GAWA,QAAAC,GAAAC,GACA,GAAA,GAAAP,EAAAO,WAAA,CACA,GAAAC,GAAAR,EAAAS,UAAAT,EAAAU,kBAAA,iBAAA,EAYA,IAVAC,EAAAV,OAAAD,EAAAC,OACAU,EAAAT,aAAAF,EAAAE,aACA,OAAAU,KAAAJ,GACAG,EAAAE,aAAAC,EAAAC,UAAAf,EAAAE,cACA,MAAAU,KAAAJ,KACAG,EAAAK,YAAAF,EAAAG,SAAAjB,EAAAE,eAGAS,EAAAvB,QAAAW,EAAAC,GAEAK,EAAAa,SACA,MAAAb,GAAAa,SAAAP,EAAAX,EAGAW,GAAAvB,SACAiB,EAAAjB,SAAAiB,EAAAjB,QAAAuB,EAAAX,GACAmB,GAAAA,EAAAtC,QAAA8B,EAAAX,KAEAK,EAAAe,OAAAf,EAAAe,MAAAT,EAAAX,GACAmB,GAAAA,EAAAnC,OAAA2B,EAAAX,KAMA,QAAAqB,KACA,GAAAC,IACAC,OAAA,+EACAC,eAAA,mBAMA,KAAA,GAAAC,KAAAH,GACAjB,EAAAqB,QAAAC,eAAAF,KACApB,EAAAqB,QAAAD,GAAAH,EAAAG,GAEA,KAAA,GAAAA,KAAApB,GAAAqB,QACA1B,EAAA4B,iBAAAH,EAAApB,EAAAqB,QAAAD,IAyBA,QAAAI,KACA,IACAR,IACArB,EAAA6B,KAAAxB,EAAAyB,UACA,MAAAhC,GACAO,EAAAe,OACAf,EAAAe,SApFA,GACAD,GAGAY,EAJA/B,EAAAP,IAGAkB,IAqHA,OAnHA/C,GAAAa,UACA0C,EAAA,GAAAvD,GAAAa,SAoDA,SAAA4B,IAAAA,MAEAA,EAAA2B,OAAA3B,EAAA2B,OAAA3B,EAAA2B,OAAAC,cAAA,MACA5B,EAAA6B,aAAA7B,EAAA6B,eAAA,EACA7B,EAAAyB,SAAAzB,EAAAyB,UAAA,GACA9B,EAAAmC,mBAAA7B,EACAN,EAAAoC,KAAA/B,EAAA2B,OAAA5B,EAAAC,EAAA6B,cAEA7B,EAAAqB,QAAArB,EAAAqB,YACArB,EAAAG,cACAH,EAAAqB,QAAA,gBAAArB,EAAAG,aAGA,gBAAAH,GAAAyB,WAEAzB,EAAAyB,SAAAhB,EAAAuB,UAAAhC,EAAAyB,WAgBAC,GACAO,IAAA,SAAAC,EAAAC,GAEA,MADAnC,GAAAqB,QAAAa,GAAAC,EACAT,GAGAF,KAAA,SAAAY,EAAAvB,GAIA,MAHAb,GAAAyB,SAAAhB,EAAAuB,UAAAI,GACApC,EAAAa,SAAAA,EACAW,IACAE,GAGAW,IAAA,SAAAxB,GAGA,MAFAb,GAAAa,SAAAA,EACAW,IACAE,GAGAU,KAAA,SAAAA,GAEA,MADApC,GAAAyB,SAAAhB,EAAAuB,UAAAI,GACAV,GAGA5C,KAAA,WAGA,MAFA4C,GAAAW,MACAvB,GAAAA,EAAAhC,KAAAf,MAAA+C,EAAAwB,WACAZ,IAOA,QAAAa,GAAAxC,EAAAhB,EAAAC,GAOA,QAAAwD,GAAAC,GACAnE,EAAAS,QAAA0D,GACAnE,EAAAoE,WARA,GAAApE,GAAAN,IACAA,MAAA+B,IAAAA,EACA/B,KAAA2E,WAAA,sBAAAC,UAAA,GAAAC,OAAAC,WACA9E,KAAAe,QAAAA,EACAf,KAAAgB,QAAAA,EAOAd,OAAAF,KAAA2E,YAAAH,EAhRA,GAAA/B,MAmBAsC,EAAA,GAAAA,KACA,SAAAC,GAAA,MAAAA,GAAAD,QACA,SAAAC,GAAA,MAAAA,GAAAC,QAAA,SAAA,IAAAA,QAAA,SAAA,IA2VA,OA5TAxC,GAAAuB,UAAA,SAAAkB,GACA,GAAAA,EAAA,CAEA,GAAA,gBAAAA,GACA,MAAAA,EAGA,IAAAC,KACA,KAAA,GAAAjB,KAAAgB,GACAC,EAAAlE,KAAAmE,mBAAAlB,GAAA,IAAAkB,mBAAAF,EAAAhB,IAEA,OAAAiB,GAAAE,KAAA,OAgBA5C,EAAAC,UAAA,SAAA4C,GACA,MAAA,gBAAAA,IAAAA,GACAA,EAAAP,EAAAO,GAMApF,OAAAqF,KAAAC,MAAAF,IAPA,MAgBApF,OAAAuF,UACAhD,EAAAG,SAAA,SAAA8C,GACA,OAAA,GAAAD,YAAAE,gBAAAD,EAAA,aAGAjD,EAAAG,SAAA,SAAA8C,GACA,GAAAE,GAAA,GAAApE,eAAA,mBAGA,OAFAoE,GAAAC,MAAA,QACAD,EAAAE,QAAAJ,GACAE,GA0KArB,EAAA1D,UAAAkF,IAAA,WACA/F,KAAAgG,UAAAC,SAAAC,cAAA,UACAlG,KAAAgG,UAAAG,GAAAnG,KAAA2E,WACA3E,KAAAgG,UAAAI,IAAApG,KAAA+B,IAAAkD,QAAA,aAAAjF,KAAA2E,WACA,IAAA0B,GAAArG,IACAA,MAAAgG,UAAAM,QAAA,WACAD,EAAArF,WAEAiF,SAAAM,KAAAC,YAAAxG,KAAAgG,YAGAzB,EAAA1D,UAAA6D,SAAA,WACAxE,OAAAF,KAAA2E,YAAA,IACA,WACAzE,QAAAF,KAAA2E,YACA,MAAAlD,IACAzB,KAAAgG,WACAC,SAAAM,KAAAE,YAAAzG,KAAAgG,YAiBAvD,EAAAiE,IAAA,SAAA3E,EAAAC,GAGA,MAFA,UAAAA,IAAAA,MACAA,EAAA2B,OAAA,MACA7B,EAAAC,EAAAC,IAgBAS,EAAAkE,KAAA,SAAA5E,EAAAC,GAGA,MAFA,UAAAA,IAAAA,MACAA,EAAA2B,OAAA,OACA7B,EAAAC,EAAAC,IAiBAS,EAAAmE,MAAA,SAAA7E,EAAAC,GACA,SAAAA,IAAAA,MACA,GAAAuC,GAAAxC,EAAAC,EAAAjB,QAAAiB,EAAAhB,SACA+E,OAWAxG,EAAAmH,IAAAjE,EAAAiE,IACAnH,EAAAoH,KAAAlE,EAAAkE,KACApH,EAAAqH,MAAAnE,EAAAmE,MAEAnE,EAAAX,KAAAA,EACAvC,EAAAkD,IAAAA,EACAA,ICjXAhD,OAAA,mBAAA,mBAAA,SAAAF,GAGA,GAAAsH,GAAA,WAGA,QAAAC,KAMA,OACAC,yBALA,IAMAC,2BALA,IAMAC,2BALA,KAMAC,YAAA,WACA,OACAC,WAAAjH,OAAAkH,WAAA,IAAAlH,OAAAmH,YACAC,mBAAApH,OAAAqH,UAAAC,UACAC,eAAAxB,SAAAyB,IAAAzB,SAAAyB,GAAAC,eAAA,OAAA,IAAA,6BACAC,WAAA,aAGAC,aAAA,SAAAzD,GACA,GAAA,gBAAAA,GACA,IACAA,EAAAmB,KAAAuC,UAAA1D,GACA,MAAA3C,GACA,KAAA,gDAIA,GACAsG,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EADAC,EAAA,oEACAzI,EAAA,EAAA0I,EAAA,EAAAC,EAAA,GAAAC,IAEA,KAAAtE,EACA,MAAAA,EAGA,IACA2D,EAAA3D,EAAAuE,WAAA7I,KACAkI,EAAA5D,EAAAuE,WAAA7I,KACAmI,EAAA7D,EAAAuE,WAAA7I,KAEAwI,EAAAP,GAAA,GAAAC,GAAA,EAAAC,EAEAC,EAAAI,GAAA,GAAA,GACAH,EAAAG,GAAA,GAAA,GACAF,EAAAE,GAAA,EAAA,GACAD,EAAA,GAAAC,EAGAI,EAAAF,KAAAD,EAAAK,OAAAV,GAAAK,EAAAK,OAAAT,GAAAI,EAAAK,OAAAR,GAAAG,EAAAK,OAAAP,SACAvI,EAAAsE,EAAAvE,OAEA4I,GAAAC,EAAArD,KAAA,GAEA,IAAAwD,GAAAzE,EAAAvE,OAAA,CAEA,QAAAgJ,EAAAJ,EAAAK,MAAA,EAAAD,EAAA,GAAAJ,GAAA,MAAAK,MAAAD,GAAA,IAEAE,kDAAA,SAAAtE,GACA,IAAA,GAAA3E,GAAA2E,EAAAuE,gBAAAnJ,OAAA,EAAAC,GAAA,EAAAA,IAAA,CACA,GAAAmJ,GAAAxE,EAAAuE,gBAAAlJ,EACAmJ,IAAAjJ,KAAAkJ,gDAAAC,QAAAF,EAAA9C,KAAA,GACA1B,EAAAuE,gBAAAI,OAAAtJ,EAAA,KAIAoJ,iDA9DA,MAJA,GAAAG,EAsEA,QACAC,YAAA,WAIA,MAHAD,KACAA,EAAAvC,KAEAuC,MAMA,OADA9J,GAAAsH,KAAAA,EACAA,ICrFApH,OAAA,yBAAA,kBAAA,qBAAA,mBAAA,SAAAF,EAAAa,EAAAyG,GAEA,GAAA0C,GAAA1C,EAAAyC,cACAE,EAAA,KACAC,EAAA,KACAC,EAAA,KAEAC,EAAA,SAAAC,EAAAC,GACA,GAAAC,GAAA,MAkBA,OAjBA,SAAAJ,EAAAK,cACAD,EAAA,UAGAE,kBAAA,2BACA5F,MACA6F,WAAAR,EAAAS,WAAAD,WACAF,YAAAD,EACAK,oBAAAP,EACAQ,qCACAC,iBAAA,gBACAC,YACAT,UAAAA,QAQAU,EAAA,WACA,GAAAC,IAAAd,EAAAc,YAAA,KAAAC,QAAA,EAWA,QARAC,OACAC,MAAA,QACAC,QACAC,SAAAnB,EAAAmB,SACA1G,MAAAqG,MAOAM,EAAA,WAOA,OALAC,iBAAA,EACAC,mBAAA,EACAC,mBAAA,EACAC,kBAAA,IAKAC,EAAA,SAAAC,EAAAC,GACA,GAAAvI,GAAA,GAAA1C,GAEAkL,EAAA3B,EAAAyB,EAAAxB,SAAAyB,EAAAxB,WACA0B,EAAAhB,IACAvI,EAAA8I,IACAnJ,EAAA,GAAA6J,gBAAAF,EAAAC,EAAAvJ,EAiBA,OAhBAyJ,YAAA,WAEA9J,EAAA+J,eACA/J,EAAA+J,iBAAA5K,KAAA,SAAAL,GACAA,EACAqC,EAAAtC,SAAA,GAEAsC,EAAAtC,SAAA,KAEA,MAAA,SAAAuC,GACAD,EAAAnC,OAAAoC,KAGAD,EAAAtC,SAAA,KAGAsC,GAGA6I,EAAA,WACA,GAAA7I,GAAA,GAAA1C,EAMA,OALAoJ,GAAAoC,2BAAArC,EAAAvC,4BAAAlG,KAAA,SAAAuK,GACAvI,EAAAtC,QAAA6K,IACA,WACAvI,EAAAnC,WAEAmC,GAGA+I,EAAA,WACA,GAAA/I,GAAA,GAAA1C,EAUA,OATAoJ,GAAAsC,0BAAAvC,EAAAvC,2BAAA0C,GAAA5I,KAAA,SAAAsK,GACAA,EAAAxB,UAAAwB,EAAAxB,SAAA/J,OAAA,EACAiD,EAAAtC,QAAA4K,GAEAtI,EAAAnC,UAEA,WACAmC,EAAAnC,WAEAmC,GAGAiJ,EAAA,WACA,MAAA7L,SAAAA,OAAAsL,eAgDA,OA7CAxL,MAAAgM,WAAA,SAAAC,GACAzC,EAAAyC,EACAjM,KAAAkM,sBAAA,SAAAC,EAAAC,GACA1C,EAAAyC,EACA1C,EAAA2C,CACA,IAAAtJ,GAAA,GAAA1C,EA2BA,OA1BAqL,YAAA,WACAM,IACAF,IAAA/K,KAAA,SAAAsK,GACAO,IAAA7K,KAAA,SAAAuK,GACAF,EAAAC,EAAAC,GAAAvK,KAAA,SAAAoL,GACAA,GACA3C,EAAAL,gDAAAjI,KAAAsI,EAAAvC,4BAEAlE,EAAAtC,QAAA0L,IACA,WACA3C,EAAAL,gDAAAjI,KAAAsI,EAAAvC,4BACAlE,EAAAnC,OAAA,wEAEA,WACA4I,EAAAL,gDAAAjI,KAAAsI,EAAAvC,4BACAlE,EAAAnC,OAAA,mDAEA,WACA4I,EAAAL,gDAAAjI,KAAAsI,EAAAvC,4BACAlE,EAAAnC,OAAA,iDAGA4I,EAAAL,gDAAAjI,KAAAsI,EAAAvC,4BACAlE,EAAAnC,OAAA,2CAGAmC,GAGA9C,KAAAqM,qBAAA,SAAAD,GACA,MAAAA,GAAAlC,WAAAD,WACAmC,EAAAlC,WAAAD,YAEAV,EAAAL,gDAAAjI,KAAAsI,EAAAvC,6BACA,KAIAzH,EAAAyM,WAAAA,WACAA,aCzJAvM,OAAA,gCAAA,mBAAA,SAAAF,GAEA,GAAA+M,GAAA,SAAA7H,GACAzE,KAAAyE,KAAAA,EACAzE,KAAAuM,MAAA9H,EAAA8H,MACAvM,KAAA6J,UAAApF,EAAAoF,UAIA,OADAtK,GAAA+M,kBAAAA,EACAA,ICTA7M,OAAA,8CAAA,mBAAA,SAAAF,GAEA,GAAAiN,GAAA,SAAA/H,GACAzE,KAAAyE,KAAAA,EACAzE,KAAAuM,MAAA9H,EAAA8H,MACAvM,KAAA6J,UAAApF,EAAAoF,UAIA,OADAtK,GAAAiN,gCAAAA,EACAA,ICTA/M,OAAA,2CAAA,mBAAA,SAAAF,GAEA,GAAAkN,GAAA,SAAAC,GACA1M,KAAA2M,WACAC,MACAC,IACAC,IAAA,0CACAC,OAAA,+CAEAC,IACAF,IAAA,wCACAC,OAAA,+CAEAE,KACAH,IAAA,0CACAC,OAAA,+CAEAG,KACAJ,IAAA,yCACAC,OAAA,gDAGAI,SACAN,IACAC,IAAA,kDACAC,OAAA,uDAEAC,IACAF,IAAA,gDACAC,OAAA,uDAEAE,KACAH,IAAA,kDACAC,OAAA,uDAEAG,KACAJ,IAAA,iDACAC,OAAA,wDAGAK,SACAP,IACAC,IAAA,kDACAC,OAAA,uDAEAC,IACAF,IAAA,gDACAC,OAAA,uDAEAE,KACAH,IAAA,kDACAC,OAAA,uDAEAG,KACAJ,IAAA,iDACAC,OAAA,wDAMAM,aACAR,IACAC,IAAA,+CACAC,OAAA,6CAEAC,IACAF,IAAA,+CACAC,OAAA,6CAEAE,KACAH,IAAA,+CACAC,OAAA,6CAEAG,KACAJ,IAAA,+CACAC,OAAA,8CAGAO,UACAT,IACAC,IAAA,gDACAC,OAAA,8CAEAC,IACAF,IAAA,gDACAC,OAAA,8CAEAE,KACAH,IAAA,gDACAC,OAAA,8CAEAG,KACAJ,IAAA,gDACAC,OAAA,+CAGAQ,SACAV,IACAC,IAAA,qCACAC,OAAA,4BAEAC,IACAF,IAAA,wCACAC,OAAA,+BAEAE,KACAH,IAAA,qCACAC,OAAA,4BAEAG,KACAJ,IAAA,qCACAC,OAAA,8BAKA/M,KAAAwN,OAAAd,EAAAc,OACAxN,KAAA+J,YAAA2C,EAAA3C,aAAA,MACA/J,KAAAyN,gBAAAf,EAAAgB,gBACA1N,KAAA2N,WAAAjB,EAAAiB,WACA3N,KAAA4N,WAAAlB,EAAAkB,YAAA,KAAAlB,EAAAkB,WAAAlB,EAAAkB,WAAA5N,KAAA2M,UAAA3M,KAAA+J,aAAA/J,KAAAwN,QAAAV,IACA9M,KAAA6N,cAAAnB,EAAAmB,eAAA,KAAAnB,EAAAmB,cAAAnB,EAAAmB,cAAA7N,KAAA2M,UAAA3M,KAAA+J,aAAA/J,KAAAwN,QAAAT,OAIA,OADAxN,GAAAkN,6BAAAA,EACAA,IC9HAhN,OAAA,iCAAA,kBAAA,sBAAA,SAAAF,EAAAa,GAEA,GAAA0N,GAAA,WACA9N,KAAA4B,OAAA,GACA5B,KAAA+N,YAAA,GACA/N,KAAAgO,iBAAA,GACAhO,KAAAiO,mBAAA,GACAjO,KAAAkO,YAGA,OADA3O,GAAAuO,mBAAAA,EACAA,ICVArO,OAAA,8BAAA,kBAAA,qBAAA,iBAAA,kBAAA,+BAAA,6CAAA,gCAAA,yBAAA,SAAAF,EAAAa,EAAA+N,EAAAtH,EAAAyF,EAAAE,EAAAsB,EAAA9B,GACA,GAAAC,GAAA,SAAAmC,EAAAC,GACA,GAAAC,GAAAF,EACA7E,EAAA1C,EAAAyC,cACAiF,KACAC,EAAAH,EACAhI,EAAArG,KACAyO,EAAA,GAAAzC,GAAA3F,GAEAqI,GACAC,WAAA,MACArJ,OAAA,OACAsJ,cAAA,MACAC,QAAA,SACAC,eAAA,OAGAC,EAAA,SAAAtK,EAAA1C,GACA,IAAA,GAAAjC,GAAA,EAAAkP,EAAAvK,EAAAwK,OAAApP,OAAAC,EAAAkP,EAAAlP,IAAA,CACA,GAAAoP,GAAAzK,EAAAwK,OAAAnP,EACAoP,GAAAhO,KAAAgO,EAAAC,aAAA,UAAA,WAAAT,EAAAQ,EAAAhO,KAGA,KAAAkO,eAAAF,GAAAG,iBAAAC,WACAJ,EAAAI,WAAAJ,EAAAI,eACAJ,EAAAI,WAAArO,KAAAmO,aAEAF,GAAAC,aAAAI,aAAA,SAAAL,EAAAC,aAAAI,YAAArO,OACAgO,EAAAC,aAAAI,YAAAC,MAAA,GAIAN,EAAAC,aAAAM,SAAAP,EAAAC,aAAAM,QAAAC,QACAR,EAAAC,aAAAM,QAAAC,MAAA3N,EAAA,IAAAmN,EAAAC,aAAAM,QAAAC,OAYA,MARAjL,GAAAwK,OAAAU,KAAA,SAAAC,EAAAC,GACA,MAAAD,GAAAT,aAAAW,aAAAD,EAAAV,aAAAW,cACA,EAEA,IAGArL,EAAA0K,aAAAY,KAAAhO,EAAA,IAAA0C,EAAA0K,aAAAY,KACAtL,GAGAuL,EAAA,SAAAvL,EAAA1C,EAAAkO,GACA,IAAA,GAAAnQ,GAAA,EAAAkP,EAAAvK,EAAA,iBAAAwL,GAAApQ,OAAAC,EAAAkP,EAAAlP,IAAA,CACA,GAAAmJ,GAAAxE,EAAA,iBAAAwL,GAAAnQ,EACAmJ,GAAAkG,aAAAY,KAAAhO,EAAA,IAAAkH,EAAAkG,aAAAY,KAQA,MANAtL,GAAA,iBAAAwL,GAAAN,KAAA,SAAAC,EAAAC,GACA,MAAAD,GAAAT,aAAAW,aAAAD,EAAAV,aAAAW,cACA,EAEA,IAEArL,GAGAyL,EAAA,SAAAV,EAAAxB,GACA,IAAA,GAAAlO,GAAA0P,EAAA3P,OAAA,EAAAC,GAAA,EAAAA,IAAA,CACA,GAAAmJ,GAAAuG,EAAA1P,EACA,IAAAmJ,GAAAA,EAAA9C,KAAA6H,EACA,OAAA,EAGA,OAAA,GAGAmC,EAAA5G,EAAArC,aAEAlH,MAAAoQ,wBAAA,SAAAjE,EAAAC,GACA,GAAAA,GAAAA,MACAtJ,EAAA,GAAA1C,GACAiQ,GAAA,GAAAxL,OAAAC,UACAwL,EAAA,sBAAAnE,EAAA3B,YAAA,IAAA2B,EAAA4B,YAAA,IACA5B,EAAAoE,OAAA,IAAApE,EAAAqE,YAAA,IAAArE,EAAAtB,SAAA,IAAAtF,KAAAuC,UAAAsE,EAoDA,OAlDAmC,GAAA+B,GACA7E,WAAA,WACA3I,EAAAtC,QAAA+N,EAAA+B,KACA,GAEAnC,EAAAzH,IAAA4H,EAAAV,WAAA,IAAAU,EAAAX,WACA,yBAAAxB,EAAA4B,YAAA,gBAAA5B,EAAAqE,YACA,WAAArE,EAAA3B,YAAA,iBAAA2B,EAAAtB,SACA,uBAAAsB,EAAAoE,OAAA,cAAAF,GACApM,IAAA,uBAAAsF,EAAA1B,aAAAsI,IACAlM,IAAA,gBAAA,gBAAAqK,EAAAb,iBACApJ,IAAA,SAAAoM,GACA,GAAAA,EAAA1P,QAAA,CACA,GAAA0D,GAAAuL,EAAAS,EAAAjO,aAAA8L,EAAAT,cAAA,IACAqC,GAAAzL,EAAAuE,gBAAAO,EAAAvC,4BACAyH,EAAApC,qBAAAD,GACAqC,EAAAvC,sBAAAC,EAAAC,GAAAtL,KAAA,SAAAoL,GACA3C,EAAAR,kDAAAtE,GACA,IAAAA,EAAAuE,gBAAAnJ,QACAiD,EAAAnC,OAAA,iCAEA4N,EAAA+B,GAAA7L,EACA3B,EAAAtC,QAAAiE,IACA,WACA8E,EAAAR,kDAAAtE,GACA,IAAAA,EAAAuE,gBAAAnJ,QACAiD,EAAAnC,OAAA,iCAEA4N,EAAA+B,GAAA7L,EACA3B,EAAAtC,QAAAiE,MAIA8E,EAAAR,kDAAAtE,GACAiM,QAAAC,KAAA,mHACA7N,EAAAtC,QAAAiE,KAGA8E,EAAAR,kDAAAtE,GACA,IAAAA,EAAAuE,gBAAAnJ,QACAiD,EAAAnC,OAAA,iCAEA4N,EAAA+B,GAAA7L,EACA3B,EAAAtC,QAAAiE,QAGA3B,GAAAnC,OAAA,4CAAA8P,KAIA3N,GAGA9C,KAAA4Q,6BAAA,SAAAzE,GACA,GAAArJ,GAAA,GAAA1C,GACAiQ,GAAA,GAAAxL,OAAAC,UACAwL,EAAA,2BAAAnE,EAAA3B,YAAA,IAAA2B,EAAA4B,YAAA,IACA5B,EAAAoE,OAAA,IAAApE,EAAAqE,YAAA,IAAArE,EAAAtB,QAuBA,OArBA0D,GAAA+B,GACA7E,WAAA,WACA3I,EAAAtC,QAAA+N,EAAA+B,KACA,GAEAnC,EAAAzH,IAAA4H,EAAAV,WAAA,IAAAU,EAAAX,WACA,8BAAAxB,EAAA4B,YAAA,gBAAA5B,EAAAqE,YACA,WAAArE,EAAA3B,YAAA,iBAAA2B,EAAAtB,SACA,uBAAAsB,EAAAoE,OAAA,cAAAF,GACApM,IAAA,uBAAAsF,EAAA1B,aAAAsI,IACAlM,IAAA,gBAAA,gBAAAqK,EAAAb,iBACApJ,IAAA,SAAAoM,GACA,GAAAA,EAAA1P,QAAA,CACA,GAAA0D,GAAAuL,EAAAS,EAAAjO,aAAA8L,EAAAT,cAAA,SACAU,GAAA+B,GAAA7L,EACA3B,EAAAtC,QAAAiE,OAEA3B,GAAAnC,WAIAmC,GAGA9C,KAAA6Q,kBAAA,SAAA7C,EAAA7B,EAAAC,GACA,GAAAA,GAAAA,MACAtJ,EAAA,GAAA1C,GACAiQ,GAAA,GAAAxL,OAAAC,UACAwL,EAAA,qBAAAtC,EAAA,IAAA7B,EAAA3B,YAAA,IACA2B,EAAA4B,YAAA,KAAA5B,EAAAoE,OAAA,IAAApE,EAAAqE,YAAA,IACArE,EAAAtB,SAAA,IAAAtF,KAAAuC,UAAAsE,EACA,IAAA7C,EAAAL,gDAAAC,QAAA6E,IAAA,EACAvC,WAAA,WACA3I,EAAAnC,QACAmQ,QAAA,uCACAC,SACAC,KAAA,OACAC,aAAA,YACAC,QAAA,qBACAC,eAAA,SAGA,OAEA,IAAA3C,GAAAA,EAAArI,KAAA6H,EACA,GAAAO,EAAA+B,GACA7E,WAAA,WACA3I,EAAAtC,QAAA+N,EAAA+B,KACA,OACA,CACA,GAAA7L,GAAAsK,EAAAP,EAAAF,EAAAT,cACAU,GAAA+B,GAAA7L,EACAgH,WAAA,WACA3I,EAAAtC,QAAA+N,EAAA+B,KACA,OAEA,IAAA/B,EAAA+B,GACA7E,WAAA,WACA3I,EAAAtC,QAAA+N,EAAA+B,KACA,OACA,CACA,GAAAc,GAAA9C,EAAAV,WAAA,IAAAU,EAAAX,WACA,aAAAK,EAAA,gBAAA7B,EAAA4B,YACA,gBAAA5B,EAAAqE,YAAA,WAAArE,EAAA3B,YACA,iBAAA2B,EAAAtB,SAAA,WAAAsB,EAAAoE,MAEAvC,KAAAzE,EAAAtC,4BACAmF,GACAA,EAAAiF,YACAjF,EAAAiF,WAAAC,iBAEAF,GAAA,mBAAAhF,EAAAiF,WAAAC,gBAGAF,GAAA,cAAAf,EAEAlC,EAAAzH,IAAA0K,GACAnN,IAAA,uBAAAsF,EAAA1B,aAAAsI,IACAlM,IAAA,gBAAA,gBAAAqK,EAAAb,iBACApJ,IAAA,SAAAoM,GACA,GAAAA,EAAA1P,QAAA,CACA,GAAAwQ,GAAAxC,EAAA0B,EAAAjO,aAAA4L,EAAAP,cACAG,KAAAzE,EAAAvC,2BACAyH,EAAApC,qBAAAD,GACAqC,EAAAvC,sBAAAC,EAAAC,GAAAtL,KAAA,SAAAoL,GACAA,GACAqC,EAAA+B,GAAAiB,EACAzO,EAAAtC,QAAA+Q,KAEAhD,EAAA+B,GAAAiB,EAEAzO,EAAAnC,OAAA4Q,KAEA,WACAhD,EAAA+B,GAAAiB,EAEAzO,EAAAnC,OAAA4Q,MAGAhD,EAAA+B,GAAAiB,EAEAzO,EAAAnC,OAAA4Q,KAGAhD,EAAA+B,GAAAiB,EACAzO,EAAAtC,QAAA+Q,QAGAzO,GAAAnC,OAAA,qCAAA8P,KAKA,MAAA3N,IAGA9C,KAAAwR,uBAAA,SAAAC,EAAAtF,GACA,GAAArJ,GAAA,GAAA1C,GACAiQ,GAAA,GAAAxL,OAAAC,UACAwL,EAAA,0BAAAmB,EAAA,IAAAtF,EAAA3B,YAAA,IACA2B,EAAA4B,YAAA,KAAA5B,EAAAoE,OAAA,IAAApE,EAAAqE,YAAA,IACArE,EAAAtB,QACA,IAAA2D,GAAAA,EAAArI,KAAAsL,EACA,GAAAlD,EAAA+B,GACA7E,WAAA,WACA3I,EAAAtC,QAAA+N,EAAA+B,KACA,OACA,CACA,GAAA7L,GAAAsK,EAAAP,EAAAF,EAAAT,cACAU,GAAA+B,GAAA7L,EACAgH,WAAA,WACA3I,EAAAtC,QAAA+N,EAAA+B,KACA,OAEA/B,GAAA+B,GACA7E,WAAA,WACA3I,EAAAtC,QAAA+N,EAAA+B,KACA,GAEAnC,EAAAzH,IAAA4H,EAAAV,WAAA,IAAAU,EAAAX,WACA,kBAAA8D,EAAA,gBAAAtF,EAAA4B,YACA,gBAAA5B,EAAAqE,YAAA,WAAArE,EAAA3B,YACA,iBAAA2B,EAAAtB,SAAA,WAAAsB,EAAAoE,OAAA,cAAAF,GACApM,IAAA,uBAAAsF,EAAA1B,aAAAsI,IACAlM,IAAA,gBAAA,gBAAAqK,EAAAb,iBACApJ,IAAA,SAAAoM,GACA,GAAAA,EAAA1P,QAAA,CACA,GAAAwQ,GAAAxC,EAAA0B,EAAAjO,aAAA4L,EAAAP,cACAU,GAAA+B,GAAAiB,EACAzO,EAAAtC,QAAA+Q,OAEAzO,GAAAnC,UAIA,OAAAmC,IAGA9C,KAAA0R,sCAAA,SAAAC,EAAAxF,GACA,GAAArJ,GAAA,GAAA1C,GACAwR,EAAA,GAAA9D,GACAwC,EAAA,yCAAAqB,EAEAtL,EAAArG,IAEA,IADAA,KAAAmM,QAAAA,EACAoC,EAAA+B,GACA7E,WAAA,WACA3I,EAAAtC,QAAA+N,EAAA+B,KACA,OACA,EACA,SAAAqB,GACA,QAAAA,EAAA9R,OAAA,IAKA8R,IA0CAC,EAAAhQ,OAAA,oBACA6J,WAAA,WACA3I,EAAAtC,QAAAoR,IACA,IA5CAzD,EAAAxH,KAAA2H,EAAAV,WAAA,IAAAU,EAAAX,WAAA,2BACAvJ,KAAAmB,KAAAuC,UAAA9H,KAAA6R,kCAAAF,EAAA3R,KAAAmM,WACAlI,IAAA,uBAAAsF,EAAA1B,aAAAsI,IACAlM,IAAA,gBAAA,gBAAAqK,EAAAb,iBACApJ,IAAA,SAAAoM,GACAA,EAAA1P,SACA6Q,EAAAnN,KAAAgM,EAAAjO,aACAoP,EAAA7D,YAAA0C,EAAAjO,aAAAuL,YACA6D,EAAA5D,iBAAAyC,EAAAjO,aAAAwL,iBACA4D,EAAA3D,mBAAAwC,EAAAjO,aAAAyL,mBACA2D,EAAA1D,SAAAuC,EAAAjO,aAAA0L,SAGAuC,EAAAjO,aAAAc,eAAA,uBACAsO,EAAAhQ,OAAA,YACAgQ,EAAA3D,sBAAA,IACA2D,EAAAhQ,OAAA,4BAEA2M,EAAA+B,GAAAsB,EACA9O,EAAAtC,QAAAoR,IAGAvL,EAAAwK,kBAAAe,EAAA5D,iBAAA3H,EAAA8F,SAAArL,KAAA,SAAAuN,GAEAuD,EAAAhQ,OADAyM,EACA,YAEA,cAEAE,EAAA+B,GAAAsB,EACA9O,EAAAtC,QAAAoR,IACA,WACAA,EAAAhQ,OAAA,UACAkB,EAAAnC,OAAAiR,OAIAA,EAAAhQ,OAAA,UACAkB,EAAAnC,OAAAiR,MAUA,MAAA9O,IAGA9C,KAAA6R,kCAAA,SAAAF,EAAAxF,GACA,OACA2F,IAAAH,EACAI,gBACAhE,YAAA5B,EAAA4B,YACAyC,YAAArE,EAAAqE,YACAwB,eACApH,OAAAuB,EAAA3B,YACAyH,aAAA9F,EAAAtB,aAMA7K,KAAAkS,aAAA,WACA,GAAApP,GAAA,GAAA1C,EAqBA,OAlBAmO,GAAA,UACA9C,WAAA,WACA3I,EAAAtC,QAAA+N,EAAA,YACA,GAEAJ,EAAAzH,IAAA4H,EAAAV,WAAA,IAAAU,EAAAX,WAAA,qBACA1J,IAAA,uBAAAsF,EAAA1B,aAAAsI,IACAlM,IAAA,gBAAA,gBAAAqK,EAAAb,iBACApJ,IAAA,SAAAoM,GACA,GAAAA,EAAA1P,QAAA,CACA,GAAAoR,GAAA,GAAA7F,GAAAmE,EAAAjO,aACA+L,GAAA,UAAA4D,EACArP,EAAAtC,QAAA2R,OAEArP,GAAAnC,OAAA,8BAIAmC,GAGA9C,KAAA4L,2BAAA,SAAAoC,GACA,GAAAlL,GAAA,GAAA1C,GACAkQ,EAAA,yBAoBA,OAlBA/B,GAAA+B,GACA7E,WAAA,WACA3I,EAAAtC,QAAA+N,EAAA+B,KACA,GAEAnC,EAAAzH,IAAA4H,EAAAV,WAAA,IAAAU,EAAAX,WAAA,aAAAK,EAAA,cACA/J,IAAA,uBAAAsF,EAAA1B,aAAAsI,IACAlM,IAAA,gBAAA,gBAAAqK,EAAAb,iBACApJ,IAAA,SAAAoM,GACA,GAAAA,EAAA1P,QAAA,CACA,GAAAqR,GAAA,GAAA5F,GAAAiE,EAAAjO,aACA+L,GAAA+B,GAAA8B,EACAtP,EAAAtC,QAAA4R,OAEAtP,GAAAnC,OAAA,8CAIAmC,GAGA9C,KAAA8L,0BAAA,SAAAkC,EAAA7B,GACA,GAAArJ,GAAA,GAAA1C,GACAkQ,EAAA,0BAAAtC,EAAA,IAAA7B,EAAA4B,YAAA,IAAA5B,EAAAtB,SAAA,IACAsB,EAAA3B,YAAA,IAAA2B,EAAAqE,WAqBA,OAnBAjC,GAAA+B,GACA7E,WAAA,WACA3I,EAAAtC,QAAA+N,EAAA+B,KACA,GAEAnC,EAAAzH,IAAA4H,EAAAV,WAAA,IAAAU,EAAAX,WACA,aAAAK,EAAA,yBAAA7B,EAAA4B,YAAA,iBAAA5B,EAAAtB,SACA,WAAAsB,EAAA3B,YAAA,gBAAA2B,EAAAqE,aACAvM,IAAA,uBAAAsF,EAAA1B,aAAAsI,IACAlM,IAAA,gBAAA,gBAAAqK,EAAAb,iBACApJ,IAAA,SAAAoM,GACAA,EAAA1P,SACAwN,EAAA+B,GAAAG,EAAAjO,aACAM,EAAAtC,QAAAiQ,EAAAjO,eAEAM,EAAAnC,WAIAmC,GAGA9C,KAAAqS,2BAAA,SAAArE,EAAAiE,EAAAlE,GACA,GAAAjL,GAAA,GAAA1C,GACAkQ,EAAA,8BAAAtC,EAAA,IAAAiE,EAAA,IAAAlE,CAmBA,OAjBAQ,GAAA+B,GACA7E,WAAA,WACA3I,EAAAtC,QAAA+N,EAAA+B,KACA,GAEAnC,EAAAzH,IAAA4H,EAAAV,WAAA,IAAAU,EAAAX,WAAA,aAAAK,EAAA,0BAAAD,EAAA,iBAAAkE,GACAhO,IAAA,uBAAAsF,EAAA1B,aAAAsI,IACAlM,IAAA,gBAAA,gBAAAqK,EAAAb,iBACApJ,IAAA,SAAAoM,GACAA,EAAA1P,SACAwN,EAAA+B,GAAAG,EAAAjO,aACAM,EAAAtC,QAAAiQ,EAAAjO,eAEAM,EAAAnC,OAAA,kDAIAmC,GAGA9C,KAAAsS,cAAA,SAAA1H,EAAA2H,EAAAC,GACA,GAAA1P,GAAA,GAAA1C,GACAkQ,EAAA,iBAAA1F,EAAA,IAAA2H,EAAA,IAAAC,CAmBA,OAjBAjE,GAAA+B,GACA7E,WAAA,WACA3I,EAAAtC,QAAA+N,EAAA+B,KACA,GAEAnC,EAAAzH,IAAA4H,EAAAV,WAAA,IAAAU,EAAAX,WAAA,mCAAA4E,EAAA,WAAAC,EAAA,WAAA5H,GACA3G,IAAA,uBAAAsF,EAAA1B,aAAAsI,IACAlM,IAAA,gBAAA,gBAAAqK,EAAAb,iBACApJ,IAAA,SAAAoM,GACAA,EAAA1P,SACAwN,EAAA+B,GAAAG,EAAAjO,aACAM,EAAAtC,QAAAiQ,EAAAjO,eAEAM,EAAAnC,OAAA,8BAIAmC,GAGA9C,KAAAyS,2BAAA,SAAAC,GACA,GAAA5P,GAAA,GAAA1C,EAYA,OAVA+N,GAAAzH,IAAA4H,EAAAV,WAAA,IAAAU,EAAAX,WAAA,aAAA+E,EAAA,qBACAzO,IAAA,uBAAAsF,EAAA1B,aAAAsI,IACAlM,IAAA,gBAAA,gBAAAqK,EAAAb,iBACApJ,IAAA,SAAAoM,GACAA,EAAA1P,QACA+B,EAAAtC,QAAAiQ,EAAAjO,cAEAM,EAAAnC,OAAA,2CAGAmC,GAMA,OADAvD,GAAA0M,gBAAAA,EACAA,IC7gBAxM,OAAA,mCAAA,mBAAA,SAAAF,GAEA,GAAAoT,GAAA,SAAAlO,GACAzE,KAAAyE,KAAAA,EACAzE,KAAA4S,aAAAnO,EAAAmO,aACA5S,KAAA6S,KAAApO,EAAAoO,KACA7S,KAAA8S,aAAArO,EAAAoO,KAAApO,EAAAoO,KAAA5N,QAAA,KAAA,KAAA,GAIA,OADA1F,GAAAoT,qBAAAA,EACAA,ICVAlT,OAAA,wBAAA,mBAAA,SAAAF,GAEA,GAAAwT,GAAA,SAAAtO,GACAzE,KAAAyE,KAAAA,EACAzE,KAAAkE,IAAAO,EAAAP,IACAlE,KAAAmE,MAAAM,EAAAN,MACAnE,KAAA4B,OAAA6C,EAAA7C,OACA5B,KAAAgT,gBAAAvO,EAAAuO,gBAIA,OADAzT,GAAAwT,UAAAA,EACAA,ICXAtT,OAAA,wCAAA,kBAAA,mCAAA,SAAAF,EAAAoT,GAEA,GAAAM,GAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAF,EAAAG,cACA,IAAA,GAAAvT,GAAA,EAAAwT,EAAAJ,EAAAG,cAAAxT,OAAAC,EAAAwT,EAAAxT,IAAA,CACA,GAAAyT,GAAA,GAAAZ,GAAAO,EAAAG,cAAAvT,GACAqT,GAAAlS,KAAAsS,GACAH,EAAAG,EAAAX,cAAAW,IAKAC,EAAA,SAAA/O,GACAzE,KAAAyE,KAAAA,EACAzE,KAAAqT,iBACArT,KAAAyT,sCAEAR,EAAAxO,EAAAzE,KAAAqT,cAAArT,KAAAyT,oCAIA,OADAlU,GAAAiU,0BAAAA,EACAA,ICrBA/T,OAAA,4BAAA,kBAAA,uCAAA,wBAAA,SAAAF,EAAAiU,EAAAT,GAEA,GAAAE,GAAA,SAAAC,EAAAQ,EAAAC,GACA,GAAAT,EAAAU,WACA,IAAA,GAAA9T,GAAA,EAAAwT,EAAAJ,EAAAU,WAAA/T,OAAAC,EAAAwT,EAAAxT,IAAA,CACA,GAAA+T,GAAA,GAAAd,GAAAG,EAAAU,WAAA9T,GACA4T,GAAAzS,KAAA4S,GACAF,EAAAE,EAAA3P,KAAA2P,IAKAC,EAAA,SAAArP,GAEAzE,KAAAyE,KAAAA,EACAzE,KAAA4T,cACA5T,KAAA+T,kBACA/T,KAAAmP,aAAA,GAAAqE,GAAA/O,EAAA0K,cACAnP,KAAAmG,GAAA1B,EAAA0B,GACAnG,KAAAgO,iBAAAvJ,EAAAuJ,iBAEAhO,KAAAgU,6BAAA,SAAApB,GACA,GACAE,GADA3O,EAAAnE,KAAA+T,eAAAnB,GAAAzO,KAEA,KACA2O,EAAA9S,KAAAmP,aAAAsE,mCAAAb,GAAAE,aACA,MAAArR,IACA,GAAAwS,SAAA9P,GAAA8P,SAAAnB,EAAA,CAEA,OADA,GAAAvT,GAAA2U,aACAC,UAAArB,EAAA3O,KAKA8O,EAAAxO,EAAAzE,KAAA4T,WAAA5T,KAAA+T,gBAIA,OADAxU,GAAAuU,cAAAA,EACAA,ICtCArU,OAAA,yCAAA,mBAAA,SAAAF,GAEA,GAAA6U,GAAA,SAAA3P,GACAzE,KAAAyE,KAAAA,EACAzE,KAAA8P,aAAArL,EAAAqL,aACA9P,KAAA2K,MAAAlG,EAAAkG,MACA3K,KAAA+P,KAAAtL,EAAAsL,KAIA,OADAxQ,GAAA6U,2BAAAA,EACAA,ICVA3U,OAAA,kCAAA,kBAAA,2BAAA,yCAAA,SAAAF,EAAAuU,EAAAM,GAEA,GAAAnB,GAAA,SAAAC,EAAAmB,EAAAC,GACA,GAAApB,EAAAqB,eACA,IAAA,GAAAzU,GAAA,EAAAkP,EAAAkE,EAAAqB,eAAA1U,OAAAC,EAAAkP,EAAAlP,IAAA,CACA,GAAA0U,GAAA,GAAAV,GAAAZ,EAAAqB,eAAAzU,GACAuU,GAAApT,KAAAuT,GACAF,EAAAE,EAAArO,IAAAqO,IAKAC,EAAA,SAAAhQ,GACAzE,KAAAyE,KAAAA,EACAzE,KAAAyE,KAAAvD,KAAA,UACAlB,KAAAuU,kBACAvU,KAAA0U,qBACA1U,KAAA2U,gBAAAlQ,EAAAkQ,gBACA3U,KAAA4U,mBAAAnQ,EAAAmQ,mBACA5U,KAAA6U,cAAApQ,EAAAoQ,cACA7U,KAAAmP,aAAA,GAAAiF,GAAA3P,EAAA0K,cACAnP,KAAAmG,GAAA1B,EAAA0B,GACAnG,KAAA8U,UAAArQ,EAAAqQ,UACA9U,KAAA+U,UAAAtQ,EAAAsQ,UACA/U,KAAAgV,cAAAvQ,EAAAuQ,cACAhV,KAAAiV,uBAAAxQ,EAAAwQ,uBACAjV,KAAAkV,0BAAAzQ,EAAAyQ,0BACAlV,KAAAmV,oBAAA1Q,EAAA0Q,oBAEAlC,EAAAxO,EAAAzE,KAAAuU,eAAAvU,KAAA0U,mBAIA,OADAnV,GAAAkV,oBAAAA,EACAA,ICjCAhV,OAAA,uCAAA,kBAAA,2BAAA,yCAAA,SAAAF,EAAAuU,EAAAM,GAEA,GAAAnB,GAAA,SAAAC,EAAAmB,EAAAC,GACA,GAAApB,EAAAqB,eACA,IAAA,GAAAzU,GAAA,EAAAkP,EAAAkE,EAAAqB,eAAA1U,OAAAC,EAAAkP,EAAAlP,IAAA,CACA,GAAA0U,GAAA,GAAAV,GAAAZ,EAAAqB,eAAAzU,GACAuU,GAAApT,KAAAuT,GACAF,EAAAE,EAAArO,IAAAqO,IAKAY,EAAA,SAAA3Q,GACAzE,KAAAyE,KAAAA,EACAzE,KAAAyE,KAAAvD,KAAA,QACAlB,KAAAmG,GAAA1B,EAAA0B,GACAnG,KAAAmP,aAAA,GAAAiF,GAAA3P,EAAA0K,cACAnP,KAAAuU,kBACAvU,KAAA0U,qBACAzB,EAAAxO,EAAAzE,KAAAuU,eAAAvU,KAAA0U,mBAIA,OADAnV,GAAA6V,yBAAAA,EACAA,ICvBA3V,OAAA,2BAAA,mBAAA,SAAAF,GAEA,GAAA8V,GAAA,SAAAC,EAAAC,GAEAvV,KAAAsV,eAAAA,EACAtV,KAAAuV,YAAAA,EAIA,OADAhW,GAAA8V,aAAAA,EACAA,ICTA5V,OAAA,0BAAA,kBAAA,2BAAA,SAAAF,EAAA8V,GAEA,GAAAG,GAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAJ,EAAAC,EAAAG,EAAAhW,QAAA4V,EAAAG,EAAA/V,SACA,MAAA+V,EAAAH,IAAAK,OAAAD,EAAAJ,EAAAC,KAAA,GAAA,MAAAG,EAAAJ,EAAAC,IAAA,MAAAE,EAAAH,GACAE,EAAA1U,KAAA4U,EAAAJ,EAAAC,IAEAG,EAAAJ,EAAAC,KAAAE,EAAAH,GACAE,EAAA1U,KAAA4U,EAAAJ,EAAAC,IACA,MAAAE,EAAAH,IAAA,MAAAG,EAAAH,IACAE,EAAA1U,KAAA2U,EAAAH,IACAC,MAGAG,EAAAzM,OAAAqM,EAAAC,EAAA,GACAD,KAGAD,EAAAC,EAAA,EAAAC,EAAAC,EAAAC,EAAAC,KAIA3B,EAAA,WACAlU,KAAAmU,UAAA,SAAAtB,EAAAkD,EAAAC,GACA,GAAAL,MACAE,EAAAE,EAAAE,MAAA,GACA,IAAApD,EAAA,CAGA,IAAA,GAFAqD,GAAArD,EAAAoD,MAAA,IACAL,KACA9V,EAAA,EAAAkP,EAAAkH,EAAArW,OAAAC,EAAAkP,EAAAlP,IAAA,CAEA,GAAAqW,GAAAD,EAAApW,EACA,OAAAqW,GAAA,MAAAA,GAGAP,EAAA3U,KAAAkV,GAIAX,EAAA,EAAA,EAAAG,EAAAC,EAAAC,OAGA,KAAA,GAAA/V,GAAA,EAAAkP,EAAA6G,EAAAhW,OAAAC,EAAAkP,EAAAlP,IAAA,CACA,GAAAqW,GAAAN,EAAA/V,EACA6V,GAAA1U,KAAAkV,GAGAJ,EAAAJ,EAAAtQ,KAAA,GACA,IAAA+Q,GAAA,CAEA,IAAAJ,EAEA,IAAA,GADAK,GAAAL,EAAAC,MAAA,IACAnW,EAAA,EAAAkP,EAAA2G,EAAA9V,OAAAC,EAAAkP,EAAAlP,IACA,GAAA6V,EAAA7V,KAAAuW,EAAAvW,GAAA,CACAsW,EAAAtW,EAAA,CACA,OAOA,MAHAiW,GAAAO,UAAA,EAAAP,EAAAlW,OAAA,KAAAmW,IACAI,EAAAL,EAAAlW,OAAA,GAEA,GAAAwV,GAAAU,EAAAK,IAGApW,KAAAuW,wBAAA,SAAA1D,GACA,GAAAA,EAAA,CAGA,IAAA,GAFAqD,GAAArD,EAAAoD,MAAA,IACAO,GAAA,EACA1W,EAAA,EAAAkP,EAAAkH,EAAArW,OAAAC,EAAAkP,EAAAlP,IAAA,CACA0W,GACA,IAAAL,GAAAD,EAAApW,EACA,OAAAqW,GAAA,MAAAA,GACAK,IAGA,MAAAA,KAIAxW,KAAAyW,WAAA,SAAA5D,EAAA1O,GAEA,GAAAwR,MACAE,EAAA,EAAA1R,EAAA8R,MAAA,MACA,IAAApD,EAIA,IAAA,GAHAqD,GAAArD,EAAAoD,MAAA,IACAS,GAAA,EACAC,GAAA,EACA7W,EAAA,EAAAkP,EAAAkH,EAAArW,OAAAC,EAAAkP,EAAAlP,IAAA,CACA4W,GAEA,IAAAP,GAAAD,EAAApW,EACA,OAAAqW,GAAA,MAAAA,GACAO,IACA,MAAAP,EACAQ,GAAA,EACA,MAAAR,IACAQ,GAAA,IAGAA,GAAAd,EAAAa,IACAf,EAAA1U,KAAA4U,EAAAa,QAMA,KAAA,GAAA5W,GAAA,EAAAkP,EAAA6G,EAAAhW,OAAAC,EAAAkP,EAAAlP,IAAA,CACA,GAAAqW,GAAAN,EAAA/V,EACA6V,GAAA1U,KAAAkV,GAGA,MAAAR,GAAAtQ,KAAA,IAAAN,QAKA,OADAxF,GAAA2U,YAAAA,EACAA,ICrHAzU,OAAA,iCAAA,mBAAA,SAAAF,GAEA,GAAAqX,GAAA,SAAAnS,GACAzE,KAAAyE,KAAAA,EACAzE,KAAAkB,KAAAuD,EAAAvD,KACAlB,KAAA6W,eAAApS,EAAAvD,KACAlB,KAAA8W,SAAA,SAAA3S,GACA,GAAA4S,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IACAC,EAAA,CAKA,OAHA7S,GAAAc,QAAA,OAAA,IAAAA,QAAA,QAAA,SAAAkR,EAAAc,EAAAC,GACAF,GAAAD,EAAAG,EAAArX,OAAAoX,EAAA,GAAArS,SAAAuR,EAAA,OAEAa,EAAA,IAAA,GAAAA,EAAA,GAKA,OADAzX,GAAAqX,mBAAAA,EACAA,IClBAnX,OAAA,2CAAA,mBAAA,SAAAF,GAEA,GAAA4X,GAAA,SAAAhT,GAEA,MADA,gBACA5B,KAAA4B,IAGAiT,EAAA,SAAA3S,GACAzE,KAAAyE,KAAAA,EACAzE,KAAAkB,KAAAuD,EAAAvD,KACAlB,KAAA6W,eAAApS,EAAAvD,KAGAlB,KAAA8W,SAAA,SAAA3S,GAEA,GADAA,EAAAA,EAAAc,QAAA,SAAA,IACA,IAAAd,EAAAtE,OACAoW,OAAA9R,EAAAmS,UAAA,EAAA,GAAA,KAAAnS,EAAAmS,UAAA,EAAA,QACA,CAAA,GAAA,IAAAnS,EAAAtE,OAGA,OAAA,CAFAoW,QAAA9R,EAAAmS,UAAA,EAAA,GAAAnS,EAAAmS,UAAA,EAAA,IAIA,GAAAa,EAAAhT,GAAA,CACA,GAAAkT,GAAA,GAAAxS,OAAA,GAAAA,OAAAyS,eAAA,GAAAzS,OAAA0S,WAAA,GACAzI,EAAA,GAAAjK,MAAAoR,MAAA,GAAAA,MAAA,GAAA,EAAA,EACA,OAAAnH,GAAAyI,aAAAzB,OAAAG,MAAA,GAAA,IAAAnH,EAAAwI,gBAAAxB,OAAAG,MAAA,KAGAnH,GAAAuI,EAEA,OAAA,GAKA,OADA9X,GAAA6X,6BAAAA,EACAA,ICnCA3X,OAAA,sCAAA,mBAAA,SAAAF,GAEA,GAAAiY,GAAA,SAAA/S,GACAzE,KAAAyE,KAAAA,EACAzE,KAAAkB,KAAAuD,EAAAvD,KACAlB,KAAA6W,eAAApS,EAAAvD,KACAlB,KAAAyX,cAAAhT,EAAAmP,WAAA6D,cAEAzX,KAAA8W,SAAA,SAAA3S,GACA,IAAA,GAAArE,GAAA,EAAAkP,EAAAhP,KAAAyX,cAAA5X,OAAAC,EAAAkP,EAAAlP,IACA,GAAAE,KAAAyX,cAAA3X,KAAAqE,EACA,OAAA,CAGA,QAAA,GAKA,OADA5E,GAAAiY,wBAAAA,EACAA,ICnBA/X,OAAA,mCAAA,mBAAA,SAAAF,GAEA,GAAAmY,GAAA,SAAAjT,GACAzE,KAAAyE,KAAAA,EACAzE,KAAAkB,KAAAuD,EAAAvD,KACAlB,KAAA6W,eAAApS,EAAAvD,KACAlB,KAAA2X,UAAAlT,EAAAmP,WAAA+D,UACA3X,KAAA4X,UAAAnT,EAAAmP,WAAAgE,UAEA5X,KAAA8W,SAAA,SAAA3S,GACA,MAAAnE,MAAA4X,WAAAzT,EAAAtE,QAAAsE,EAAAtE,QAAAG,KAAA2X,WAKA,OADApY,GAAAmY,qBAAAA,EACAA,ICfAjY,OAAA,kCAAA,mBAAA,SAAAF,GAEA,GAAAsY,GAAA,SAAApT,GACAzE,KAAAyE,KAAAA,EACAzE,KAAAkB,KAAAuD,EAAAvD,KACAlB,KAAA6W,eAAApS,EAAAvD,KACAlB,KAAA8X,SAAArT,EAAAmP,WAAAkE,SACA9X,KAAA+X,SAAAtT,EAAAmP,WAAAmE,SAEA/X,KAAA8W,SAAA,SAAA3S,GACA,OAAA6T,MAAA7T,KAGAA,EAAA2R,OAAA3R,GACAnE,KAAA+X,UAAA5T,GAAAA,GAAAnE,KAAA8X,WAKA,OADAvY,GAAAsY,oBAAAA,EACAA,ICnBApY,OAAA,8CAAA,mBAAA,SAAAF,GAEA,GAAA0Y,GAAA,SAAAxT,GACAzE,KAAAyE,KAAAA,EACAzE,KAAAkB,KAAAuD,EAAAvD,KACAlB,KAAA6W,eAAApS,EAAAvD,KACAlB,KAAAkY,kBAAAzT,EAAAmP,WAAAsE,kBAEAlY,KAAA8W,SAAA,SAAA3S,GAEA,MADA,IAAAgU,QAAAnY,KAAAkY,mBACA3V,KAAA4B,IAKA,OADA5E,GAAA0Y,gCAAAA,EACAA,ICfAxY,OAAA,yCAAA,mBAAA,SAAAF,GAEA,GAAA6Y,GAAA,SAAA3T,GACAzE,KAAAyE,KAAAA,EACAzE,KAAAkB,KAAAuD,EAAAvD,KACAlB,KAAA6W,eAAApS,EAAAvD,KAEAlB,KAAA8W,SAAA,SAAA3S,GAEA,MADA,IAAAgU,QAAA,84BACA5V,KAAA4B,IAKA,OADA5E,GAAA6Y,2BAAAA,EACAA,ICdA3Y,OAAA,uDAAA,mBAAA,SAAAF,GAEA,GAAA8Y,GAAA,SAAA5T,GACAzE,KAAAyE,KAAAA,EACAzE,KAAAkB,KAAAuD,EAAAvD,KACAlB,KAAA6W,eAAApS,EAAAvD,KACAlB,KAAAsY,mBAAA7T,EAAAmP,WAAA0E,mBAEAtY,KAAA8W,SAAA,SAAA3S,EAAAoU,GACA,MAAAA,GAAA1Y,SAAAG,KAAAsY,oBAAAnU,EAAAtE,OAAA,GAAA0Y,EAAA1Y,SAAAG,KAAAsY,oBAKA,OADA/Y,GAAA8Y,yCAAAA,EACAA,ICdA5Y,OAAA,oCAAA,kBAAA,wCAAA,0CAAA,qCAAA,kCAAA,gCAAA,iCAAA,6CAAA,uDAAA,SAAAF,WAAA6Y,2BAAAhB,6BAAAI,wBAAAE,qBAAAd,mBAAAiB,oBAAAI,gCAAAI,0CAEA,GAAAG,uBAAA,WAEAxY,KAAAyY,cAAA,SAAAhU,MAEA,IACA,GAAAiU,WAAAjU,KAAAvD,KAAA0H,OAAA,GAAA+P,cAAAlU,KAAAvD,KAAA4H,MAAA,GACA8P,UAAAC,KAAA,iBAAAH,UACA,OAAA,IAAAE,WAAAnU,MACA,MAAAhD,GACAiP,QAAAC,KAAA,oBAAA+H,WAEA,MAAA,OAKA,OADAnZ,YAAAiZ,sBAAAA,sBACAA,wBClBA/Y,OAAA,+BAAA,kBAAA,0CAAA,qCAAA,kCAAA,gCAAA,iCAAA,6CAAA,wCAAA,oCAAA,SAAAF,EAAA6X,EAAAI,EAAAE,EAAAd,EAAAiB,EAAAI,EAAAG,EAAAI,GAEA,GAAAM,GAAA,SAAArU,EAAAoO,GAeA7S,KAAAyE,KAAAA,EACAzE,KAAA+Y,WAAAtU,EAAAsU,WACA/Y,KAAAgZ,mBACAhZ,KAAAiZ,wBAhBA,SAAA/F,EAAAgG,EAAAC;gBACA,GAAAC,GAAA,GAAAZ,EACA,IAAAtF,EAAA5D,WACA,IAAA,GAAApL,KAAAgP,GAAA5D,WAAA,CACA,GAAA+J,GAAAD,EAAAX,eAAAvX,KAAAgD,EAAA0P,WAAAV,EAAA5D,WAAApL,IACAmV,KACAH,EAAAjY,KAAAoY,GACAF,EAAAE,EAAAnY,MAAAmY,KAWA5U,EAAAzE,KAAAgZ,gBAAAhZ,KAAAiZ,sBAIA,OADA1Z,GAAAuZ,iBAAAA,EACAA,IC1BArZ,OAAA,kCAAA,mBAAA,SAAAF,GAEA,GAAA+Z,GAAA,SAAA7U,GACAzE,KAAAyE,KAAAA,EACAzE,KAAAuZ,YAAA9U,EAAA8U,YACAvZ,KAAAmE,MAAAM,EAAAN,MAIA,OADA5E,GAAA+Z,oBAAAA,EACAA,ICTA7Z,OAAA,0BAAA,kBAAA,kCAAA,SAAAF,EAAA+Z,GAEA,GAAAE,GAAA,SAAA/U,GAUAzE,KAAAyE,KAAAA,EACAzE,KAAAkB,KAAAuD,EAAAvD,KACAlB,KAAAyZ,gBAVA,SAAAvG,EAAAwG,GACA,GAAAxG,EAAAuG,aACA,IAAA,GAAA3Z,GAAA,EAAAwT,EAAAJ,EAAAuG,aAAA5Z,OAAAC,EAAAwT,EAAAxT,IACA4Z,EAAAzY,KAAA,GAAAqY,GAAApG,EAAAuG,aAAA3Z,MASA2E,EAAAzE,KAAAyZ,cAIA,OADAla,GAAAia,YAAAA,EACAA,ICpBA/Z,OAAA,sBAAA,mBAAA,SAAAF,GAEA,GAAAoa,GAAA,SAAAlV,GACAzE,KAAAyE,KAAAA,EACAzE,KAAA0P,MAAAjL,EAAAiL,MACA1P,KAAA2K,MAAAlG,EAAAkG,MAIA,OADApL,GAAAoa,QAAAA,EACAA,ICTAla,OAAA,8CAAA,kBAAA,qBAAA,0BAAA,SAAAF,EAAAoa,EAAAH,GAEA,GAAAI,GAAA,SAAAnV,GACAzE,KAAAyE,KAAAA,EACAzE,KAAA8P,aAAArL,EAAAqL,aACArL,EAAA8K,cACAvP,KAAAuP,YAAA,GAAAiK,GAAA/U,EAAA8K,cAEAvP,KAAA2K,MAAAlG,EAAAkG,MACA3K,KAAA6S,KAAApO,EAAAoO,KACA7S,KAAA6Z,UAAApV,EAAAoV,UACA7Z,KAAA8Z,iBAAArV,EAAAqV,iBACA9Z,KAAA+Z,mBAAAtV,EAAAsV,mBACA/Z,KAAAyP,QAAAhL,EAAAgL,QAAA,GAAAkK,GAAAlV,EAAAgL,SAAAwE,OACAjU,KAAAga,WAAAvV,EAAAuV,WACAha,KAAA8S,aAAArO,EAAAoO,KAAApO,EAAAoO,KAAA5N,QAAA,KAAA,KAAA,GAIA,OADA1F,GAAAqa,gCAAAA,EACAA,ICnBAna,OAAA,kCAAA,kBAAA,6CAAA,8BAAA,0BAAA,SAAAF,EAAAqa,EAAAd,EAAA5E,GACA,GAAA+F,GAAA,SAAAxV,GACAzE,KAAAyE,KAAAA,EACAzE,KAAAmP,aAAA,GAAAyK,GAAAnV,EAAA0K,cACAnP,KAAAqP,iBAAA,GAAAyJ,GAAArU,EAAA4K,iBAAArP,KAAAmP,aAAA0D,MACA7S,KAAAmG,GAAA1B,EAAA0B,GACAnG,KAAAkB,KAAAuD,EAAAvD,IACA,IAAAgZ,KAEAla,MAAAma,cAAA,SAAAhW,GAKA,MAJAA,KACA+V,KACAla,KAAAoa,QAAAjW,IAEA+V,GAEAla,KAAAoa,QAAA,SAAAjW,GAEA,GAAAmL,GAAAtP,KAAAqP,iBAAA2J,gBACAqB,GAAA,CACAlW,GAAAnE,KAAAyW,WAAAtS,EACA,KAAA,GAAArE,GAAA,EAAAkP,EAAAM,EAAAzP,OAAAC,EAAAkP,EAAAlP,IAAA,CACA,GAAAwa,GAAAhL,EAAAxP,EACAwa,GAAAxD,SAAA3S,KACAkW,GAAA,EACAH,EAAAjZ,KAAAqZ,EAAAzD,iBAGA,OAAAwD,GAEAra,KAAAmU,UAAA,SAAA4B,EAAAC,GAEA,OADA,GAAA9B,IACAC,UAAAnU,KAAAmP,aAAA0D,KAAAkD,EAAAC,IAEAhW,KAAAua,kBAAA,SAAAxE,EAAAC,GAEA,OADA,GAAA9B,IACAC,UAAAnU,KAAAmP,aAAA2D,aAAAiD,EAAAC,IAEAhW,KAAAyW,WAAA,SAAAtS,GAEA,OADA,GAAA+P,IACAuC,WAAAzW,KAAAmP,aAAA0D,KAAA1O,IAKA,OADA5E,GAAA0a,oBAAAA,EACAA,IC7CAxa,OAAA,6BAAA,kBAAA,iCAAA,kCAAA,SAAAF,EAAAkV,EAAAwF,GAEA,GAAAhH,GAAA,SAAAC,EAAAsH,EAAAC,GACA,GAAAvH,EAAAjE,OACA,IAAA,GAAAnP,GAAA,EAAAkP,EAAAkE,EAAAjE,OAAApP,OAAAC,EAAAkP,EAAAlP,IAAA,CACA,GAAA4a,GAAA,GAAAT,GAAA/G,EAAAjE,OAAAnP,GACA0a,GAAAvZ,KAAAyZ,GACAD,EAAAC,EAAAvU,IAAAuU,IAKAC,EAAA,SAAAlW,GACA,GAAAmW,GAAA,GAAAnG,GAAAhQ,EAOA,OANAmW,GAAAnW,KAAAA,EACAmW,EAAAC,wBACAD,EAAAE,2BAEA7H,EAAA2H,EAAAnW,KAAAmW,EAAAC,qBAAAD,EAAAE,yBAEAF,EAIA,OADArb,GAAAob,eAAAA,EACAA,ICxBAlb,OAAA,kCAAA,kBAAA,iCAAA,kCAAA,SAAAF,EAAAkV,EAAAwF,GAEA,GAAAhH,GAAA,SAAAC,EAAAsH,EAAAC,GACA,GAAAvH,EAAAjE,OACA,IAAA,GAAAnP,GAAA,EAAAkP,EAAAkE,EAAAjE,OAAApP,OAAAC,EAAAkP,EAAAlP,IAAA,CACA,GAAA4a,GAAA,GAAAT,GAAA/G,EAAAjE,OAAAnP,GACA0a,GAAAvZ,KAAAyZ,GACAD,EAAAC,EAAAvU,IAAAuU,IAKAK,EAAA,SAAAtW,GACA,GAAAmW,GAAA,GAAAnG,GAAAhQ,EAQA,OAPAmW,GAAAnW,KAAAA,EACAmW,EAAAnW,KAAAvD,KAAA,QACA0Z,EAAAC,wBACAD,EAAAE,2BAEA7H,EAAA2H,EAAAnW,KAAAmW,EAAAC,qBAAAD,EAAAE,yBAEAF,EAIA,OADArb,GAAAwb,oBAAAA,EACAA,ICzBAtb,OAAA,mCAAA,kBAAA,kCAAA,SAAAF,EAAAkV,GAEA,GAAAuG,GAAA,SAAA9H,EAAA+H,EAAA5G,EAAA6G,EAAA5G,EAAA6G,GACA,GAAAjI,EAAAlK,gBACA,IAAA,GAAAlJ,GAAA,EAAAkP,EAAAkE,EAAAlK,gBAAAnJ,OAAAC,EAAAkP,EAAAlP,IAAA,CACA,GAAAuO,GAAA,GAAAoG,GAAAvB,EAAAlK,gBAAAlJ,GAIA,IAHAmb,EAAAha,KAAAoN,GACA6M,EAAA7M,EAAAlI,IAAAkI,EAEAA,EAAAkG,eAEA,IAAA,GADA6G,GAAA/M,EAAAkG,eACA8G,EAAA,EAAAC,EAAAF,EAAAvb,OAAAwb,EAAAC,EAAAD,IAAA,CACA,GAAAE,GAAAH,EAAAC,EACAhH,GAAApT,KAAAsa,GACAjH,EAAAiH,EAAApV,IAAAoV,EACAJ,EAAAI,EAAApV,IAAAkI,KAOAmN,EAAA,SAAA/W,GACAzE,KAAAyb,wBACAzb,KAAA0b,2BACA1b,KAAA2b,wCACA3b,KAAAuU,kBACAvU,KAAA0U,qBACA1U,KAAAyE,KAAAA,EAEAuW,EAAAvW,EAAAzE,KAAAyb,qBAAAzb,KAAAuU,eAAAvU,KAAA0b,wBAAA1b,KAAA0U,kBAAA1U,KAAA2b,sCAIA,OADApc,GAAAic,qBAAAA,EACAA,IClCA/b,OAAA,wCAAA,kBAAA,uCAAA,SAAAF,EAAA6V,GAEA,GAAA4F,GAAA,SAAA9H,EAAA0I,EAAAvH,EAAAwH,EAAAvH,GACA,GAAApB,EAAA4I,qBACA,IAAA,GAAAhc,GAAA,EAAAkP,EAAAkE,EAAA4I,qBAAAjc,OAAAC,EAAAkP,EAAAlP,IAAA,CACA,GAAAqV,GAAA,GAAAC,GAAAlC,EAAA4I,qBAAAhc,GAIA,IAHA8b,EAAA3a,KAAAkU,GACA0G,EAAA1G,EAAAhP,IAAAgP,EAEAA,EAAAZ,eAEA,IAAA,GADA6G,GAAAjG,EAAAZ,eACA8G,EAAA,EAAAC,EAAAF,EAAAvb,OAAAwb,EAAAC,EAAAD,IAAA,CACA,GAAAE,GAAAH,EAAAC,EACAhH,GAAApT,KAAAsa,GACAjH,EAAAiH,EAAApV,IAAAoV,KAOAQ,EAAA,SAAAtX,GACAzE,KAAAgc,6BACAhc,KAAAic,gCACAjc,KAAAuU,kBACAvU,KAAA0U,qBACA1U,KAAAyE,KAAAA,EAEAuW,EAAAvW,EAAAzE,KAAAgc,0BAAAhc,KAAAuU,eAAAvU,KAAAic,6BAAAjc,KAAA0U,mBAIA,OADAnV,GAAAwc,0BAAAA,EACAA,IChCAtc,OAAA,gCAAA,mBAAA,SAAAF,GACA,YAEA,IAAAyb,GAAA,SAAAkB,EAAAC,EAAAC,GACA,GAAAC,KACA,IAAAF,EAAA,CACA,IAAA,GAAArc,GAAA,EAAAkP,EAAAmN,EAAAH,0BAAAnc,OAAAC,EAAAkP,EAAAlP,IAGA,IAAA,GAFAwc,GAAAH,EAAAH,0BAAAlc,GAAAqG,GACAoW,GAAA,EACAlB,EAAA,EAAAC,EAAAY,EAAAT,qBAAA5b,OAAAwb,EAAAC,EAAAD,IAAA,CACA,GAAAmB,GAAAN,EAAAT,qBAAAJ,GAAAlG,mBACAqH,KAAAF,GAAAC,KAAA,GAEAL,EAAAT,qBAAArS,OAAAiS,EAAA,EAAAc,EAAAH,0BAAAlc,IACAyc,GAAA,GACAC,IAAAF,GAAAC,KAAA,GAEAF,EAAApb,KAAAoa,GAIA,IAAA,GAAAvb,GAAAuc,EAAAxc,OAAA,EAAAmP,EAAA,EAAAlP,GAAAkP,EAAAlP,IACAoc,EAAAT,qBAAArS,OAAAiT,EAAAvc,GAAA,GAGAsc,EAAAK,kBAAAlX,KAAAC,MAAAD,KAAAuC,UAAAoU,EAAAT,sBACA,KAAA,GAAA3b,GAAA,EAAAkP,EAAAoN,EAAAK,kBAAA5c,OAAAC,EAAAkP,EAAAlP,IAAA,CACA,GAAA4c,GAAAN,EAAAK,kBAAA3c,EAEA,IADAsc,EAAAO,qBAAAD,EAAAvW,IAAAuW,EACAA,EAAAnI,eAEA,IAAA,GADA6G,GAAAsB,EAAAnI,eACA8G,EAAA,EAAAC,EAAAF,EAAAvb,OAAAwb,EAAAC,EAAAD,IAAA,CACA,GAAAE,GAAAH,EAAAC,EACAe,GAAA7H,eAAAtT,KAAAsa,GACAa,EAAA1H,kBAAA6G,EAAApV,IAAAoV,KAMAqB,EAAA,SAAAC,EAAAC,GACA9c,KAAAyc,qBACAzc,KAAA2c,wBACA3c,KAAAuU,kBACAvU,KAAA0U,qBACAsG,EAAA6B,EAAAC,EAAA9c,MAGA,OADAT,GAAAqd,kBAAAA,EACAA,IChDAnd,OAAA,6BAAA,mBAAA,SAAAF,GACA,GAAAiM,GAAA,SAAAkC,GACA,GACAqP,MACAC,EAAA,KACAC,EAAA,KACAC,GAAA,CAEAld,MAAAoa,QAAA,WACA,GAAArJ,GAAA/Q,KAAAmd,qBAEA9O,EAAArO,KAAA6Q,mBACA,KAAAxC,EACA,OAAA,CAGA,KAAA,GADA+O,IAAA,EACAtd,EAAA,EAAAA,EAAAuO,EAAAwM,qBAAAhb,OAAAC,IAAA,CACA,GAAAoP,GAAAb,EAAAwM,qBAAA/a,EACA,IAAAoP,EAAAG,iBAAA0J,WAAA,CAEA/Y,KAAAqd,SAAAnO,EAAA/I,KACAnG,KAAAsd,qBAEAF,GAAA,IAIA,MAAA,KAAArM,EAAAlR,QAAAud,GAEApd,KAAAud,SAAA,SAAAC,EAAArZ,GACA4Y,EAAAS,GAAArZ,GAEAnE,KAAAyd,YAAA,SAAAC,GACAR,EAAAQ,GAEA1d,KAAA2d,YAAA,WACA,MAAAT,IAEAld,KAAAmd,mBAAA,WACA,GAAApM,KACA,KAAA7M,MAAA6Y,GAAA,CACA,GAAArC,GAAAsC,EAAAlC,wBAAA5W,IACAwW,KACA3J,EAAAA,EAAA6M,OAAAlD,EAAAP,cAAA4C,EAAA7Y,QAGA,MAAA6M,IAEA/Q,KAAAqd,SAAA,SAAAG,GACA,MAAAT,GAAAS,IAEAxd,KAAA6d,UAAA,WACA,MAAAd,IAEA/c,KAAA8d,eAAA,SAAAN,GAGA,MAFAR,GAAAlC,wBAAA0C,GACArJ,UAAAnU,KAAAqd,SAAAG,IACAlI,kBAEAtV,KAAA+d,gBAAA,WACA,GAAA9O,GAAA8N,EACAtc,IACA,KAAA,GAAA+c,KAAAvO,GAAA,CACA,GAAAyL,GAAAsC,EAAAlC,wBAAA0C,GACAQ,EAAAtD,EAAAvG,UAAAnU,KAAAqd,SAAAG,GACA/c,GAAA+c,GAAAQ,EAAA1I,eAEA,MAAA7U,IAEAT,KAAAie,kBAAA,WACA,GAAAhP,GAAA8N,EACAtc,IACA,KAAA,GAAA+c,KAAAvO,GAAA,CACA,GAAAyL,GAAAsC,EAAAlC,wBAAA0C,EACA,IAAA9C,EAAA,CACA,GAAAsD,GAAAtD,EAAAvG,UAAAnU,KAAAqd,SAAAG,IACAlI,EAAA0I,EAAA1I,cACA7U,GAAA+c,GAAA9C,EAAAjE,WAAAnB,IAGA,MAAA7U,IAEAT,KAAAke,kBAAA,SAAA7P,GACA,UAAAA,EAAAnN,OAGA8b,EAAA3O,IAEArO,KAAA6Q,kBAAA,WACA,MAAAmM,IAEAhd,KAAAme,iBAAA,SAAA3J,GACA,IAAA,GAAA1U,GAAA,EAAAkP,EAAAwF,EAAAZ,WAAA/T,OAAAC,EAAAkP,EAAAlP,IAAA,OAEAid,GADAvI,EAAAZ,WAAA9T,GACAoE,KAEA+Y,EAAAzI,GAEAxU,KAAAsd,iBAAA,WACA,MAAAL,IAEAjd,KAAAoe,mBAAA,WACA,MAAA1Q,IAIA,OADAnO,GAAAiM,eAAAA,EACAA,IC1GA/L,OAAA,uCAAA,mBAAA,SAAAF,GAEA,GAAA8e,GAAA,SAAAC,GACAte,KAAAwK,YAAA8T,EAAA9T,YACAxK,KAAA+N,YAAAuQ,EAAAvQ,YACA/N,KAAAwQ,YAAA8N,EAAA9N,YACAxQ,KAAA6K,SAAAyT,EAAAzT,SACA7K,KAAAuQ,OAAA+N,EAAA/N,OAIA,OADAhR,GAAA8e,yBAAAA,EACAA,ICXA5e,OAAA,4BAAA,mBAAA,SAAAF,GAEA,GAAAgf,GAAAC,MAAAD,IAKAE,GAJAD,MAAAE,KAIA,SAAAC,GAKA,MAJAA,GAAAH,MAAAI,KAAAC,SAAAF,GACAA,EAAAA,EAAA1I,MAAA,KAAA,GACA0I,EAAAA,EAAA1Z,QAAA,MAAA,KACA0Z,EAAAA,EAAA1Z,QAAA,MAAA,OAIA6Z,EAAA,SAAAC,GACA,GAAAC,IACAC,IAAA,WACAxW,IAAA,gBACAsW,IAAAA,EAEA,OAAAxZ,MAAAuC,UAAAkX,IAGAE,EAAA,SAAAC,GAEA,GAAAC,GAAAZ,MAAAI,KAAAS,SAAAF,GAEAG,EAAAd,MAAAI,KAAAW,aAAAH,EAAA,OAEAI,EAAAhB,MAAAE,KAAAe,QAAAH,EAGA,OADAf,GAAAmB,kBAAAF,IAIAG,EAAA,SAAAC,EAAA/V,GAGA,MADAA,GAAAgW,QAAAD,EAAA,aAIAE,EAAA,SAAAxB,EAAAyB,EAAAC,GACA,GAAAC,GAAAzB,MAAAyB,OAAAC,aAAA,UAAAH,EAMA,OALAE,GAAAE,OACAC,GAAAJ,IAEAC,EAAAI,OAAA7B,MAAAI,KAAAW,aAAAjB,IACA2B,EAAAK,SACAL,EAAAM,OAAAC,SAGAC,EAAA,SAAAC,GACA,GAAA/K,GAAA6I,MAAAI,KAAAW,aAAAmB,GACAC,EAAA,EAAAhL,EAAA9V,SAEAyf,EAAAd,MAAAI,KAAAW,cAIA,OAFAD,GAAAsB,SAAA,GACAtB,EAAAsB,SAAAD,GACArB,EAAAkB,SAGAK,EAAA,SAAAC,EAAAJ,EAAAV,EAAAe,EAAAC,GACA,GAAArL,GAAA6I,MAAAI,KAAAW,cACA5J,GAAAsL,SAAAP,GACA/K,EAAAsL,SAAAjB,GACArK,EAAAsL,SAAAF,GACApL,EAAAsL,SAAAD,EAEA,IAAAE,GAAAvL,EAAA6K,QAEAW,EAAA3C,MAAA2C,KAAAC,QAGA,OAFAD,GAAAhB,MAAA3B,MAAA6C,OAAAD,SAAAN,GACAK,EAAAd,OAAAa,GACAC,EAAAG,SAAAd,SAGAe,EAAA,WAEAvhB,KAAA6f,QAAA,SAAA2B,EAAArP,GAEA,GAAAmM,GAAA/Y,KAAAuC,UAAA0Z,GACAC,EAAA3C,EAAA3M,EAAA5F,OACAmU,EAAAjC,EAAAgD,GAGA7B,EAAApB,MAAAkD,OAAAC,aAAAC,IACA/X,EAAAqV,EAAA/M,EAAAtI,WAGAgY,EAAAlC,EAAAC,EAAA/V,GACAiY,EAAArD,EAAAoD,GAGAf,EAAAlB,EAAAtJ,UAAA,EAAAsL,IACA7B,EAAAH,EAAAtJ,UAAAsL,IAGA5B,EAAAxB,MAAAkD,OAAAC,aAAAI,IACAC,EAAAvD,EAAAuB,GAGAe,EAAAjB,EAAAxB,EAAAyB,EAAAC,GACAiC,EAAAxD,EAAAsC,GAGAC,EAAAP,EAAAC,GAGAwB,EAAArB,EAAAC,EAAAJ,EAAAV,EAAAe,EAAAC,EAMA,OAAAN,GAAA,IAAAoB,EAAA,IAAAE,EAAA,IAAAC,EAAA,IAFAxD,EADAyD,EAAA5L,UAAA,EAAA4L,EAAAriB,OAAA,KAQA,OADAN,GAAAgiB,cAAAA,EACAA,ICzHA9hB,OAAA,wBAAA,kBAAA,qBAAA,4BAAA,SAAAF,EAAAa,EAAAmhB,GAEA,GAAAY,GAAA,SAAAC,GACApiB,KAAA6f,QAAA,SAAAwC,GACA,GAAAvf,GAAA,GAAA1C,GACAkiB,EAAA,EAsCA,OArCAF,GAAAthB,KAAA,SAAAqR,GACA,GAAAkQ,EAAAjI,UAAA,CAEA,GAAAmI,IACA9U,gBAAA4U,EAAAjE,qBACAoE,MAAAhE,MAAAI,KAAA6D,WAAAjE,MAAAkD,OAAAC,aAAA,KACA3T,iBAAAqU,EAAAxR,oBAAA1K,GACAuX,SAAA2E,EAAA1E,cAGA0E,GAAA/E,qBACAiF,EAAA,gBAAAF,EAAA/E,mBAAAnX,GAKA,KAAA,GAFAuc,MAAAC,EAAAN,EAAApE,oBACA2E,EAAAC,OAAAC,oBAAAH,GACA7iB,EAAA,EAAAA,EAAA8iB,EAAA/iB,OAAAC,IAAA,CACA,GAAAmR,GAAA2R,EAAA9iB,EACA,YAAAmR,GACAyR,EAAAzhB,MACAiD,IAAA+M,EACA9M,MAAAwe,EAAA1R,KAIAsR,EAAA,cAAAG,CAIAJ,IADA,GAAAf,IACA1B,QAAA0C,EAAApQ,GACArP,EAAAtC,QAAA8hB,OAEAxf,GAAAnC,OAAA0hB,EAAAlF,uBAEA,SAAApa,GACAD,EAAAnC,OAAAoC,KAEAD,GAKA,OADAvD,GAAA4iB,UAAAA,EACAA,IChDA1iB,OAAA,sBAAA,kBAAA,6BAAA,0CAAA,gCAAA,qBAAA,sCAAA,kCAAA,uCAAA,4BAAA,iCAAA,+BAAA,4BAAA,wBAAA,SAAAF,EAAA0M,EAAAQ,EAAAqB,EAAA1N,EAAAie,EAAA7C,EAAAO,EAAApB,EAAAI,EAAA6B,EAAApR,EAAA2W,GAEA,GAAAY,GAAA,SAAArW,EAAA2B,GAEA,GAEA2U,GAAAhG,EAAAiG,EAAAC,EAAAC,EAAAC,EAFA9U,EAAA,GAAA7B,GAAAC,GACA2W,EAAA,GAAApX,GAAAqC,EAAAD,GACAiV,EAAAtjB,IACAA,MAAA4N,WAAAU,EAAAV,WACA5N,KAAA6N,cAAAS,EAAAT,cAEA7N,KAAAoQ,wBAAA,SAAAmT,EAAAnX,GACA,GAAAtJ,GAAA,GAAA1C,GACAojB,EAAA,GAAAnF,GAAAkF,EAQA,OAPAF,GAAAjT,wBAAAoT,EAAApX,GAAAtL,KAAA,SAAA2D,GACAwe,EAAAM,CACA,IAAAva,GAAA,GAAAwS,GAAA/W,EACA3B,GAAAtC,QAAAwI,IACA,WACAlG,EAAAnC,WAEAmC,GAGA9C,KAAA4Q,6BAAA,SAAA2S,GACA,GAAAzgB,GAAA,GAAA1C,GACAojB,EAAA,GAAAnF,GAAAkF,EAQA,OAPAF,GAAAzS,6BAAA4S,GAAA1iB,KAAA,SAAA2D,GACAwe,EAAAM,CACA,IAAAzH,GAAA,GAAAC,GAAAtX,EACA3B,GAAAtC,QAAAsb,IACA,WACAhZ,EAAAnC,WAEAmC,GAGA9C,KAAAyjB,qBAAA,SAAAF,EAAAG,EAAAtX,GACA,GAAAtJ,GAAA,GAAA1C,EAqBA,OAnBAsjB,GACAJ,EAAAlT,wBAAAmT,EAAAnX,GAAAtL,KAAA,SAAA+b,GACAyG,EAAA1S,6BAAA2S,GAAAziB,KAAA,SAAAgc,GACA,GAAAL,GAAA,GAAAG,GAAAC,EAAAC,EACAha,GAAAtC,QAAAic,IACA,WACA3Z,EAAAnC,YAEA,WACAmC,EAAAnC,WAGA2iB,EAAAlT,wBAAAmT,EAAAnX,GAAAtL,KAAA,SAAA+b,GACA,GAAAJ,GAAA,GAAAG,GAAAC,EAAA,KACA/Z,GAAAtC,QAAAic,IACA,WACA3Z,EAAAnC,WAGAmC,GAGA9C,KAAA6Q,kBAAA,SAAA7C,EAAAuV,EAAAnX,GACA,GAAAtJ,GAAA,GAAA1C,EACA4iB,GAAAhV,CACA,IAAAwV,GAAA,GAAAnF,GAAA4E,GAAAM,EAQA,OAPAF,GAAAxS,kBAAA7C,EAAAwV,EAAApX,GAAAtL,KAAA,SAAAwB,GACA0a,EAAA,GAAArC,GAAArY,GACAQ,EAAAtC,QAAAwc,IACA,WACAA,EAAA,KACAla,EAAAnC,WAEAmC,GAGA9C,KAAAwR,uBAAA,SAAAC,EAAA8R,GACA,GAAAzgB,GAAA,GAAA1C,EACA+iB,GAAA1R,CACA,IAAA+R,GAAA,GAAAnF,GAAA4E,GAAAM,EAQA,OAPAF,GAAA7R,uBAAAC,EAAA+R,GAAA1iB,KAAA,SAAAwB,GACA8gB,EAAA,GAAArI,GAAAzY,GACAQ,EAAAtC,QAAA4iB,IACA,WACAA,EAAA,KACAtgB,EAAAnC,WAEAmC,GAGA9C,KAAA2jB,cAAA,SAAAhS,EAAA4R,GACA5R,EAAAA,EAAA1M,QAAA,KAAA,IAAAqR,UAAA,EAAA,EACA,IAAAkN,GAAA,GAAAnF,GAAA4E,GAAAM,EACA,OAAAF,GAAA3R,sCAAAC,EAAA6R,IAGAxjB,KAAAkS,aAAA,WACA,MAAAmR,GAAAnR,gBAGAlS,KAAA4L,2BAAA,SAAAoC,GACA,MAAAqV,GAAAzX,2BAAAoC,IAGAhO,KAAA8L,0BAAA,SAAAkC,EAAAuV,GACA,GAAAzgB,GAAA,GAAA1C,GACAojB,EAAA,GAAAnF,GAAAkF,EAOA,OANAF,GAAAvX,0BAAAkC,EAAAwV,GAAA1iB,KAAA,SAAAwB,GACA2gB,EAAAM,EACAzgB,EAAAtC,QAAA8B,IACA,WACAQ,EAAAnC,WAEAmC,GAGA9C,KAAAqS,2BAAA,SAAArE,EAAAiE,EAAAlE,GACA,MAAAsV,GAAAhR,2BAAArE,EAAAiE,EAAAlE,IAGA/N,KAAAsS,cAAA,SAAA1H,EAAA2H,EAAAC,GACA,MAAA6Q,GAAA/Q,cAAA1H,EAAA2H,EAAAC,IAGAxS,KAAA4jB,kBAAA,WAKA,MAJAV,KACAA,EAAA,GAAA1X,GAAAkB,EAAAgB,kBAGAwV,GAGAljB,KAAA6jB,aAAA,WAEA,MAAA,IAAA1B,GADAkB,EAAAnR,iBAIAlS,KAAAyS,2BAAA,SAAAC,GACA,GAAA5P,GAAA,GAAA1C,EAMA,OALAijB,GAAA5Q,2BAAAC,GAAA5R,KAAA,SAAAwB,GACAQ,EAAAtC,QAAA8B,IACA,WACAQ,EAAAnC,WAEAmC,GAKA,OADAvD,GAAAukB,QAAAf,EACAA","file":"connectsdk.noEncrypt.min.js","sourcesContent":["(function (global) {\r\n    var connectsdk = {}, modules = {};\r\n\r\n    /* SDK internal function */\r\n    connectsdk.define = function (module, dependencies, fn) {\r\n        if (dependencies && dependencies.length) {\r\n            for (var i = 0; i < dependencies.length; i++) {\r\n                dependencies[i] = modules[dependencies[i]];\r\n            }\r\n        }\r\n        modules[module] = fn.apply(this, dependencies || []);\r\n    };\r\n\r\n    // Export `connectsdk` based on environment.\r\n    global.connectsdk = connectsdk;\r\n\r\n    if (typeof exports !== 'undefined') {\r\n        exports.connectsdk = connectsdk;\r\n    }\r\n\r\n    connectsdk.define('connectsdk.core', [], function () {\r\n        return connectsdk;\r\n    });\r\n\r\n    // use require.js if available otherwise we use our own\r\n    if (typeof define === 'undefined') {\r\n        global.define = connectsdk.define;\r\n    }\r\n} (typeof window === 'undefined' ? this : window));\r\n\r\n// (re)define core\r\ndefine(\"connectsdk.core\", [], function () {\r\n    var global = typeof window === 'undefined' ? this : window;\r\n    var connectsdk = {};\r\n    global.connectsdk = connectsdk;\r\n    if (typeof exports !== 'undefined') {\r\n        exports.connectsdk = connectsdk;\r\n    }\r\n    return connectsdk;\r\n});\r\n","define('connectsdk.promise', ['connectsdk.core'], function(turing) {\r\n\tfunction PromiseModule(global) {\r\n\t\t/**\r\n\t\t * The Promise class.\r\n\t\t */\r\n\t\tfunction Promise(singleton) {\r\n\t\t\tvar self = this;\r\n\t\t\tthis.pending = [];\r\n\r\n\t\t\t/**\r\n\t\t\t * Resolves a promise.\r\n\t\t\t *\r\n\t\t\t * @param {Object} A value\r\n\t\t\t */\r\n\t\t\tthis.resolve = function(result) {\r\n\t\t\t\tself.complete('resolve', result);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Rejects a promise.\r\n\t\t\t *\r\n\t\t\t * @param {Object} A value\r\n\t\t\t */\r\n\t\t\tthis.reject = function(result) {\r\n\t\t\t\tself.complete('reject', result);\r\n\t\t\t};\r\n\r\n\t\t\tif (singleton) {\r\n\t\t\t\tthis.isSingleton = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tPromise.prototype = {\r\n\t\t\t/**\r\n\t\t\t * Adds a success and failure handler for completion of this Promise object.\r\n\t\t\t *\r\n\t\t\t * @param {Function} success The success handler\r\n\t\t\t * @param {Function} success The failure handler\r\n\t\t\t * @returns {Promise} `this`\r\n\t\t\t */\r\n\t\t\tthen : function(success, failure) {\r\n\t\t\t\tthis.pending.push({\r\n\t\t\t\t\tresolve : success,\r\n\t\t\t\t\treject : failure\r\n\t\t\t\t});\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Runs through each pending 'thenable' based on type (resolve, reject).\r\n\t\t\t *\r\n\t\t\t * @param {String} type The thenable type\r\n\t\t\t * @param {Object} result A value\r\n\t\t\t */\r\n\t\t\tcomplete : function(type, result) {\r\n\t\t\t\twhile (this.pending[0]) {\r\n\t\t\t\t\tthis.pending.shift()[type](result);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tglobal.Promise = Promise;\r\n\t}\r\n\tPromiseModule(connectsdk);\r\n\r\n\treturn connectsdk.Promise;\r\n});","define('connectsdk.net', ['connectsdk.core'], function(connectsdk) {\r\n  var net = {};\r\n\r\n  /**\r\n    * Ajax request options:\r\n    *\r\n    *   - `method`: {String} HTTP method - GET, POST, etc.\r\n    *   - `success`: {Function} A callback to run when a request is successful\r\n    *   - `error`: {Function} A callback to run when the request fails\r\n    *   - `asynchronous`: {Boolean} Defaults to asynchronous\r\n    *   - `postBody`: {String} The HTTP POST body\r\n    *   - `contentType`: {String} The content type of the request, default is `application/x-www-form-urlencoded`\r\n    *\r\n    */\r\n\r\n  /**\r\n    * Removes leading and trailing whitespace.\r\n    * @param {String}\r\n    * @return {String}\r\n    */\r\n  var trim = ''.trim\r\n    ? function(s) { return s.trim(); }\r\n    : function(s) { return s.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, ''); };\r\n\r\n  function xhr() {\r\n    if (typeof XMLHttpRequest !== 'undefined' && (window.location.protocol !== 'file:' || !window.ActiveXObject)) {\r\n      return new XMLHttpRequest();\r\n    } else {\r\n      try {\r\n        return new ActiveXObject('Msxml2.XMLHTTP.6.0');\r\n      } catch(e) { }\r\n      try {\r\n        return new ActiveXObject('Msxml2.XMLHTTP.3.0');\r\n      } catch(e) { }\r\n      try {\r\n        return new ActiveXObject('Msxml2.XMLHTTP');\r\n      } catch(e) { }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function successfulRequest(request) {\r\n    return (request.status >= 200 && request.status < 300) ||\r\n        request.status == 304 ||\r\n        (request.status == 0 && request.responseText);\r\n  }\r\n\r\n  /**\r\n    * Serialize JavaScript for HTTP requests.\r\n    *\r\n    * @param {Object} object An Array or Object\r\n    * @returns {String} A string suitable for a GET or POST request\r\n    */\r\n  net.serialize = function(object) {\r\n    if (!object) return;\r\n\r\n    if (typeof object === 'string') {\r\n      return object;\r\n    }\r\n\r\n    var results = [];\r\n    for (var key in object) {\r\n      results.push(encodeURIComponent(key) + '=' + encodeURIComponent(object[key]));\r\n    }\r\n    return results.join('&');\r\n  };\r\n\r\n  /**\r\n    * JSON.parse support can be inferred using `connectsdk.detect('JSON.parse')`.\r\n    */\r\n  //connectsdk.addDetectionTest('JSON.parse', function() {\r\n  //  return window.JSON && window.JSON.parse;\r\n  //});\r\n\r\n  /**\r\n    * Parses JSON represented as a string.\r\n    *\r\n    * @param {String} string The original string\r\n    * @returns {Object} A JavaScript object\r\n    */\r\n  net.parseJSON = function(string) {\r\n    if (typeof string !== 'string' || !string) return null;\r\n    string = trim(string);\r\n    /*\r\n    return connectsdk.detect('JSON.parse') ?\r\n      window.JSON.parse(string) :\r\n      (new Function('return ' + string))();\r\n    */\r\n    return window.JSON.parse(string);\r\n  };\r\n\r\n  /**\r\n    * Parses XML represented as a string.\r\n    *\r\n    * @param {String} string The original string\r\n    * @returns {Object} A JavaScript object\r\n    */\r\n  if (window.DOMParser) {\r\n    net.parseXML = function(text) {\r\n      return new DOMParser().parseFromString(text, 'text/xml');\r\n    };\r\n  } else {\r\n    net.parseXML = function(text) {\r\n      var xml = new ActiveXObject('Microsoft.XMLDOM');\r\n      xml.async = 'false';\r\n      xml.loadXML(text);\r\n      return xml;\r\n    };\r\n  }\r\n\r\n  /**\r\n    * Creates an Ajax request.  Returns an object that can be used\r\n    * to chain calls.  For example:\r\n    *\r\n    *      $t.post('/post-test')\r\n    *        .data({ key: 'value' })\r\n    *        .end(function(res) {\r\n    *          assert.equal('value', res.responseText);\r\n    *        });\r\n    *\r\n    *      $t.get('/get-test')\r\n    *        .set('Accept', 'text/html')\r\n    *        .end(function(res) {\r\n    *          assert.equal('Sample text', res.responseText);\r\n    *        });\r\n    *\r\n    * The available chained methods are:\r\n    *\r\n    * `set` -- set a HTTP header\r\n    * `data` -- the postBody\r\n    * `end` -- send the request over the network, and calls your callback with a `res` object\r\n    * `send` -- sends the request and calls `data`: `.send({ data: value }, function(res) { });`\r\n    *\r\n    * @param {String} The URL to call\r\n    * @param {Object} Optional settings\r\n    * @returns {Object} A chainable object for further configuration\r\n    */\r\n  function ajax(url, options) {\r\n    var request = xhr(),\r\n        promise,\r\n        then,\r\n        response = {},\r\n        chain;\r\n    if (connectsdk.Promise) {\r\n      promise = new connectsdk.Promise();\r\n    }\r\n\r\n\r\n    function respondToReadyState(readyState) {\r\n      if (request.readyState == 4) {\r\n        var contentType = request.mimeType || request.getResponseHeader('content-type') || '';\r\n\r\n        response.status = request.status;\r\n        response.responseText = request.responseText;\r\n        if (/json/.test(contentType)) {\r\n          response.responseJSON = net.parseJSON(request.responseText);\r\n        } else if (/xml/.test(contentType)) {\r\n          response.responseXML = net.parseXML(request.responseText);\r\n      \t}\r\n\r\n        response.success = successfulRequest(request);\r\n\r\n        if (options.callback) {\r\n          return options.callback(response, request);\r\n        }\r\n\r\n        if (response.success) {\r\n          if (options.success) options.success(response, request);\r\n          if (promise) promise.resolve(response, request);\r\n        } else {\r\n          if (options.error) options.error(response, request);\r\n          if (promise) promise.reject(response, request);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Set the HTTP headers\r\n    function setHeaders() {\r\n      var defaults = {\r\n        'Accept': 'text/javascript, application/json, text/html, application/xml, text/xml, */*',\r\n        'Content-Type': 'application/json'\r\n      };\r\n\r\n      /**\r\n       * Merge headers with defaults.\r\n       */\r\n      for (var name in defaults) {\r\n        if (!options.headers.hasOwnProperty(name))\r\n          options.headers[name] = defaults[name];\r\n      }\r\n      for (var name in options.headers) {\r\n        request.setRequestHeader(name, options.headers[name]);\r\n      }\r\n\r\n    }\r\n\r\n    if (typeof options === 'undefined') options = {};\r\n\r\n    options.method = options.method ? options.method.toLowerCase() : 'get';\r\n    options.asynchronous = options.asynchronous || true;\r\n    options.postBody = options.postBody || '';\r\n    request.onreadystatechange = respondToReadyState;\r\n    request.open(options.method, url, options.asynchronous);\r\n\r\n    options.headers = options.headers || {};\r\n    if (options.contentType) {\r\n      options.headers['Content-Type'] = options.contentType;\r\n    }\r\n\r\n    if (typeof options.postBody !== 'string') {\r\n      // Serialize JavaScript\r\n      options.postBody = net.serialize(options.postBody);\r\n    }\r\n\r\n    // setHeaders();\r\n\r\n    function send() {\r\n      try {\r\n      \tsetHeaders();\r\n        request.send(options.postBody);\r\n      } catch (e) {\r\n        if (options.error) {\r\n          options.error();\r\n        }\r\n      }\r\n    }\r\n\r\n    chain = {\r\n      set: function(key, value) {\r\n        options.headers[key] = value;\r\n        return chain;\r\n      },\r\n\r\n      send: function(data, callback) {\r\n        options.postBody = net.serialize(data);\r\n        options.callback = callback;\r\n        send();\r\n        return chain;\r\n      },\r\n\r\n      end: function(callback) {\r\n        options.callback = callback;\r\n        send();\r\n        return chain;\r\n      },\r\n\r\n      data: function(data) {\r\n        options.postBody = net.serialize(data);\r\n        return chain;\r\n      },\r\n\r\n      then: function() {\r\n        chain.end();\r\n        if (promise) promise.then.apply(promise, arguments);\r\n        return chain;\r\n      }\r\n    };\r\n\r\n    return chain;\r\n  }\r\n\r\n  function JSONPCallback(url, success, failure) {\r\n    var self = this;\r\n    this.url = url;\r\n    this.methodName = '__connectsdk_jsonp_' + parseInt(new Date().getTime());\r\n    this.success = success;\r\n    this.failure = failure;\r\n\r\n    function runCallback(json) {\r\n      self.success(json);\r\n      self.teardown();\r\n    }\r\n\r\n    window[this.methodName] = runCallback;\r\n  }\r\n\r\n  JSONPCallback.prototype.run = function() {\r\n    this.scriptTag = document.createElement('script');\r\n    this.scriptTag.id = this.methodName;\r\n    this.scriptTag.src = this.url.replace('{callback}', this.methodName);\r\n    var that = this;\r\n    this.scriptTag.onerror = function() {\r\n    \tthat.failure();\r\n    };\r\n    document.body.appendChild(this.scriptTag);\r\n  };\r\n\r\n  JSONPCallback.prototype.teardown = function() {\r\n    window[this.methodName] = null;\r\n    try {\r\n    \tdelete window[this.methodName];\r\n    } catch (e) {}\r\n    if (this.scriptTag) {\r\n      document.body.removeChild(this.scriptTag);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * An Ajax GET request.\r\n   *\r\n   *      $t.get('/get-test')\r\n   *        .set('Accept', 'text/html')\r\n   *        .end(function(res) {\r\n   *          assert.equal('Sample text', res.responseText);\r\n   *        });\r\n   *\r\n   * @param {String} url The URL to request\r\n   * @param {Object} options The Ajax request options\r\n   * @returns {Object} A chainable object for further configuration\r\n   */\r\n  net.get = function(url, options) {\r\n    if (typeof options === 'undefined') options = {};\r\n    options.method = 'get';\r\n    return ajax(url, options);\r\n  };\r\n\r\n  /**\r\n   * An Ajax POST request.\r\n   *\r\n   *      $t.post('/post-test')\r\n   *        .data({ key: 'value' })\r\n   *        .end(function(res) {\r\n   *          assert.equal('value', res.responseText);\r\n   *        });\r\n   *\r\n   * @param {String} url The URL to request\r\n   * @param {Object} options The Ajax request options (`postBody` may come in handy here)\r\n   * @returns {Object} An object for further chaining with promises\r\n   */\r\n  net.post = function(url, options) {\r\n    if (typeof options === 'undefined') options = {};\r\n    options.method = 'post';\r\n    return ajax(url, options);\r\n  };\r\n\r\n  /**\r\n   * A jsonp request.  Example:\r\n   *\r\n   *     var url = 'http://feeds.delicious.com/v1/json/';\r\n   *     url += 'alex_young/javascript?callback={callback}';\r\n   *\r\n   *     connectsdk.net.jsonp(url, {\r\n   *       success: function(json) {\r\n   *         console.log(json);\r\n   *       }\r\n   *     });\r\n   *\r\n   * @param {String} url The URL to request\r\n   */\r\n  net.jsonp = function(url, options) {\r\n    if (typeof options === 'undefined') options = {};\r\n    var callback = new JSONPCallback(url, options.success, options.failure);\r\n    callback.run();\r\n  };\r\n\r\n  /**\r\n    * The Ajax methods are mapped to the `connectsdk` object:\r\n    *\r\n    *      connectsdk.get();\r\n    *      connectsdk.post();\r\n    *      connectsdk.json();\r\n    *\r\n    */\r\n  connectsdk.get = net.get;\r\n  connectsdk.post = net.post;\r\n  connectsdk.jsonp = net.jsonp;\r\n\r\n  net.ajax = ajax;\r\n  connectsdk.net = net;\r\n  return net;\r\n});","define(\"connectsdk.Util\", [\"connectsdk.core\"], function (connectsdk) {\r\n\r\n\t// Create a singleton from Util so the same util function can be used in different modules\r\n\tvar Util = (function () {\r\n\t\tvar instance;\r\n\r\n\t\tfunction createInstance() {\r\n\t\t\t// private variables to use in the public methods\r\n\t\t\tvar applePayPaymentProductId = 302;\r\n\t\t\tvar androidPayPaymentProductId = 320;\r\n\t\t\tvar bancontactPaymentProductId = 3012;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tapplePayPaymentProductId: applePayPaymentProductId,\r\n\t\t\t\tandroidPayPaymentProductId: androidPayPaymentProductId,\r\n\t\t\t\tbancontactPaymentProductId: bancontactPaymentProductId,\r\n\t\t\t\tgetMetadata: function () {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tscreenSize: window.innerWidth + \"x\" + window.innerHeight,\r\n\t\t\t\t\t\tplatformIdentifier: window.navigator.userAgent,\r\n\t\t\t\t\t\tsdkIdentifier: ((document.GC && document.GC.rppEnabledPage) ? 'rpp-' : '') + 'JavaScriptClientSDK/v${version}',\r\n\t\t\t\t\t\tsdkCreator: 'Ingenico'\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\tbase64Encode: function (data) {\r\n\t\t\t\t\tif (typeof data === \"object\") {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tdata = JSON.stringify(data);\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tthrow \"data must be either a String or a JSON object\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\t\t\t\t\tvar o1, o2, o3, h1, h2, h3, h4, bits, i = 0, ac = 0, enc = '', tmp_arr = [];\r\n\r\n\t\t\t\t\tif (!data) {\r\n\t\t\t\t\t\treturn data;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdo {// pack three octets into four hexets\r\n\t\t\t\t\t\to1 = data.charCodeAt(i++);\r\n\t\t\t\t\t\to2 = data.charCodeAt(i++);\r\n\t\t\t\t\t\to3 = data.charCodeAt(i++);\r\n\r\n\t\t\t\t\t\tbits = o1 << 16 | o2 << 8 | o3;\r\n\r\n\t\t\t\t\t\th1 = bits >> 18 & 0x3f;\r\n\t\t\t\t\t\th2 = bits >> 12 & 0x3f;\r\n\t\t\t\t\t\th3 = bits >> 6 & 0x3f;\r\n\t\t\t\t\t\th4 = bits & 0x3f;\r\n\r\n\t\t\t\t\t\t// use hexets to index into b64, and append result to encoded string\r\n\t\t\t\t\t\ttmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\r\n\t\t\t\t\t} while (i < data.length);\r\n\r\n\t\t\t\t\tenc = tmp_arr.join('');\r\n\r\n\t\t\t\t\tvar r = data.length % 3;\r\n\r\n\t\t\t\t\treturn (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\r\n\t\t\t\t},\r\n\t\t\t\tfilterOutProductsThatAreNotSupportedInThisBrowser: function (json) {\r\n\t\t\t\t\tfor (var i = json.paymentProducts.length - 1, il = 0; i >= il; i--) {\r\n\t\t\t\t\t\tvar product = json.paymentProducts[i];\r\n\t\t\t\t\t\tif (product && this.paymentProductsThatAreNotSupportedInThisBrowser.indexOf(product.id) > -1) {\r\n\t\t\t\t\t\t\tjson.paymentProducts.splice(i, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tpaymentProductsThatAreNotSupportedInThisBrowser: [applePayPaymentProductId]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tgetInstance: function () {\r\n\t\t\t\tif (!instance) {\r\n\t\t\t\t\tinstance = createInstance();\r\n\t\t\t\t}\r\n\t\t\t\treturn instance;\r\n\t\t\t}\r\n\t\t};\r\n\t})();\r\n\r\n\tconnectsdk.Util = Util;\r\n\treturn Util;\r\n});","define(\"connectsdk.AndroidPay\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.Util\"], function (connectsdk, Promise, Util) {\r\n\r\n    var _util = Util.getInstance();\r\n    var _C2SCommunicator = null;\r\n    var _paymentProductSpecificInputs = null;\r\n    var _context = null;\r\n\r\n    var setupRequestMethodData = function (networks, publicKey) {\r\n        var androidPayEnvironment = 'TEST';\r\n        if (_context.environment === 'PROD') {\r\n            androidPayEnvironment = 'PROD';\r\n        }\r\n        var methodData = [{\r\n            supportedMethods: ['https://android.com/pay'],\r\n            data: {\r\n                merchantId: _paymentProductSpecificInputs.androidPay.merchantId,\r\n                environment: androidPayEnvironment,\r\n                allowedCardNetworks: networks,\r\n                paymentMethodTokenizationParameters: {\r\n                    tokenizationType: 'NETWORK_TOKEN',\r\n                    parameters: {\r\n                        'publicKey': publicKey\r\n                    }\r\n                }\r\n            }\r\n        }];\r\n        return methodData;\r\n    }\r\n\r\n    var setupRequestDetails = function () {\r\n        var totalAmount = (_context.totalAmount / 100).toFixed(2);\r\n\r\n        var details = {\r\n            total: {\r\n                label: 'Total',\r\n                amount: {\r\n                    currency: _context.currency,\r\n                    value: totalAmount\r\n                }\r\n            }\r\n        };\r\n        return details;\r\n    }\r\n\r\n    var setupRequestOptions = function () {\r\n        var options = {\r\n            requestShipping: false,\r\n            requestPayerEmail: false,\r\n            requestPayerPhone: false,\r\n            requestPayerName: false\r\n        };\r\n        return options;\r\n    }\r\n\r\n    var _doCanMakePayment = function (jsonNetworks, jsonPublicKey) {\r\n        var promise = new Promise();\r\n\r\n        var methodData = setupRequestMethodData(jsonNetworks.networks, jsonPublicKey.publicKey);\r\n        var details = setupRequestDetails();\r\n        var options = setupRequestOptions();\r\n        var request = new PaymentRequest(methodData, details, options);\r\n        setTimeout(function () {\r\n            // When the PRAPI is available, it does not mean the canMakePayment() method is also implemented.\r\n            if (request.canMakePayment) {\r\n                request.canMakePayment().then(function (result) {\r\n                    if (result) {\r\n                        promise.resolve(true);\r\n                    } else {\r\n                        promise.resolve(false);\r\n                    }\r\n                })['catch'](function (error) { // we use ['catch'] notation intead of .catch because of IE8 compatibility\r\n                    promise.reject(error);\r\n                });\r\n            } else {\r\n                promise.resolve(true);\r\n            }\r\n        });\r\n        return promise;\r\n    }\r\n\r\n    var _checkPaymentProductPublicKey = function () {\r\n        var promise = new Promise();\r\n        _C2SCommunicator.getPaymentProductPublicKey(_util.androidPayPaymentProductId).then(function (jsonPublicKey) {\r\n            promise.resolve(jsonPublicKey);\r\n        }, function () {\r\n            promise.reject();\r\n        });\r\n        return promise;\r\n    }\r\n\r\n    var _checkPaymentProductNetworks = function () {\r\n        var promise = new Promise();\r\n        _C2SCommunicator.getPaymentProductNetworks(_util.androidPayPaymentProductId, _context).then(function (jsonNetworks) {\r\n            if (jsonNetworks.networks && jsonNetworks.networks.length > 0) {\r\n                promise.resolve(jsonNetworks);\r\n            } else {\r\n                promise.reject();\r\n            }\r\n        }, function () {\r\n            promise.reject();\r\n        });\r\n        return promise;\r\n    }\r\n\r\n    var _isPaymentRequestAPIAvailable = function () {\r\n        return window && window.PaymentRequest;\r\n    }\r\n\r\n    this.AndroidPay = function (C2SCommunicator) {\r\n        _C2SCommunicator = C2SCommunicator;\r\n        this.isAndroidPayAvailable = function (context, paymentProductSpecificInputs) {\r\n            _context = context;\r\n            _paymentProductSpecificInputs = paymentProductSpecificInputs;\r\n            var promise = new Promise();\r\n            setTimeout(function () {\r\n                if (_isPaymentRequestAPIAvailable()) {\r\n                    _checkPaymentProductNetworks().then(function (jsonNetworks) {\r\n                        _checkPaymentProductPublicKey().then(function (jsonPublicKey) {\r\n                            _doCanMakePayment(jsonNetworks, jsonPublicKey).then(function (isAndroidPayAvailable) {\r\n                                if (!isAndroidPayAvailable) {\r\n                                    _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.androidPayPaymentProductId);\r\n                                }\r\n                                promise.resolve(isAndroidPayAvailable);\r\n                            }, function () {\r\n                                _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.androidPayPaymentProductId);\r\n                                promise.reject('failed to run canMakePayment() check with the payment request API');\r\n                            });\r\n                        }, function () {\r\n                            _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.androidPayPaymentProductId);\r\n                            promise.reject('failed to retrieve payment product publickey');\r\n                        });\r\n                    }, function () {\r\n                        _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.androidPayPaymentProductId);\r\n                        promise.reject('failed to retrieve paymentproduct networks');\r\n                    });\r\n                } else {\r\n                    _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.androidPayPaymentProductId);\r\n                    promise.reject('Payment Request API is not available');\r\n                }\r\n            });\r\n            return promise;\r\n        }\r\n\r\n        this.isMerchantIdProvided = function (paymentProductSpecificInputs) {\r\n            if (paymentProductSpecificInputs.androidPay.merchantId) {\r\n                return paymentProductSpecificInputs.androidPay.merchantId;\r\n            } else {\r\n                _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.androidPayPaymentProductId);\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    connectsdk.AndroidPay = AndroidPay;\r\n    return AndroidPay;\r\n});","define(\"connectsdk.PublicKeyResponse\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PublicKeyResponse = function(json) {\r\n\t\tthis.json = json;\r\n\t\tthis.keyId = json.keyId;\r\n\t\tthis.publicKey = json.publicKey;\r\n\t};\r\n\r\n\tconnectsdk.PublicKeyResponse = PublicKeyResponse;\r\n\treturn PublicKeyResponse;\r\n});","define(\"connectsdk.PaymentProductPublicKeyResponse\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PaymentProductPublicKeyResponse = function(json) {\r\n\t\tthis.json = json;\r\n\t\tthis.keyId = json.keyId;\r\n\t\tthis.publicKey = json.publicKey;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductPublicKeyResponse = PaymentProductPublicKeyResponse;\r\n\treturn PaymentProductPublicKeyResponse;\r\n});","define(\"connectsdk.C2SCommunicatorConfiguration\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n    var C2SCommunicatorConfiguration = function (sessionDetails) {\r\n        this.endpoints = {\r\n                            PROD: {\r\n                                EU: {\r\n                                    API: \"https://ams1.api-ingenico.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay1.secured-by-ingenico.com\"\r\n                                }\r\n                                ,US: {\r\n                                    API: \"https://us.api-ingenico.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay2.secured-by-ingenico.com\"\r\n                                }\r\n                                ,AMS: {\r\n                                    API: \"https://ams2.api-ingenico.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay3.secured-by-ingenico.com\"\r\n                                }\r\n                                ,PAR: {\r\n                                    API: \"https://par.api-ingenico.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay4.secured-by-ingenico.com\"\r\n                                }\r\n                            }\r\n                            ,PREPROD: {\r\n                                EU: {\r\n                                    API: \"https://ams1.preprod.api-ingenico.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay1.preprod.secured-by-ingenico.com\"\r\n                                }\r\n                                ,US: {\r\n                                    API: \"https://us.preprod.api-ingenico.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay2.preprod.secured-by-ingenico.com\"\r\n                                }\r\n                                ,AMS: {\r\n                                    API: \"https://ams2.preprod.api-ingenico.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay3.preprod.secured-by-ingenico.com\"\r\n                                }\r\n                                ,PAR: {\r\n                                    API: \"https://par-preprod.api-ingenico.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay4.preprod.secured-by-ingenico.com\"\r\n                                }\r\n                            }\r\n                            ,SANDBOX: {\r\n                                EU: {\r\n                                    API: \"https://ams1.sandbox.api-ingenico.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay1.sandbox.secured-by-ingenico.com\"\r\n                                }\r\n                                ,US: {\r\n                                    API: \"https://us.sandbox.api-ingenico.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay2.sandbox.secured-by-ingenico.com\"\r\n                                }\r\n                                ,AMS: {\r\n                                    API: \"https://ams2.sandbox.api-ingenico.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay3.sandbox.secured-by-ingenico.com\"\r\n                                }\r\n                                ,PAR: {\r\n                                    API: \"https://par.sandbox.api-ingenico.com/client/v1\"\r\n                                    ,ASSETS: \"https://assets.pay4.sandbox.secured-by-ingenico.com\"\r\n                                }\r\n                            }\r\n\r\n                            // Non public settings. Only needed in GC development environment. Do not use\r\n                            // these, they will not work outside GC.\r\n                            ,INTEGRATION: {\r\n                                EU: {\r\n                                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\"\r\n                                    ,ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                                }\r\n                                ,US: {\r\n                                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\"\r\n                                    ,ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                                }\r\n                                ,AMS: {\r\n                                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\"\r\n                                    ,ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                                }\r\n                                ,PAR: {\r\n                                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\"\r\n                                    ,ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\r\n                                }\r\n                            }\r\n                            ,DEV_NAMI: {\r\n                                EU: {\r\n                                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\"\r\n                                    ,ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                                }\r\n                                ,US: {\r\n                                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\"\r\n                                    ,ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                                }\r\n                                ,AMS: {\r\n                                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\"\r\n                                    ,ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                                }\r\n                                ,PAR: {\r\n                                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\"\r\n                                    ,ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\r\n                                }\r\n                            }\r\n                            ,DEV_ISC: {\r\n                                EU: {\r\n                                    API: \"//api.gc-dev.isaac.local/client/v1\"\r\n                                    ,ASSETS: \"//rpp.gc-dev.isaac.local\"\r\n                                }\r\n                                ,US: {\r\n                                    API: \"//api.gc-ci-dev.isaac.local/client/v1\"\r\n                                    ,ASSETS: \"//rpp.gc-ci-dev.isaac.local\"\r\n                                }\r\n                                ,AMS: {\r\n                                    API: \"//api.gc-dev.isaac.local/client/v1\"\r\n                                    ,ASSETS: \"//rpp.gc-dev.isaac.local\"\r\n                                }\r\n                                ,PAR: {\r\n                                    API: \"//api.gc-dev.isaac.local/client/v1\"\r\n                                    ,ASSETS: \"//rpp.gc-dev.isaac.local\"\r\n                                }\r\n                            }\r\n                        };\r\n\r\n        this.region = sessionDetails.region;\r\n        this.environment = sessionDetails.environment || 'RPP'; // in case this is used in the RPP; the RPP will override the endpoints; by using the apiBaseUrl\r\n        this.clientSessionId = sessionDetails.clientSessionID;\r\n        this.customerId = sessionDetails.customerId;\r\n        this.apiBaseUrl = (sessionDetails.apiBaseUrl || sessionDetails.apiBaseUrl === '') ? sessionDetails.apiBaseUrl : this.endpoints[this.environment][this.region].API;\r\n        this.assetsBaseUrl = (sessionDetails.assetsBaseUrl || sessionDetails.assetsBaseUrl === '' ) ? sessionDetails.assetsBaseUrl : this.endpoints[this.environment][this.region].ASSETS;\r\n    };\r\n\r\n    connectsdk.C2SCommunicatorConfiguration = C2SCommunicatorConfiguration;\r\n    return C2SCommunicatorConfiguration;\r\n});","define(\"connectsdk.IinDetailsResponse\", [\"connectsdk.core\", \"connectsdk.promise\"], function(connectsdk, Promise) {\r\n\r\n\tvar IinDetailsResponse = function () {\r\n\t\tthis.status = '';\r\n\t\tthis.countryCode = '';\r\n\t\tthis.paymentProductId = '';\r\n\t\tthis.isAllowedInContext = '';\r\n\t\tthis.coBrands = [];\r\n\t};\r\n\tconnectsdk.IinDetailsResponse = IinDetailsResponse;\r\n\treturn IinDetailsResponse;\r\n});","define(\"connectsdk.C2SCommunicator\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.net\", \"connectsdk.Util\", \"connectsdk.PublicKeyResponse\", \"connectsdk.PaymentProductPublicKeyResponse\", \"connectsdk.IinDetailsResponse\", \"connectsdk.AndroidPay\"], function (connectsdk, Promise, Net, Util, PublicKeyResponse, PaymentProductPublicKeyResponse, IinDetailsResponse, AndroidPay) {\r\n\tvar C2SCommunicator = function (c2SCommunicatorConfiguration, paymentProduct) {\r\n\t\tvar _c2SCommunicatorConfiguration = c2SCommunicatorConfiguration;\r\n\t\tvar _util = Util.getInstance();\r\n\t\tvar _cache = {};\r\n\t\tvar _providedPaymentProduct = paymentProduct;\r\n\t\tvar that = this;\r\n\t\tvar _AndroidPay = new AndroidPay(that);\r\n\r\n\t\tvar _mapType = {\r\n\t\t\t\"expirydate\": \"tel\",\r\n\t\t\t\"string\": \"text\",\r\n\t\t\t\"numericstring\": \"tel\",\r\n\t\t\t\"integer\": \"number\",\r\n\t\t\t\"expirationDate\": \"tel\"\r\n\t\t};\r\n\r\n\t\tvar _cleanJSON = function (json, url) {\r\n\t\t\tfor (var i = 0, il = json.fields.length; i < il; i++) {\r\n\t\t\t\tvar field = json.fields[i];\r\n\t\t\t\tfield.type = (field.displayHints.obfuscate) ? \"password\" : _mapType[field.type];\r\n\r\n\t\t\t\t// helper code for templating tools like Handlebars\r\n\t\t\t\tfor (validatorKey in field.dataRestrictions.validators) {\r\n\t\t\t\t\tfield.validators = field.validators || [];\r\n\t\t\t\t\tfield.validators.push(validatorKey);\r\n\t\t\t\t}\r\n\t\t\t\tif (field.displayHints.formElement && field.displayHints.formElement.type === 'list') {\r\n\t\t\t\t\tfield.displayHints.formElement.list = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// full image paths\r\n\t\t\t\tif (field.displayHints.tooltip && field.displayHints.tooltip.image) {\r\n\t\t\t\t\tfield.displayHints.tooltip.image = url + \"/\" + field.displayHints.tooltip.image;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// The server orders in a different way, so we apply the sortorder\r\n\t\t\tjson.fields.sort(function (a, b) {\r\n\t\t\t\tif (a.displayHints.displayOrder < b.displayHints.displayOrder) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t});\r\n\t\t\t// set full image path\r\n\t\t\tjson.displayHints.logo = url + \"/\" + json.displayHints.logo;\r\n\t\t\treturn json;\r\n\t\t};\r\n\r\n\t\tvar _extendLogoUrl = function (json, url, postfix) {\r\n\t\t\tfor (var i = 0, il = json[\"paymentProduct\" + postfix].length; i < il; i++) {\r\n\t\t\t\tvar product = json[\"paymentProduct\" + postfix][i];\r\n\t\t\t\tproduct.displayHints.logo = url + \"/\" + product.displayHints.logo;\r\n\t\t\t}\r\n\t\t\tjson[\"paymentProduct\" + postfix].sort(function (a, b) {\r\n\t\t\t\tif (a.displayHints.displayOrder < b.displayHints.displayOrder) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t});\r\n\t\t\treturn json;\r\n\t\t};\r\n\r\n\t\tvar _isPaymentProductInList = function (list, paymentProductId) {\r\n\t\t\tfor (var i = list.length - 1, il = 0; i >= il; i--) {\r\n\t\t\t\tvar product = list[i];\r\n\t\t\t\tif (product && (product.id === paymentProductId)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar metadata = _util.getMetadata();\r\n\r\n\t\tthis.getBasicPaymentProducts = function (context, paymentProductSpecificInputs) {\r\n\t\t\tvar paymentProductSpecificInputs = paymentProductSpecificInputs || {};\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProducts-\" + context.totalAmount + \"_\" + context.countryCode + \"_\"\r\n\t\t\t\t\t+ context.locale + \"_\" + context.isRecurring + \"_\" + context.currency + \"_\" + JSON.stringify(paymentProductSpecificInputs);\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/products\" + \"?countryCode=\" + context.countryCode + \"&isRecurring=\" + context.isRecurring\r\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&currencyCode=\" + context.currency\r\n\t\t\t\t\t+ \"&hide=fields&locale=\" + context.locale + \"&cacheBust=\" + cacheBust)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar json = _extendLogoUrl(res.responseJSON, _c2SCommunicatorConfiguration.assetsBaseUrl, \"s\");\r\n\t\t\t\t\t\t\tif (_isPaymentProductInList(json.paymentProducts, _util.androidPayPaymentProductId)) {\r\n\t\t\t\t\t\t\t\tif (_AndroidPay.isMerchantIdProvided(paymentProductSpecificInputs)) {\r\n\t\t\t\t\t\t\t\t\t_AndroidPay.isAndroidPayAvailable(context, paymentProductSpecificInputs).then(function (isAndroidPayAvailable) {\r\n\t\t\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\r\n\t\t\t\t\t\t\t\t\t\tif (json.paymentProducts.length === 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tpromise.reject('No payment products available');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\r\n\t\t\t\t\t\t\t\t\t\tif (json.paymentProducts.length === 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tpromise.reject('No payment products available');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t//AndroidPay does not have merchantId \r\n\t\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\r\n\t\t\t\t\t\t\t\t\tconsole.warn('You have not provided a merchantId for Android Pay, you can set this in the paymentProductSpecificInputs object');\r\n\t\t\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\r\n\t\t\t\t\t\t\t\tif (json.paymentProducts.length === 0) {\r\n\t\t\t\t\t\t\t\t\tpromise.reject('No payment products available');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject('failed to retrieve Basic Payment Products', res);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getBasicPaymentProductGroups = function (context) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProductGroups-\" + context.totalAmount + \"_\" + context.countryCode + \"_\"\r\n\t\t\t\t\t+ context.locale + \"_\" + context.isRecurring + \"_\" + context.currency;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/productgroups\" + \"?countryCode=\" + context.countryCode + \"&isRecurring=\" + context.isRecurring\r\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&currencyCode=\" + context.currency\r\n\t\t\t\t\t+ \"&hide=fields&locale=\" + context.locale + \"&cacheBust=\" + cacheBust)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar json = _extendLogoUrl(res.responseJSON, _c2SCommunicatorConfiguration.assetsBaseUrl, \"Groups\");\r\n\t\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\t\tpromise.resolve(json);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProduct = function (paymentProductId, context, paymentProductSpecificInputs) {\r\n\t\t\tvar paymentProductSpecificInputs = paymentProductSpecificInputs || {};\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProduct-\" + paymentProductId + \"_\" + context.totalAmount + \"_\"\r\n\t\t\t\t\t+ context.countryCode + \"_\" + \"_\" + context.locale + \"_\" + context.isRecurring + \"_\"\r\n\t\t\t\t\t+ context.currency + \"_\" + JSON.stringify(paymentProductSpecificInputs);\r\n\t\t\tif (_util.paymentProductsThatAreNotSupportedInThisBrowser.indexOf(paymentProductId) > -1) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.reject({\r\n\t\t\t\t\t\t\"errorId\": \"48b78d2d-1b35-4f8b-92cb-57cc2638e901\",\r\n\t\t\t\t\t\t\"errors\": [{\r\n\t\t\t\t\t\t\t\"code\": \"1007\",\r\n\t\t\t\t\t\t\t\"propertyName\": \"productId\",\r\n\t\t\t\t\t\t\t\"message\": \"UNKNOWN_PRODUCT_ID\",\r\n\t\t\t\t\t\t\t\"httpStatusCode\": 404\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t});\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tif (_providedPaymentProduct && _providedPaymentProduct.id === paymentProductId) {\r\n\t\t\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t\t}, 0);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar json = _cleanJSON(_providedPaymentProduct, _c2SCommunicatorConfiguration.assetsBaseUrl);\r\n\t\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t\t}, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (_cache[cacheKey]) {\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar getPaymentProductUrl = _c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t\t+ \"/products/\" + paymentProductId + \"?countryCode=\" + context.countryCode\r\n\t\t\t\t\t\t+ \"&isRecurring=\" + context.isRecurring + \"&amount=\" + context.totalAmount\r\n\t\t\t\t\t\t+ \"&currencyCode=\" + context.currency + \"&locale=\" + context.locale;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif ((paymentProductId === _util.bancontactPaymentProductId) && \r\n\t\t\t\t\tpaymentProductSpecificInputs && \r\n\t\t\t\t\tpaymentProductSpecificInputs.bancontact && \r\n\t\t\t\t\tpaymentProductSpecificInputs.bancontact.forceBasicFlow) {\r\n\t\t\t\t\t\t// Add query parameter to products call to force basic flow for bancontact\r\n\t\t\t\t\t\tgetPaymentProductUrl += \"&forceBasicFlow=\" + paymentProductSpecificInputs.bancontact.forceBasicFlow\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgetPaymentProductUrl += \"&cacheBust=\" + cacheBust;\r\n\r\n\t\t\t\t\tNet.get(getPaymentProductUrl)\r\n\t\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t\tvar cleanedJSON = _cleanJSON(res.responseJSON, c2SCommunicatorConfiguration.assetsBaseUrl);\r\n\t\t\t\t\t\t\t\tif (paymentProductId === _util.androidPayPaymentProductId) {\r\n\t\t\t\t\t\t\t\t\tif (_AndroidPay.isMerchantIdProvided(paymentProductSpecificInputs)) {\r\n\t\t\t\t\t\t\t\t\t\t_AndroidPay.isAndroidPayAvailable(context, paymentProductSpecificInputs).then(function (isAndroidPayAvailable) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (isAndroidPayAvailable) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\t\t\t\t//_isAndroidPayAvailable returned false so android pay is not available, so reject getPaymentProduct\r\n\t\t\t\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\t\t\t//_isAndroidPayAvailable rejected so not available\r\n\t\t\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\t\t// merchantId is not provided so reject\r\n\t\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tpromise.reject('failed to retrieve Payment Product', res);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductGroup = function (paymentProductGroupId, context) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheBust = new Date().getTime()\r\n\t\t\t\t, cacheKey = \"getPaymentProductGroup-\" + paymentProductGroupId + \"_\" + context.totalAmount + \"_\"\r\n\t\t\t\t\t+ context.countryCode + \"_\" + \"_\" + context.locale + \"_\" + context.isRecurring + \"_\"\r\n\t\t\t\t\t+ context.currency;\r\n\t\t\tif (_providedPaymentProduct && _providedPaymentProduct.id === paymentProductGroupId) {\r\n\t\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar json = _cleanJSON(_providedPaymentProduct, _c2SCommunicatorConfiguration.assetsBaseUrl);\r\n\t\t\t\t\t_cache[cacheKey] = json;\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t}\r\n\t\t\t} else if (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/productgroups/\" + paymentProductGroupId + \"?countryCode=\" + context.countryCode\r\n\t\t\t\t\t+ \"&isRecurring=\" + context.isRecurring + \"&amount=\" + context.totalAmount\r\n\t\t\t\t\t+ \"&currencyCode=\" + context.currency + \"&locale=\" + context.locale + \"&cacheBust=\" + cacheBust)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar cleanedJSON = _cleanJSON(res.responseJSON, c2SCommunicatorConfiguration.assetsBaseUrl);\r\n\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductIdByCreditCardNumber = function (partialCreditCardNumber, context) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, iinDetailsResponse = new IinDetailsResponse()\r\n\t\t\t\t, cacheKey = \"getPaymentProductIdByCreditCardNumber-\" + partialCreditCardNumber;\r\n\r\n\t\t\tvar that = this;\r\n\t\t\tthis.context = context;\r\n\t\t\tif (_cache[cacheKey]) {// cache is based on digit 1-6\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tvar isEnoughDigits = function (partialCreditCardNumber) {\r\n\t\t\t\t\tif (partialCreditCardNumber.length < 6) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t};\r\n\t\t\t\tif (isEnoughDigits(partialCreditCardNumber)) {\r\n\t\t\t\t\tNet.post(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId + \"/services/getIINdetails\")\r\n\t\t\t\t\t\t.data(JSON.stringify(this.convertContextToIinDetailsContext(partialCreditCardNumber, this.context)))\r\n\t\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.json = res.responseJSON;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.countryCode = res.responseJSON.countryCode;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.paymentProductId = res.responseJSON.paymentProductId;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.isAllowedInContext = res.responseJSON.isAllowedInContext;\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.coBrands = res.responseJSON.coBrands;\r\n\t\t\t\t\t\t\t\t// check if this card is supported\r\n\t\t\t\t\t\t\t\t// if isAllowedInContext is available in the response set status and resolve\r\n\t\t\t\t\t\t\t\tif (res.responseJSON.hasOwnProperty('isAllowedInContext')) {\r\n\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"SUPPORTED\";\r\n\t\t\t\t\t\t\t\t\tif (iinDetailsResponse.isAllowedInContext === false) {\r\n\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"EXISTING_BUT_NOT_ALLOWED\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t_cache[cacheKey] = iinDetailsResponse;\r\n\t\t\t\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t//if isAllowedInContext is not available get the payment product again to determine status and resolve\r\n\t\t\t\t\t\t\t\t\tthat.getPaymentProduct(iinDetailsResponse.paymentProductId, that.context).then(function (paymentProduct) {\r\n\t\t\t\t\t\t\t\t\t\tif (paymentProduct) {\r\n\t\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"SUPPORTED\";\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNSUPPORTED\";\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = iinDetailsResponse;\r\n\t\t\t\t\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\r\n\t\t\t\t\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNKNOWN\";\r\n\t\t\t\t\t\t\t\t\t\tpromise.reject(iinDetailsResponse);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNKNOWN\";\r\n\t\t\t\t\t\t\t\tpromise.reject(iinDetailsResponse);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tiinDetailsResponse.status = \"NOT_ENOUGH_DIGITS\";\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.convertContextToIinDetailsContext = function (partialCreditCardNumber, context) {\r\n\t\t\treturn {\r\n\t\t\t\t\"bin\": partialCreditCardNumber,\r\n\t\t\t\t\"paymentContext\": {\r\n\t\t\t\t\t\"countryCode\": context.countryCode,\r\n\t\t\t\t\t\"isRecurring\": context.isRecurring,\r\n\t\t\t\t\t\"amountOfMoney\": {\r\n\t\t\t\t\t\t\"amount\": context.totalAmount,\r\n\t\t\t\t\t\t\"currencyCode\": context.currency\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.getPublicKey = function () {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"publicKey\";\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId + \"/crypto/publickey\")\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar publicKeyResponse = new PublicKeyResponse(res.responseJSON);\r\n\t\t\t\t\t\t\t_cache[cacheKey] = publicKeyResponse;\r\n\t\t\t\t\t\t\tpromise.resolve(publicKeyResponse);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(\"unable to get public key\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductPublicKey = function (paymentProductId) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"paymentProductPublicKey\";\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId + \"/products/\" + paymentProductId + \"/publicKey\")\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\tvar paymentProductPublicKeyResponse = new PaymentProductPublicKeyResponse(res.responseJSON);\r\n\t\t\t\t\t\t\t_cache[cacheKey] = paymentProductPublicKeyResponse;\r\n\t\t\t\t\t\t\tpromise.resolve(paymentProductPublicKeyResponse);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(\"unable to get payment product public key\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t}\r\n\r\n\t\tthis.getPaymentProductNetworks = function (paymentProductId, context) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"paymentProductNetworks-\" + paymentProductId + \"_\" + context.countryCode + \"_\" + context.currency + \"_\"\r\n\t\t\t\t\t+ context.totalAmount + \"_\" + context.isRecurring;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId\r\n\t\t\t\t\t+ \"/products/\" + paymentProductId + \"/networks\" + \"?countryCode=\" + context.countryCode + \"&currencyCode=\" + context.currency\r\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&isRecurring=\" + context.isRecurring)\r\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductDirectory = function (paymentProductId, currencyCode, countryCode) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"getPaymentProductDirectory-\" + paymentProductId + \"_\" + currencyCode + \"_\" + countryCode;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId + \"/products/\" + paymentProductId + \"/directory?countryCode=\" + countryCode + \"&currencyCode=\" + currencyCode)\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(\"unable to retrieve payment product directory\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.convertAmount = function (amount, source, target) {\r\n\t\t\tvar promise = new Promise()\r\n\t\t\t\t, cacheKey = \"convertAmount-\" + amount + \"_\" + source + \"_\" + target;\r\n\r\n\t\t\tif (_cache[cacheKey]) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\r\n\t\t\t\t}, 0);\r\n\t\t\t} else {\r\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId + \"/services/convert/amount?source=\" + source + \"&target=\" + target + \"&amount=\" + amount)\r\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t\t.end(function (res) {\r\n\t\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\r\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpromise.reject(\"unable to convert amount\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getThirdPartyPaymentStatus = function (paymentId) {\r\n\t\t\tvar promise = new Promise();\r\n\r\n\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId + \"/payments/\" + paymentId + \"/thirdpartystatus\")\r\n\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\r\n\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\r\n\t\t\t\t.end(function (res) {\r\n\t\t\t\t\tif (res.success) {\r\n\t\t\t\t\t\tpromise.resolve(res.responseJSON);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpromise.reject(\"unable to retrieve third party status\");\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\t};\r\n\r\n\r\n\tconnectsdk.C2SCommunicator = C2SCommunicator;\r\n\treturn C2SCommunicator;\r\n});","define(\"connectsdk.LabelTemplateElement\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar LabelTemplateElement = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.attributeKey = json.attributeKey;\r\n\t\tthis.mask = json.mask;\r\n\t\tthis.wildcardMask = json.mask ? json.mask.replace(/9/g, \"*\") : \"\";\r\n\t};\r\n\r\n\tconnectsdk.LabelTemplateElement = LabelTemplateElement;\r\n\treturn LabelTemplateElement;\r\n});","define(\"connectsdk.Attribute\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar Attribute = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.key = json.key;\r\n\t\tthis.value = json.value;\r\n\t\tthis.status = json.status;\r\n\t\tthis.mustWriteReason = json.mustWriteReason;\r\n\t};\r\n\r\n\tconnectsdk.Attribute = Attribute;\r\n\treturn Attribute;\r\n});","define(\"connectsdk.AccountOnFileDisplayHints\", [\"connectsdk.core\", \"connectsdk.LabelTemplateElement\"], function(connectsdk, LabelTemplateElement) {\r\n\r\n\tvar _parseJSON = function (_json, _labelTemplate, _labelTemplateElementByAttributeKey) {\r\n\t\tif (_json.labelTemplate) {\r\n\t\t\tfor (var i = 0, l = _json.labelTemplate.length; i < l; i++) {\r\n\t\t\t\tvar labelTemplateElement = new LabelTemplateElement(_json.labelTemplate[i]);\r\n\t\t\t\t_labelTemplate.push(labelTemplateElement);\r\n\t\t\t\t_labelTemplateElementByAttributeKey[labelTemplateElement.attributeKey] = labelTemplateElement;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar AccountOnFileDisplayHints = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.labelTemplate = [];\r\n\t\tthis.labelTemplateElementByAttributeKey = {};\r\n\r\n\t\t_parseJSON(json, this.labelTemplate, this.labelTemplateElementByAttributeKey);\r\n\t};\r\n\r\n\tconnectsdk.AccountOnFileDisplayHints = AccountOnFileDisplayHints;\r\n\treturn AccountOnFileDisplayHints;\r\n});","define(\"connectsdk.AccountOnFile\", [\"connectsdk.core\" ,\"connectsdk.AccountOnFileDisplayHints\", \"connectsdk.Attribute\"], function(connectsdk, AccountOnFileDisplayHints, Attribute) {\r\n\r\n\tvar _parseJSON = function (_json, _attributes, _attributeByKey) {\r\n\t\tif (_json.attributes) {\r\n\t\t\tfor (var i = 0, l = _json.attributes.length; i < l; i++) {\r\n\t\t\t\tvar attribute = new Attribute(_json.attributes[i]);\r\n\t\t\t\t_attributes.push(attribute);\r\n\t\t\t\t_attributeByKey[attribute.key] = attribute;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar AccountOnFile = function (json) {\r\n\t\tvar that = this;\r\n\t\tthis.json = json;\r\n\t\tthis.attributes = [];\r\n\t\tthis.attributeByKey = {};\r\n\t\tthis.displayHints = new AccountOnFileDisplayHints(json.displayHints);\r\n\t\tthis.id = json.id;\r\n\t\tthis.paymentProductId = json.paymentProductId;\r\n\r\n\t\tthis.getMaskedValueByAttributeKey = function(attributeKey) {\r\n\t\t\tvar value = this.attributeByKey[attributeKey].value;\r\n\t\t\tvar wildcardMask;\r\n\t\t\ttry {\r\n\t\t\t\twildcardMask = this.displayHints.labelTemplateElementByAttributeKey[attributeKey].wildcardMask;\r\n\t\t\t} catch (e) {}\r\n\t\t\tif (value !== undefined && wildcardMask !== undefined) {\r\n\t\t\t\tvar maskingUtil = new connectsdk.MaskingUtil();\r\n\t\t\t\treturn maskingUtil.applyMask(wildcardMask, value);\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t};\r\n\r\n\t\t_parseJSON(json, this.attributes, this.attributeByKey);\r\n\t};\r\n\r\n\tconnectsdk.AccountOnFile = AccountOnFile;\r\n\treturn AccountOnFile;\r\n});","define(\"connectsdk.PaymentProductDisplayHints\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar PaymentProductDisplayHints = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.displayOrder = json.displayOrder;\r\n\t\tthis.label = json.label;\r\n\t\tthis.logo = json.logo;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductDisplayHints = PaymentProductDisplayHints;\r\n\treturn PaymentProductDisplayHints;\r\n});","define(\"connectsdk.BasicPaymentProduct\", [\"connectsdk.core\", \"connectsdk.AccountOnFile\", \"connectsdk.PaymentProductDisplayHints\"], function(connectsdk, AccountOnFile, PaymentProductDisplayHints) {\r\n\r\n\tvar _parseJSON = function (_json, _accountsOnFile, _accountOnFileById) {\r\n\t\tif (_json.accountsOnFile) {\r\n\t\t\tfor (var i = 0, il = _json.accountsOnFile.length; i < il; i++) {\r\n\t\t\t\tvar accountOnFile = new AccountOnFile(_json.accountsOnFile[i]);\r\n\t\t\t\t_accountsOnFile.push(accountOnFile);\r\n\t\t\t\t_accountOnFileById[accountOnFile.id] = accountOnFile;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProduct = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.json.type = \"product\";\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\tthis.allowsRecurring = json.allowsRecurring;\r\n\t\tthis.allowsTokenization = json.allowsTokenization;\r\n\t\tthis.autoTokenized  = json.autoTokenized ;\r\n\t\tthis.displayHints = new PaymentProductDisplayHints(json.displayHints);\r\n\t\tthis.id = json.id;\r\n\t\tthis.maxAmount = json.maxAmount;\r\n\t\tthis.minAmount = json.minAmount;\r\n\t\tthis.paymentMethod = json.paymentMethod;\r\n\t\tthis.mobileIntegrationLevel = json.mobileIntegrationLevel;\r\n\t\tthis.usesRedirectionTo3rdParty = json.usesRedirectionTo3rdParty;\r\n\t\tthis.paymentProductGroup = json.paymentProductGroup;\r\n\r\n\t\t_parseJSON(json, this.accountsOnFile, this.accountOnFileById);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProduct = BasicPaymentProduct;\r\n\treturn BasicPaymentProduct;\r\n});","define(\"connectsdk.BasicPaymentProductGroup\", [\"connectsdk.core\", \"connectsdk.AccountOnFile\", \"connectsdk.PaymentProductDisplayHints\"], function(connectsdk, AccountOnFile, PaymentProductDisplayHints) {\r\n\r\n\tvar _parseJSON = function (_json, _accountsOnFile, _accountOnFileById) {\r\n\t\tif (_json.accountsOnFile) {\r\n\t\t\tfor (var i = 0, il = _json.accountsOnFile.length; i < il; i++) {\r\n\t\t\t\tvar accountOnFile = new AccountOnFile(_json.accountsOnFile[i]);\r\n\t\t\t\t_accountsOnFile.push(accountOnFile);\r\n\t\t\t\t_accountOnFileById[accountOnFile.id] = accountOnFile;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProductGroup = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.json.type = \"group\";\r\n\t\tthis.id = json.id;\r\n\t\tthis.displayHints = new PaymentProductDisplayHints(json.displayHints);\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\t_parseJSON(json, this.accountsOnFile, this.accountOnFileById);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProductGroup = BasicPaymentProductGroup;\r\n\treturn BasicPaymentProductGroup;\r\n});","define(\"connectsdk.MaskedString\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar MaskedString = function(formattedValue, cursorIndex) {\r\n\r\n\t\tthis.formattedValue = formattedValue;\r\n\t\tthis.cursorIndex = cursorIndex;\r\n\t};\r\n\r\n\tconnectsdk.MaskedString = MaskedString;\r\n\treturn MaskedString;\r\n});","define(\"connectsdk.MaskingUtil\", [\"connectsdk.core\", \"connectsdk.MaskedString\"], function(connectsdk, MaskedString) {\r\n\r\n\tvar _fillBuffer = function(index, offset, buffer, tempMask, valuec) {\r\n\t\tif (index+offset < valuec.length && index < tempMask.length) {\r\n\t\t\tif ((tempMask[index] === \"9\" && Number(valuec[index+offset]) > -1 && valuec[index+offset] !== \" \") || tempMask[index] === \"*\") {\r\n\t\t\t\tbuffer.push(valuec[index+offset]);\r\n\t\t\t} else {\r\n\t\t\t\tif (valuec[index+offset] === tempMask[index]) {\r\n\t\t\t\t\tbuffer.push(valuec[index+offset]);\r\n\t\t\t\t} else if (tempMask[index] !== \"9\" && tempMask[index] !== \"*\") {\r\n\t\t\t\t\tbuffer.push(tempMask[index]);\r\n\t\t\t\t\toffset--;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// offset++;\r\n\t\t\t\t\tvaluec.splice(index+offset, 1);\r\n\t\t\t\t\tindex--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t_fillBuffer(index+1, offset, buffer, tempMask, valuec);\r\n\t\t}\r\n\t};\r\n\r\n\tvar MaskingUtil = function () {\r\n\t\tthis.applyMask = function (mask, newValue, oldValue) {\r\n\t\t\tvar buffer = [],\r\n\t\t\t\t\tvaluec = newValue.split(\"\");\r\n\t\t\tif (mask) {\r\n\t\t\t\tvar maskc = mask.split(\"\"),\r\n\t\t\t\t\t\ttempMask = [];\r\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\r\n\t\t\t\t\t// the char '{' and '}' should ALWAYS be ignored\r\n\t\t\t\t\tvar c = maskc[i];\r\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\r\n\t\t\t\t\t\t// ignore\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttempMask.push(c);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// tempmask now contains the replaceable chars and the non-replaceable masks at the correct index\r\n\t\t\t\t_fillBuffer(0, 0, buffer, tempMask, valuec);\r\n\t\t\t} else {\r\n\t\t\t\t// send back as is\r\n\t\t\t\tfor (var i = 0, il = valuec.length; i < il; i++) {\r\n\t\t\t\t\tvar c = valuec[i];\r\n\t\t\t\t\tbuffer.push(c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tnewValue = buffer.join(\"\");\r\n\t\t\tvar cursor = 1;\r\n\t\t\t// calculate the cursor index\r\n\t\t\tif (oldValue) {\r\n\t\t\t\tvar tester = oldValue.split(\"\");\r\n\t\t\t\tfor (var i = 0, il = buffer.length; i < il; i++) {\r\n\t\t\t\t\tif (buffer[i] !== tester[i]) {\r\n\t\t\t\t\t\tcursor = i+1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (newValue.substring(0, newValue.length -1) === oldValue) {\r\n\t\t\t\tcursor = newValue.length + 1;\r\n\t\t\t}\r\n\t\t\treturn new MaskedString(newValue, cursor);\r\n\t\t};\r\n\t\t\r\n\t\tthis.getMaxLengthBasedOnMask = function (mask) {\r\n\t\t\tif (mask) {\r\n\t\t\t\tvar maskc = mask.split(\"\"),\r\n\t\t\t\t\t\tnewLength = -1;\r\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\r\n\t\t\t\t\tnewLength++;\r\n\t\t\t\t\tvar c = maskc[i];\r\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\r\n\t\t\t\t\t\tnewLength--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn newLength;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.removeMask = function (mask, value) {\r\n\t\t\t// remove the mask from the masked input\r\n\t\t\tvar buffer = [],\r\n\t\t\t\t\tvaluec = (value) ? value.split(\"\") : [];\r\n\t\t\tif (mask) {\r\n\t\t\t\tvar maskc = mask.split(\"\"),\r\n\t\t\t\t\t\tvalueIndex = -1,\r\n\t\t\t\t\t\tinMask = false;\r\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\r\n\t\t\t\t\tvalueIndex++;\r\n\t\t\t\t\t// the char '{' and '}' should ALWAYS be ignored\r\n\t\t\t\t\tvar c = maskc[i];\r\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\r\n\t\t\t\t\t\tvalueIndex--;\r\n\t\t\t\t\t\tif (c === \"{\") {\r\n\t\t\t\t\t\t\tinMask = true;\r\n\t\t\t\t\t\t} else if (c === \"}\") {\r\n\t\t\t\t\t\t\tinMask = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (inMask && valuec[valueIndex]) {\r\n\t\t\t\t\t\t\tbuffer.push(valuec[valueIndex]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// send back as is\r\n\t\t\t\tfor (var i = 0, il = valuec.length; i < il; i++) {\r\n\t\t\t\t\tvar c = valuec[i];\r\n\t\t\t\t\tbuffer.push(c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn buffer.join(\"\").trim();\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.MaskingUtil = MaskingUtil;\r\n\treturn MaskingUtil;\r\n});","define(\"connectsdk.ValidationRuleLuhn\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleLuhn = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n\t\tthis.validate = function (value) {\r\n\t\t\tvar luhnArr = [[0,2,4,6,8,1,3,5,7,9],[0,1,2,3,4,5,6,7,8,9]]\r\n\t\t\t\t,sum = 0;\r\n\t\t\t\t\r\n\t   \t\tvalue.replace(/\\D+/g,\"\").replace(/[\\d]/g, function(c, p, o) {\r\n\t\t        sum += luhnArr[ (o.length-p)&1 ][ parseInt(c,10) ];\r\n\t\t    });\r\n\t\t    return (sum%10 === 0) && (sum > 0);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleLuhn = ValidationRuleLuhn;\r\n\treturn ValidationRuleLuhn;\r\n});","define(\"connectsdk.ValidationRuleExpirationDate\", [\"connectsdk.core\"], function (connectsdk) {\r\n\r\n\tvar _validateDateFormat = function (value) {\r\n\t\tvar pattern = /\\d{4}|\\d{6}$/g;\r\n\t\treturn pattern.test(value);\r\n\t};\r\n\r\n\tvar ValidationRuleExpirationDate = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.type = json.type,\r\n\t\t\tthis.errorMessageId = json.type;\r\n\r\n\t\t// value is mmYY or mmYYYY\r\n\t\tthis.validate = function (value) {\r\n\t\t\tvalue = value.replace(/[^\\d]/g, '');\r\n\t\t\tif (value.length === 4) {\r\n\t\t\t\tsplit = [value.substring(0, 2), \"20\" + value.substring(2, 4)];\r\n\t\t\t} else if (value.length === 6) {\r\n\t\t\t\tsplit = [value.substring(0, 2), value.substring(2, 6)];\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (_validateDateFormat(value)) {\r\n\t\t\t\tvar now = new Date(new Date().getFullYear(), new Date().getMonth(), 1);\r\n\t\t\t\tvar expirationDate = new Date(split[1], split[0] - 1, 1);\r\n\t\t\t\tif (expirationDate.getMonth() !== Number(split[0] - 1) || expirationDate.getFullYear() !== Number(split[1])) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn expirationDate >= now; // the expiration month could be THIS month but that is still valid!\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleExpirationDate = ValidationRuleExpirationDate;\r\n\treturn ValidationRuleExpirationDate;\r\n});","define(\"connectsdk.ValidationRuleFixedList\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleFixedList = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n\t\tthis.allowedValues = json.attributes.allowedValues;\r\n\t\t\r\n\t\tthis.validate = function (value) {\r\n\t\t\tfor (var i = 0, il = this.allowedValues.length; i < il; i++) {\r\n\t\t\t\tif (this.allowedValues[i] === value) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleFixedList = ValidationRuleFixedList;\r\n\treturn ValidationRuleFixedList;\r\n});","define(\"connectsdk.ValidationRuleLength\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleLength = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n        this.maxLength = json.attributes.maxLength;\r\n\t\tthis.minLength = json.attributes.minLength;\r\n\t\t\r\n\t\tthis.validate = function (value) {\r\n\t\t\treturn this.minLength <= value.length && value.length <= this.maxLength;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleLength = ValidationRuleLength;\r\n\treturn ValidationRuleLength;\r\n});","define(\"connectsdk.ValidationRuleRange\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleRange = function(json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n        this.maxValue = json.attributes.maxValue;\r\n\t\tthis.minValue = json.attributes.minValue;\r\n\t\t\r\n\t\tthis.validate = function(value) {\r\n\t\t\tif (isNaN(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvalue = Number(value);\r\n\t\t\treturn this.minValue <= value && value <= this.maxValue;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleRange = ValidationRuleRange;\r\n\treturn ValidationRuleRange;\r\n});","define(\"connectsdk.ValidationRuleRegularExpression\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleRegularExpression = function(json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n\t\tthis.regularExpression = json.attributes.regularExpression;\r\n\t\t\r\n\t\tthis.validate = function(value) {\r\n\t\t\tvar regexp = new RegExp(this.regularExpression);\r\n\t\t\treturn regexp.test(value);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleRegularExpression = ValidationRuleRegularExpression;\r\n\treturn ValidationRuleRegularExpression;\r\n});","define(\"connectsdk.ValidationRuleEmailAddress\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleEmailAddress = function(json) {\r\n        this.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n        \r\n\t\tthis.validate = function(value) {\r\n\t\t\tvar regexp = new RegExp(/^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i);\r\n\t\t\treturn regexp.test(value);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleEmailAddress = ValidationRuleEmailAddress;\r\n\treturn ValidationRuleEmailAddress;\r\n});","define(\"connectsdk.ValidationRuleBoletoBancarioRequiredness\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValidationRuleBoletoBancarioRequiredness = function (json) {\r\n\t\tthis.json = json;\r\n        this.type = json.type,\r\n        this.errorMessageId = json.type;\r\n        this.fiscalNumberLength = json.attributes.fiscalNumberLength;\r\n\t\t\r\n\t\tthis.validate = function (value, fiscalNumberValue) {\r\n\t\t\treturn (fiscalNumberValue.length === this.fiscalNumberLength && value.length > 0) || fiscalNumberValue.length !== this.fiscalNumberLength;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.ValidationRuleBoletoBancarioRequiredness = ValidationRuleBoletoBancarioRequiredness;\r\n\treturn ValidationRuleBoletoBancarioRequiredness;\r\n});","define(\"connectsdk.ValidationRuleFactory\", [\"connectsdk.core\", \"connectsdk.ValidationRuleEmailAddress\", \"connectsdk.ValidationRuleExpirationDate\", \"connectsdk.ValidationRuleFixedList\", \"connectsdk.ValidationRuleLength\", \"connectsdk.ValidationRuleLuhn\", \"connectsdk.ValidationRuleRange\", \"connectsdk.ValidationRuleRegularExpression\", \"connectsdk.ValidationRuleBoletoBancarioRequiredness\"], function (connectsdk, ValidationRuleEmailAddress, ValidationRuleExpirationDate, ValidationRuleFixedList, ValidationRuleLength, ValidationRuleLuhn, ValidationRuleRange, ValidationRuleRegularExpression, ValidationRuleBoletoBancarioRequiredness) {\r\n\r\n    var ValidationRuleFactory = function () {\r\n\r\n        this.makeValidator = function (json) {\r\n            // create new class based on the rule\r\n            try {\r\n                var classType = json.type.charAt(0).toUpperCase() + json.type.slice(1), // camel casing\r\n                    className = eval(\"ValidationRule\" + classType);\r\n                return new className(json);\r\n            } catch (e) {\r\n                console.warn('no validator for ', classType);\r\n            }\r\n            return null;\r\n        };\r\n    };\r\n\r\n    connectsdk.ValidationRuleFactory = ValidationRuleFactory;\r\n    return ValidationRuleFactory;\r\n});","define(\"connectsdk.DataRestrictions\", [\"connectsdk.core\", \"connectsdk.ValidationRuleExpirationDate\", \"connectsdk.ValidationRuleFixedList\", \"connectsdk.ValidationRuleLength\", \"connectsdk.ValidationRuleLuhn\", \"connectsdk.ValidationRuleRange\", \"connectsdk.ValidationRuleRegularExpression\", \"connectsdk.ValidationRuleEmailAddress\", \"connectsdk.ValidationRuleFactory\"], function(connectsdk, ValidationRuleExpirationDate, ValidationRuleFixedList, ValidationRuleLength, ValidationRuleLuhn, ValidationRuleRange, ValidationRuleRegularExpression, ValidationRuleEmailAddress, ValidationRuleFactory) {\r\n\r\n\tvar DataRestrictions = function (json, mask) {\r\n\r\n\t\tvar _parseJSON = function (_json, _validationRules, _validationRuleByType) {\r\n\t\t    var validationRuleFactory = new ValidationRuleFactory();\r\n\t\t\tif (_json.validators) {\r\n\t\t\t\tfor (var key in _json.validators) {\r\n\t\t\t\t\tvar validationRule = validationRuleFactory.makeValidator({type: key, attributes: _json.validators[key]});\r\n\t\t\t\t\tif (validationRule) {\r\n\t\t\t\t\t\t_validationRules.push(validationRule);\r\n\t\t\t\t\t\t_validationRuleByType[validationRule.type] = validationRule;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.json = json;\r\n\t\tthis.isRequired = json.isRequired;\r\n\t\tthis.validationRules = [];\r\n\t\tthis.validationRuleByType = {};\r\n\t\t\r\n\t\t_parseJSON(json, this.validationRules, this.validationRuleByType);\r\n\t};\r\n\r\n\tconnectsdk.DataRestrictions = DataRestrictions;\r\n\treturn DataRestrictions;\r\n});","define(\"connectsdk.ValueMappingElement\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar ValueMappingElement = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.displayName = json.displayName;\r\n\t\tthis.value = json.value;\r\n\t};\r\n\r\n\tconnectsdk.ValueMappingElement = ValueMappingElement;\r\n\treturn ValueMappingElement;\r\n});","define(\"connectsdk.FormElement\", [\"connectsdk.core\", \"connectsdk.ValueMappingElement\"], function(connectsdk, ValueMappingElement) {\r\n\r\n\tvar FormElement = function (json) {\r\n\r\n\t\tvar _parseJSON = function (_json, _valueMapping) {\r\n\t\t\tif (_json.valueMapping) {\r\n\t\t\t\tfor (var i = 0, l = _json.valueMapping.length; i < l; i++) {\r\n\t\t\t\t\t_valueMapping.push(new ValueMappingElement(_json.valueMapping[i]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.json = json;\r\n\t\tthis.type = json.type;\r\n\t\tthis.valueMapping = [];\r\n\t\t\r\n\t\t_parseJSON(json, this.valueMapping);\r\n\t};\r\n\r\n\tconnectsdk.FormElement = FormElement;\r\n\treturn FormElement;\r\n});","define(\"connectsdk.Tooltip\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar Tooltip = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.image = json.image;\r\n\t\tthis.label = json.label;\r\n\t};\r\n\r\n\tconnectsdk.Tooltip = Tooltip;\r\n\treturn Tooltip;\r\n});","define(\"connectsdk.PaymentProductFieldDisplayHints\", [\"connectsdk.core\", \"connectsdk.Tooltip\", \"connectsdk.FormElement\"], function(connectsdk, Tooltip, FormElement) {\r\n\r\n\tvar PaymentProductFieldDisplayHints = function (json) {\r\n\t\tthis.json = json;\r\n \t\tthis.displayOrder = json.displayOrder;\r\n\t\tif (json.formElement) {\r\n\t\t\tthis.formElement = new FormElement(json.formElement);\r\n\t\t}\r\n\t\tthis.label = json.label;\r\n\t\tthis.mask = json.mask;\r\n\t\tthis.obfuscate = json.obfuscate;\r\n\t\tthis.placeholderLabel = json.placeholderLabel;\r\n\t\tthis.preferredInputType = json.preferredInputType;\r\n\t\tthis.tooltip = json.tooltip? new Tooltip(json.tooltip): undefined;\r\n\t\tthis.alwaysShow = json.alwaysShow;\r\n\t\tthis.wildcardMask = json.mask ? json.mask.replace(/9/g, \"*\") : \"\";\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductFieldDisplayHints = PaymentProductFieldDisplayHints;\r\n\treturn PaymentProductFieldDisplayHints;\r\n});","define(\"connectsdk.PaymentProductField\", [\"connectsdk.core\", \"connectsdk.PaymentProductFieldDisplayHints\", \"connectsdk.DataRestrictions\", \"connectsdk.MaskingUtil\"], function(connectsdk, PaymentProductFieldDisplayHints, DataRestrictions, MaskingUtil) {\r\n\tvar PaymentProductField = function (json) {\r\n\t\tthis.json = json;\r\n\t\tthis.displayHints = new PaymentProductFieldDisplayHints(json.displayHints);\r\n\t\tthis.dataRestrictions = new DataRestrictions(json.dataRestrictions, this.displayHints.mask);\r\n\t\tthis.id = json.id;\r\n\t\tthis.type = json.type;\r\n\t\tvar _errorCodes = [];\r\n\r\n\t\tthis.getErrorCodes = function (value) {\r\n\t\t\tif (value) {\r\n\t\t\t\t_errorCodes = [];\r\n\t\t\t\tthis.isValid(value);\r\n\t\t\t}\r\n\t\t\treturn _errorCodes;\r\n\t\t};\r\n\t\tthis.isValid = function (value) {\r\n\t\t\t// isValid checks all datarestrictions\r\n\t\t\tvar validators = this.dataRestrictions.validationRules;\r\n\t\t\tvar hasError = false;\r\n\t\t\tvalue = this.removeMask(value);\r\n\t\t\tfor (var i = 0, il = validators.length; i < il; i++) {\r\n\t\t\t\tvar validator = validators[i];\r\n\t\t\t\tif (!validator.validate(value)) {\r\n\t\t\t\t\thasError = true;\r\n\t\t\t\t\t_errorCodes.push(validator.errorMessageId);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn !hasError;\r\n\t\t};\r\n\t\tthis.applyMask = function (newValue, oldValue) {\r\n\t\t\tvar maskingUtil = new MaskingUtil();\r\n\t\t\treturn maskingUtil.applyMask(this.displayHints.mask, newValue, oldValue);\r\n\t\t};\r\n\t\tthis.applyWildcardMask = function (newValue, oldValue) {\r\n\t\t\tvar maskingUtil = new MaskingUtil();\r\n\t\t\treturn maskingUtil.applyMask(this.displayHints.wildcardMask, newValue, oldValue);\r\n\t\t};\r\n\t\tthis.removeMask = function (value) {\r\n\t\t\tvar maskingUtil = new MaskingUtil();\r\n\t\t\treturn maskingUtil.removeMask(this.displayHints.mask, value);\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductField = PaymentProductField;\r\n\treturn PaymentProductField;\r\n});","define(\"connectsdk.PaymentProduct\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\", \"connectsdk.PaymentProductField\"], function(connectsdk, BasicPaymentProduct, PaymentProductField) {\r\n\r\n\tvar _parseJSON = function (_json, _paymentProductFields, _paymentProductFieldById) {\r\n\t\tif (_json.fields) {\r\n\t\t\tfor (var i = 0, il = _json.fields.length; i < il; i++) {\r\n\t\t\t\tvar paymentProductField = new PaymentProductField(_json.fields[i]);\r\n\t\t\t\t_paymentProductFields.push(paymentProductField);\r\n\t\t\t\t_paymentProductFieldById[paymentProductField.id] = paymentProductField;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar PaymentProduct = function (json) {\r\n\t\tvar basicPaymentProduct = new BasicPaymentProduct(json);\r\n\t\tbasicPaymentProduct.json = json;\r\n\t\tbasicPaymentProduct.paymentProductFields = [];\r\n\t\tbasicPaymentProduct.paymentProductFieldById = {};\r\n\r\n\t\t_parseJSON(basicPaymentProduct.json, basicPaymentProduct.paymentProductFields, basicPaymentProduct.paymentProductFieldById);\r\n\r\n\t\treturn basicPaymentProduct;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProduct = PaymentProduct;\r\n\treturn PaymentProduct;\r\n});","define(\"connectsdk.PaymentProductGroup\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\", \"connectsdk.PaymentProductField\"], function(connectsdk, BasicPaymentProduct, PaymentProductField) {\r\n\r\n\tvar _parseJSON = function (_json, _paymentProductFields, _paymentProductFieldById) {\r\n\t\tif (_json.fields) {\r\n\t\t\tfor (var i = 0, il = _json.fields.length; i < il; i++) {\r\n\t\t\t\tvar paymentProductField = new PaymentProductField(_json.fields[i]);\r\n\t\t\t\t_paymentProductFields.push(paymentProductField);\r\n\t\t\t\t_paymentProductFieldById[paymentProductField.id] = paymentProductField;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar PaymentProductGroup = function (json) {\r\n\t\tvar basicPaymentProduct = new BasicPaymentProduct(json);\r\n\t\tbasicPaymentProduct.json = json;\r\n\t\tbasicPaymentProduct.json.type = \"group\";\r\n\t\tbasicPaymentProduct.paymentProductFields = [];\r\n\t\tbasicPaymentProduct.paymentProductFieldById = {};\r\n\r\n\t\t_parseJSON(basicPaymentProduct.json, basicPaymentProduct.paymentProductFields, basicPaymentProduct.paymentProductFieldById);\r\n\r\n\t\treturn basicPaymentProduct;\r\n\t};\r\n\r\n\tconnectsdk.PaymentProductGroup = PaymentProductGroup;\r\n\treturn PaymentProductGroup;\r\n});","define(\"connectsdk.BasicPaymentProducts\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\"], function(connectsdk, BasicPaymentProduct) {\r\n\r\n\tvar _parseJson = function (_json, _paymentProducts, _accountsOnFile, _paymentProductById, _accountOnFileById, _paymentProductByAccountOnFileId) {\r\n\t\tif (_json.paymentProducts) {\r\n\t\t\tfor (var i = 0, il = _json.paymentProducts.length; i < il; i++) {\r\n\t\t\t\tvar paymentProduct = new BasicPaymentProduct(_json.paymentProducts[i]);\r\n\t\t\t\t_paymentProducts.push(paymentProduct);\r\n\t\t\t\t_paymentProductById[paymentProduct.id] = paymentProduct;\r\n\r\n\t\t\t\tif (paymentProduct.accountsOnFile) {\r\n\t\t\t\t\tvar aofs = paymentProduct.accountsOnFile;\r\n\t\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\r\n\t\t\t\t\t\tvar aof = aofs[j];\r\n\t\t\t\t\t\t_accountsOnFile.push(aof);\r\n\t\t\t\t\t\t_accountOnFileById[aof.id] = aof;\r\n\t\t\t\t\t\t_paymentProductByAccountOnFileId[aof.id] = paymentProduct;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProducts = function (json) {\r\n\t\tthis.basicPaymentProducts = [];\r\n\t\tthis.basicPaymentProductById = {};\r\n\t\tthis.basicPaymentProductByAccountOnFileId = {};\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\tthis.json = json;\r\n\r\n\t\t_parseJson(json, this.basicPaymentProducts, this.accountsOnFile, this.basicPaymentProductById, this.accountOnFileById, this.basicPaymentProductByAccountOnFileId);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProducts = BasicPaymentProducts;\r\n\treturn BasicPaymentProducts;\r\n});","define(\"connectsdk.BasicPaymentProductGroups\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProductGroup\"], function(connectsdk, BasicPaymentProductGroup) {\r\n\r\n\tvar _parseJson = function (_json, _paymentProductGroups, _accountsOnFile, _paymentProductGroupById, _accountOnFileById) {\r\n\t\tif (_json.paymentProductGroups) {\r\n\t\t\tfor (var i = 0, il = _json.paymentProductGroups.length; i < il; i++) {\r\n\t\t\t\tvar paymentProductGroup = new BasicPaymentProductGroup(_json.paymentProductGroups[i]);\r\n\t\t\t\t_paymentProductGroups.push(paymentProductGroup);\r\n\t\t\t\t_paymentProductGroupById[paymentProductGroup.id] = paymentProductGroup;\r\n\r\n\t\t\t\tif (paymentProductGroup.accountsOnFile) {\r\n\t\t\t\t\tvar aofs = paymentProductGroup.accountsOnFile;\r\n\t\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\r\n\t\t\t\t\t\tvar aof = aofs[j];\r\n\t\t\t\t\t\t_accountsOnFile.push(aof);\r\n\t\t\t\t\t\t_accountOnFileById[aof.id] = aof;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tvar BasicPaymentProductGroups = function (json) {\r\n\t\tthis.basicPaymentProductGroups = [];\r\n\t\tthis.basicPaymentProductGroupById = {};\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\tthis.json = json;\r\n\r\n\t\t_parseJson(json, this.basicPaymentProductGroups, this.accountsOnFile, this.basicPaymentProductGroupById, this.accountOnFileById);\r\n\t};\r\n\r\n\tconnectsdk.BasicPaymentProductGroups = BasicPaymentProductGroups;\r\n\treturn BasicPaymentProductGroups;\r\n});","define(\"connectsdk.BasicPaymentItems\", [\"connectsdk.core\"], function(connectsdk) {\r\n\t\"use strict\";\r\n\r\n\t\tvar _parseJson = function (_products, _groups, _basicPaymentItems) {\r\n\t\tvar doRemove = [];\r\n\t\tif (_groups) {\r\n\t\t\tfor (var i = 0, il = _groups.basicPaymentProductGroups.length; i < il; i++) {\r\n\t\t\t\tvar groupId = _groups.basicPaymentProductGroups[i].id,\r\n\t\t\t\t\t\tgroupReplaced = false;\r\n\t\t\t\tfor (var j = 0, jl = _products.basicPaymentProducts.length; j < jl; j++) {\r\n\t\t\t\t\tvar productMethod = _products.basicPaymentProducts[j].paymentProductGroup;\r\n\t\t\t\t\tif (productMethod === groupId && groupReplaced === false) {\r\n\t\t\t\t\t\t// replace instance by group\r\n\t\t\t\t\t\t_products.basicPaymentProducts.splice(j, 1, _groups.basicPaymentProductGroups[i]);\r\n\t\t\t\t\t\tgroupReplaced = true;\r\n\t\t\t\t\t} else if (productMethod === groupId && groupReplaced === true) {\r\n\t\t\t\t\t\t// mark for removal\r\n\t\t\t\t\t\tdoRemove.push(j);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (var i = doRemove.length -1, il = 0; i >= il; i--) {\r\n\t\t\t\t_products.basicPaymentProducts.splice(doRemove[i], 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\t_basicPaymentItems.basicPaymentItems = JSON.parse(JSON.stringify(_products.basicPaymentProducts));\r\n\t\tfor (var i = 0, il = _basicPaymentItems.basicPaymentItems.length; i < il; i++) {\r\n\t\t\tvar basicPaymentItem = _basicPaymentItems.basicPaymentItems[i];\r\n\t\t\t_basicPaymentItems.basicPaymentItemById[basicPaymentItem.id] = basicPaymentItem;\r\n\t\t\tif (basicPaymentItem.accountsOnFile) {\r\n\t\t\t\tvar aofs = basicPaymentItem.accountsOnFile;\r\n\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\r\n\t\t\t\t\tvar aof = aofs[j];\r\n\t\t\t\t\t_basicPaymentItems.accountsOnFile.push(aof);\r\n\t\t\t\t\t_basicPaymentItems.accountOnFileById[aof.id] = aof;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\tvar BasicPaymentItems = function (products, groups) {\r\n\t\tthis.basicPaymentItems = [];\r\n\t\tthis.basicPaymentItemById = {};\r\n\t\tthis.accountsOnFile = [];\r\n\t\tthis.accountOnFileById = {};\r\n\t\t_parseJson(products, groups, this);\r\n\t};\r\n\tconnectsdk.BasicPaymentItems = BasicPaymentItems;\r\n\treturn BasicPaymentItems;\r\n});","define(\"connectsdk.PaymentRequest\", [\"connectsdk.core\"], function(connectsdk) {\r\n  var PaymentRequest = function(clientSessionID) {\r\n    var _clientSessionID = clientSessionID;\r\n    var _fieldValues = {};\r\n    var _paymentProduct = null;\r\n    var _accountOnFile = null;\r\n    var _tokenize = false;\r\n\r\n    this.isValid = function() {\r\n      var errors = this.getErrorMessageIds();\r\n      // besides checking the fields for errors check if all mandatory fields are present as well\r\n      var paymentProduct = this.getPaymentProduct();\r\n      if (!paymentProduct) {\r\n        return false;\r\n      }\r\n      var allRequiredFieldsPresent = true;\r\n      for (var i = 0; i < paymentProduct.paymentProductFields.length; i++) {\r\n        var field = paymentProduct.paymentProductFields[i];\r\n        if (field.dataRestrictions.isRequired) {\r\n          // is this field present in the request?\r\n          var storedValue = this.getValue(field.id);\r\n          if (!storedValue && !this.getAccountOnFile()) {\r\n              // if we have an acoount on file the account on file could have the field, so we can ignore it\r\n            allRequiredFieldsPresent = false;\r\n          }\r\n        }\r\n      }\r\n      return errors.length === 0 && allRequiredFieldsPresent;\r\n    };\r\n    this.setValue = function(paymentProductFieldId, value) {\r\n      _fieldValues[paymentProductFieldId] = value;\r\n    };\r\n    this.setTokenize = function(tokenize) {\r\n      _tokenize = tokenize;\r\n    };\r\n    this.getTokenize = function() {\r\n      return _tokenize;\r\n    };\r\n    this.getErrorMessageIds = function() {\r\n      var errors = [];\r\n      for (key in _fieldValues) {\r\n        var paymentProductField = _paymentProduct.paymentProductFieldById[key];\r\n        if (paymentProductField) {\r\n          errors = errors.concat(paymentProductField.getErrorCodes(_fieldValues[key]));\r\n        }\r\n      }\r\n      return errors;\r\n    };\r\n    this.getValue = function(paymentProductFieldId) {\r\n      return _fieldValues[paymentProductFieldId];\r\n    };\r\n    this.getValues = function() {\r\n      return _fieldValues;\r\n    };\r\n    this.getMaskedValue = function(paymentProductFieldId) {\r\n      var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\r\n      var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\r\n      return maskedString.formattedValue();\r\n    };\r\n    this.getMaskedValues = function() {\r\n      var fields = _fieldValues;\r\n      var result = [];\r\n      for (var paymentProductFieldId in fields) {\r\n        var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\r\n        var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\r\n        result[paymentProductFieldId] = maskedString.formattedValue;\r\n      }\r\n      return result;\r\n    };\r\n    this.getUnmaskedValues = function() {\r\n      var fields = _fieldValues;\r\n      var result = [];\r\n      for (var paymentProductFieldId in fields) {\r\n        var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\r\n        if (paymentProductField) {\r\n          var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\r\n          var formattedValue = maskedString.formattedValue;\r\n          result[paymentProductFieldId] = paymentProductField.removeMask(formattedValue);\r\n        }\r\n      }\r\n      return result;\r\n    };\r\n    this.setPaymentProduct = function(paymentProduct) {\r\n      if (paymentProduct.type === \"group\") {\r\n        return;\r\n      }\r\n      _paymentProduct = paymentProduct;\r\n    };\r\n    this.getPaymentProduct = function() {\r\n      return _paymentProduct;\r\n    };\r\n    this.setAccountOnFile = function(accountOnFile) {\r\n      for (var i = 0, il = accountOnFile.attributes.length; i < il; i++) {\r\n        var attribute = accountOnFile.attributes[i];\r\n        delete _fieldValues[attribute.key];\r\n      }\r\n      _accountOnFile = accountOnFile;\r\n    };\r\n    this.getAccountOnFile = function() {\r\n      return _accountOnFile;\r\n    };\r\n    this.getClientSessionID = function() {\r\n\t\t    return clientSessionID;\r\n    };\r\n  };\r\n  connectsdk.PaymentRequest = PaymentRequest;\r\n  return PaymentRequest;\r\n});","define(\"connectsdk.C2SPaymentProductContext\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n  var C2SPaymentProductContext = function (payload) {\r\n\tthis.totalAmount = payload.totalAmount;\r\n\tthis.countryCode = payload.countryCode;\r\n\tthis.isRecurring = payload.isRecurring;\r\n\tthis.currency = payload.currency;\r\n\tthis.locale = payload.locale;\r\n  };\r\n\r\n  connectsdk.C2SPaymentProductContext = C2SPaymentProductContext;\r\n  return C2SPaymentProductContext;\r\n});","define(\"connectsdk.JOSEEncryptor\", [\"connectsdk.core\"], function(connectsdk) {\r\n\r\n\tvar pki = forge.pki;\r\n\tvar asn1 = forge.asn1;\r\n\tvar CEKKEYLENGTH = 512;\r\n\tvar IVLENGTH = 128;\r\n\r\n\tvar base64UrlEncode = function(str) {\r\n\t\tstr = forge.util.encode64(str);\r\n\t\tstr = str.split('=')[0];\r\n\t\tstr = str.replace(/\\+/g, '-');\r\n\t\tstr = str.replace(/\\//g, '_');\r\n\t\treturn str;\r\n\t};\r\n\r\n\tvar createProtectedHeader = function(kid) {\r\n\t\tvar JOSEHeader = {\r\n\t\t\t\"alg\" : \"RSA-OAEP\",\r\n\t\t\t\"enc\" : \"A256CBC-HS512\",\r\n\t\t\t\"kid\" : kid\r\n\t\t};\r\n\t\treturn JSON.stringify(JOSEHeader);\r\n\t};\r\n\r\n\tvar decodePemPublicKey = function(publickeyB64Encoded) {\r\n\t\t// step 1: base64decode\r\n\t\tvar publickeyB64Decoded = forge.util.decode64(publickeyB64Encoded);\r\n\t\t// create a bytebuffer with these bytes\r\n\t\tvar buffer2 = forge.util.createBuffer(publickeyB64Decoded, 'raw');\r\n\t\t// convert DER to ASN1 object\r\n\t\tvar publickeyObject2 = forge.asn1.fromDer(buffer2);\r\n\t\t// convert to publicKey object\r\n\t\tvar publicKey2 = pki.publicKeyFromAsn1(publickeyObject2);\r\n\t\treturn publicKey2;\r\n\t};\r\n\r\n\tvar encryptContentEncryptionKey = function(CEK, publicKey) {\r\n\t\t// encrypt CEK with OAEP+SHA-1+MGF1Padding\r\n\t\tvar encryptedCEK = publicKey.encrypt(CEK, 'RSA-OAEP');\r\n\t\treturn encryptedCEK;\r\n\t};\r\n\r\n\tvar encryptPayload = function(payload, encKey, initializationVector) {\r\n\t\tvar cipher = forge.cipher.createCipher('AES-CBC', encKey);\r\n\t\tcipher.start({\r\n\t\t\tiv : initializationVector\r\n\t\t});\r\n\t\tcipher.update(forge.util.createBuffer(payload));\r\n\t\tcipher.finish();\r\n\t\treturn cipher.output.bytes();\r\n\t};\r\n\r\n\tvar calculateAdditionalAuthenticatedDataLength = function(encodededProtectedHeader) {\r\n\t\tvar buffer = forge.util.createBuffer(encodededProtectedHeader);\r\n\t\tvar lengthInBits = buffer.length() * 8;\r\n\r\n\t\tvar buffer2 = forge.util.createBuffer();\r\n\t\t// convert int to 64bit big endian\r\n\t\tbuffer2.putInt32(0);\r\n\t\tbuffer2.putInt32(lengthInBits);\r\n\t\treturn buffer2.bytes();\r\n\t};\r\n\r\n\tvar calculateHMAC = function(macKey, encodededProtectedHeader, initializationVector, cipherText, al) {\r\n\t\tvar buffer = forge.util.createBuffer();\r\n\t\tbuffer.putBytes(encodededProtectedHeader);\r\n\t\tbuffer.putBytes(initializationVector);\r\n\t\tbuffer.putBytes(cipherText);\r\n\t\tbuffer.putBytes(al);\r\n\r\n\t\tvar hmacInput = buffer.bytes();\r\n\r\n\t\tvar hmac = forge.hmac.create();\r\n\t\thmac.start(forge.sha512.create(), macKey);\r\n\t\thmac.update(hmacInput);\r\n\t\treturn hmac.digest().bytes();\r\n\t};\r\n\r\n\tvar JOSEEncryptor = function() {\r\n\r\n\t\tthis.encrypt = function(plainTextValues, publicKeyResponse) {\r\n\t\t\t// Create protected header and encode it with Base64 encoding\r\n\t\t\tvar payload = JSON.stringify(plainTextValues);\r\n\t\t\tvar protectedHeader = createProtectedHeader(publicKeyResponse.keyId);\r\n\t\t\tvar encodededProtectedHeader = base64UrlEncode(protectedHeader);\r\n\r\n\t\t\t// Create ContentEncryptionKey, is a random byte[]\r\n\t\t\tvar CEK = forge.random.getBytesSync(CEKKEYLENGTH / 8);\r\n\t\t\tvar publicKey = decodePemPublicKey(publicKeyResponse.publicKey);\r\n\r\n\t\t\t// Encrypt the contentEncryptionKey with the GC gateway publickey and encode it with Base64 encoding\r\n\t\t\tvar encryptedContentEncryptionKey = encryptContentEncryptionKey(CEK, publicKey);\r\n\t\t\tvar encodedEncryptedContentEncryptionKey = base64UrlEncode(encryptedContentEncryptionKey);\r\n\r\n\t\t\t// Split the contentEncryptionKey in ENC_KEY and MAC_KEY for using hmac\r\n\t\t\tvar macKey = CEK.substring(0, CEKKEYLENGTH / 2 / 8);\r\n\t\t\tvar encKey = CEK.substring(CEKKEYLENGTH / 2 / 8);\r\n\r\n\t\t\t// Create Initialization Vector\r\n\t\t\tvar initializationVector = forge.random.getBytesSync(IVLENGTH / 8);\r\n\t\t\tvar encodededinitializationVector = base64UrlEncode(initializationVector);\r\n\r\n\t\t\t// Encrypt content with ContentEncryptionKey and Initialization Vector\r\n\t\t\tvar cipherText = encryptPayload(payload, encKey, initializationVector);\r\n\t\t\tvar encodedCipherText = base64UrlEncode(cipherText);\r\n\r\n\t\t\t// Create Additional Authenticated Data  and Additional Authenticated Data Length\r\n\t\t\tvar al = calculateAdditionalAuthenticatedDataLength(encodededProtectedHeader);\r\n\r\n\t\t\t// Calculates HMAC\r\n\t\t\tvar calculatedHmac = calculateHMAC(macKey, encodededProtectedHeader, initializationVector, cipherText, al);\r\n\r\n\t\t\t// Truncate HMAC Value to Create Authentication Tag\r\n\t\t\tvar authenticationTag = calculatedHmac.substring(0, calculatedHmac.length / 2);\r\n\t\t\tvar encodedAuthenticationTag = base64UrlEncode(authenticationTag);\r\n\r\n\t\t\treturn encodededProtectedHeader + \".\" + encodedEncryptedContentEncryptionKey + \".\" + encodededinitializationVector + \".\" + encodedCipherText + \".\" + encodedAuthenticationTag;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.JOSEEncryptor = JOSEEncryptor;\r\n\treturn JOSEEncryptor;\r\n});","define(\"connectsdk.Encryptor\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.JOSEEncryptor\"], function(connectsdk, Promise, JOSEEncryptor) {\r\n\r\n\tvar Encryptor = function(publicKeyResponsePromise) {\r\n\t\tthis.encrypt = function(paymentRequest) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar encryptedString = '';\r\n\t\t\tpublicKeyResponsePromise.then(function (publicKeyResponse) {\r\n\t\t\t\tif (paymentRequest.isValid()) {\r\n\t\t\t\t    \r\n\t\t\t\t\tvar blob = {\r\n\t\t\t\t\t   clientSessionId: paymentRequest.getClientSessionID()\r\n\t\t\t\t\t   ,nonce: forge.util.bytesToHex(forge.random.getBytesSync(16))\r\n\t\t\t\t\t   ,paymentProductId: paymentRequest.getPaymentProduct().id\r\n                       ,tokenize: paymentRequest.getTokenize()\r\n                    };\r\n                    \r\n\t\t\t\t\tif (paymentRequest.getAccountOnFile()) {\r\n                        blob[\"accountOnFileId\"] = paymentRequest.getAccountOnFile().id;\r\n                    }\r\n                    \r\n                    var paymentValues = [], values = paymentRequest.getUnmaskedValues();\r\n                    var ownValues = Object.getOwnPropertyNames(values);\r\n\t\t\t\t\tfor (var i = 0; i < ownValues.length; i++) {\r\n\t\t\t\t\t\tvar propertyName = ownValues[i];\r\n\t\t\t\t\t\tif (propertyName !== \"length\") {\r\n\t\t\t\t\t\t\tpaymentValues.push({\r\n\t\t\t\t\t\t\t\tkey: propertyName,\r\n\t\t\t\t\t\t\t\tvalue: values[propertyName]\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n                    blob[\"paymentValues\"] = paymentValues;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// use blob to encrypt\r\n\t\t\t\t\tvar joseEncryptor = new JOSEEncryptor();\r\n\t\t\t\t\tencryptedString = joseEncryptor.encrypt(blob, publicKeyResponse);\r\n\t\t\t\t\tpromise.resolve(encryptedString);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpromise.reject(paymentRequest.getErrorMessageIds());\r\n\t\t\t\t}\r\n\t\t\t}, function (error) {\r\n\t\t\t\tpromise.reject(error);\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\t};\r\n\r\n\tconnectsdk.Encryptor = Encryptor;\r\n\treturn Encryptor;\r\n});","define(\"connectsdk.Session\", [\"connectsdk.core\", \"connectsdk.C2SCommunicator\", \"connectsdk.C2SCommunicatorConfiguration\", \"connectsdk.IinDetailsResponse\", \"connectsdk.promise\", \"connectsdk.C2SPaymentProductContext\", \"connectsdk.BasicPaymentProducts\", \"connectsdk.BasicPaymentProductGroups\", \"connectsdk.PaymentProduct\", \"connectsdk.PaymentProductGroup\", \"connectsdk.BasicPaymentItems\", \"connectsdk.PaymentRequest\", \"connectsdk.Encryptor\"], function(connectsdk, C2SCommunicator, C2SCommunicatorConfiguration, IinDetailsResponse, Promise, C2SPaymentProductContext, BasicPaymentProducts, BasicPaymentProductGroups, PaymentProduct, PaymentProductGroup, BasicPaymentItems, PaymentRequest, Encryptor) {\r\n\r\n\tvar session = function (sessionDetails, paymentProduct) {\r\n\r\n\t\tvar _c2SCommunicatorConfiguration = new C2SCommunicatorConfiguration(sessionDetails)\r\n\t\t\t,_c2sCommunicator = new C2SCommunicator(_c2SCommunicatorConfiguration, paymentProduct)\r\n\t\t\t,_paymentProductId, _paymentProduct, _paymentRequestPayload, _paymentRequest, _paymentProductGroupId, _paymentProductGroup, _session = this;\r\n\t\tthis.apiBaseUrl = _c2SCommunicatorConfiguration.apiBaseUrl;\r\n\t\tthis.assetsBaseUrl = _c2SCommunicatorConfiguration.assetsBaseUrl;\r\n\r\n\t\tthis.getBasicPaymentProducts = function(paymentRequestPayload, paymentProductSpecificInputs) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getBasicPaymentProducts(c2SPaymentProductContext, paymentProductSpecificInputs).then(function (json) {\t\t\t\r\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\r\n\t\t\t\tvar paymentProducts = new BasicPaymentProducts(json);\r\n\t\t\t\tpromise.resolve(paymentProducts);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getBasicPaymentProductGroups = function(paymentRequestPayload) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getBasicPaymentProductGroups(c2SPaymentProductContext).then(function (json) {\r\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\r\n\t\t\t\tvar paymentProductGroups = new BasicPaymentProductGroups(json);\r\n\t\t\t\tpromise.resolve(paymentProductGroups);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getBasicPaymentItems = function(paymentRequestPayload, useGroups, paymentProductSpecificInputs) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t// get products & groups\r\n\t\t\tif (useGroups) {\r\n\t\t\t\t_session.getBasicPaymentProducts(paymentRequestPayload, paymentProductSpecificInputs).then(function (products) {\r\n\t\t\t\t\t_session.getBasicPaymentProductGroups(paymentRequestPayload).then(function (groups) {\r\n\t\t\t\t\t\tvar basicPaymentItems = new BasicPaymentItems(products, groups);\r\n\t\t\t\t\t\tpromise.resolve(basicPaymentItems);\r\n\t\t\t\t\t}, function () {\r\n\t\t\t\t\t\tpromise.reject();\r\n\t\t\t\t\t});\r\n\t\t\t\t}, function () {\r\n\t\t\t\t\tpromise.reject();\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t_session.getBasicPaymentProducts(paymentRequestPayload, paymentProductSpecificInputs).then(function (products) {\r\n\t\t\t\t\tvar basicPaymentItems = new BasicPaymentItems(products, null);\r\n\t\t\t\t\tpromise.resolve(basicPaymentItems);\r\n\t\t\t\t}, function () {\r\n\t\t\t\t\tpromise.reject();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProduct = function(paymentProductId, paymentRequestPayload, paymentProductSpecificInputs) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t_paymentProductId = paymentProductId;\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getPaymentProduct(paymentProductId, c2SPaymentProductContext, paymentProductSpecificInputs).then(function (response) {\r\n\t\t\t\t_paymentProduct = new PaymentProduct(response);\r\n\t\t\t\tpromise.resolve(_paymentProduct);\r\n\t\t\t}, function () {\r\n\t\t\t\t_paymentProduct = null;\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductGroup = function(paymentProductGroupId, paymentRequestPayload) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t_paymentProductGroupId = paymentProductGroupId;\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getPaymentProductGroup(paymentProductGroupId, c2SPaymentProductContext).then(function (response) {\r\n\t\t\t\t_paymentProductGroup = new PaymentProductGroup(response);\r\n\t\t\t\tpromise.resolve(_paymentProductGroup);\r\n\t\t\t}, function () {\r\n\t\t\t\t_paymentProductGroup = null;\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t\tthis.getIinDetails = function (partialCreditCardNumber, paymentRequestPayload) {\r\n\t\t\tpartialCreditCardNumber = partialCreditCardNumber.replace(/ /g, '').substring(0,6);\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\r\n\t\t\treturn _c2sCommunicator.getPaymentProductIdByCreditCardNumber(partialCreditCardNumber, c2SPaymentProductContext);\r\n\t\t};\r\n\r\n\t\tthis.getPublicKey = function () {\r\n\t\t\treturn _c2sCommunicator.getPublicKey();\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductPublicKey = function (paymentProductId) {\r\n\t\t\treturn _c2sCommunicator.getPaymentProductPublicKey(paymentProductId);\r\n\t\t};\r\n\r\n\t\tthis.getPaymentProductNetworks = function (paymentProductId, paymentRequestPayload) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\r\n\t\t\t_c2sCommunicator.getPaymentProductNetworks(paymentProductId, c2SPaymentProductContext).then(function (response) {\r\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\r\n\t\t\t\tpromise.resolve(response);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\t\t\r\n\t\tthis.getPaymentProductDirectory = function (paymentProductId, currencyCode, countryCode) {\r\n\t\t\treturn _c2sCommunicator.getPaymentProductDirectory(paymentProductId, currencyCode, countryCode);\r\n\t\t};\r\n\r\n\t\tthis.convertAmount = function (amount, source, target) {\r\n\t\t\treturn _c2sCommunicator.convertAmount(amount, source, target);\r\n\t\t};\r\n\r\n\t\tthis.getPaymentRequest = function () {\r\n\t\t\tif (!_paymentRequest) {\r\n\t\t\t\t_paymentRequest = new PaymentRequest(sessionDetails.clientSessionID);\r\n\r\n\t\t\t}\r\n\t\t\treturn _paymentRequest;\r\n\t\t};\r\n\r\n\t\tthis.getEncryptor = function () {\r\n\t\t\tvar publicKeyResponsePromise = _c2sCommunicator.getPublicKey();\r\n\t\t\treturn new Encryptor(publicKeyResponsePromise);\r\n\t\t};\r\n\r\n\t\tthis.getThirdPartyPaymentStatus = function (paymentId) {\r\n\t\t\tvar promise = new Promise();\r\n\t\t\t_c2sCommunicator.getThirdPartyPaymentStatus(paymentId).then(function (response) {\r\n\t\t\t\tpromise.resolve(response);\r\n\t\t\t}, function () {\r\n\t\t\t\tpromise.reject();\r\n\t\t\t});\r\n\t\t\treturn promise;\r\n\t\t};\r\n\r\n\t};\r\n\tconnectsdk.Session = session;\r\n\treturn session;\r\n});"]}